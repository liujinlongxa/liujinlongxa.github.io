<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liujinlongxa的技术博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-07-10T10:32:38.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>liujinlongxa</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深入理解CoreAnimation的fillMode和isRemovedOnCompletion</title>
    <link href="http://yoursite.com/2016/07/10/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3CoreAnimation%E7%9A%84fillMode%E5%92%8CisRemovedOnCompletion/"/>
    <id>http://yoursite.com/2016/07/10/深入理解CoreAnimation的fillMode和isRemovedOnCompletion/</id>
    <published>2016-07-10T06:34:06.000Z</published>
    <updated>2016-07-10T10:32:38.000Z</updated>
    
    <content type="html">&lt;p&gt;一般在使用CoreAnimation写动画是，在定义CAAnimation时，都要加入如下两句来防止动画完成后视图的位置又还原成了原来的位置。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;animation.fillMode = kCAFillModeBoth&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;animation.isRemovedOnCompletion = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很少有文章能详细说明这两个属性的作用，今天我们就来深究一下这两个属性。&lt;/p&gt;
&lt;h2 id=&quot;fillMode&quot;&gt;&lt;a href=&quot;#fillMode&quot; class=&quot;headerlink&quot; title=&quot;fillMode&quot;&gt;&lt;/a&gt;fillMode&lt;/h2&gt;&lt;p&gt;fillMode是一个枚举值，用于表示动画在开始和结束时的状态，这样说可能不太好理解，直接看例子比较直观。&lt;/p&gt;
&lt;h3 id=&quot;kCAFillModeRemoved&quot;&gt;&lt;a href=&quot;#kCAFillModeRemoved&quot; class=&quot;headerlink&quot; title=&quot;kCAFillModeRemoved&quot;&gt;&lt;/a&gt;kCAFillModeRemoved&lt;/h3&gt;&lt;p&gt;这个是fillMode的默认值，表示在到达beginTime时才显示动画的第一帧，动画结束时，删除CALayer做的变化&lt;/p&gt;
&lt;p&gt;实例代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;touchesBegan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; move = &lt;span class=&quot;type&quot;&gt;CABasicAnimation&lt;/span&gt;(keyPath: &lt;span class=&quot;string&quot;&gt;&quot;position.y&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fromValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.toValue = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.duration = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.beginTime = &lt;span class=&quot;type&quot;&gt;CACurrentMediaTime&lt;/span&gt;() + &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fillMode = kCAFillModeRemoved&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.add(move, forKey: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码中，我们将一个View的y坐标从100移动到500，历时1s，注意开始时间我设定为了&lt;code&gt;CACurrentMediaTime() + 2.0&lt;/code&gt;，即添加动画2s后才开始执行动画，这样才能看到效果。运行结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/kCAFillModeRemoved.gif&quot; alt=&quot;kCAFillModeRemoved&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，在鼠标点击触发后，2s之后myView才移动到了动画的初始位置100开始执行动画，并且在动画结束后视图又立刻恢复到原来的位置。&lt;/p&gt;
&lt;h3 id=&quot;kCAFillModeBackwards&quot;&gt;&lt;a href=&quot;#kCAFillModeBackwards&quot; class=&quot;headerlink&quot; title=&quot;kCAFillModeBackwards&quot;&gt;&lt;/a&gt;kCAFillModeBackwards&lt;/h3&gt;&lt;p&gt;这个值表示无论是否到达beginTime，动画开始后，立刻显示动画的第一帧，修改代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;touchesBegan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; move = &lt;span class=&quot;type&quot;&gt;CABasicAnimation&lt;/span&gt;(keyPath: &lt;span class=&quot;string&quot;&gt;&quot;position.y&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fromValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.toValue = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.duration = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.beginTime = &lt;span class=&quot;type&quot;&gt;CACurrentMediaTime&lt;/span&gt;() + &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fillMode = kCAFillModeBackwards&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.add(move, forKey: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/kCAFillModeBackwards.gif&quot; alt=&quot;kCAFillModeBackwards&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，鼠标点击后，myView立刻移动到了动画的初始位置100，然后2s后开始执行动画。&lt;/p&gt;
&lt;h3 id=&quot;kCAFillModeForwards&quot;&gt;&lt;a href=&quot;#kCAFillModeForwards&quot; class=&quot;headerlink&quot; title=&quot;kCAFillModeForwards&quot;&gt;&lt;/a&gt;kCAFillModeForwards&lt;/h3&gt;&lt;p&gt;这个值表示在到达beginTime时显示动画的第一帧，在动画结束时，保持动画最后一帧的状态，直到动画被删除，修改代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;touchesBegan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; touches: Set&amp;lt;UITouch&amp;gt;, with event: UIEvent?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; move = &lt;span class=&quot;type&quot;&gt;CABasicAnimation&lt;/span&gt;(keyPath: &lt;span class=&quot;string&quot;&gt;&quot;position.y&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fromValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.toValue = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.duration = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.beginTime = &lt;span class=&quot;type&quot;&gt;CACurrentMediaTime&lt;/span&gt;() + &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fillMode = kCAFillModeForwards;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.isRemovedOnCompletion = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.add(move, forKey: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;animationDidStop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; anim: CAAnimation, finished flag: Bool)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;DispatchQueue&lt;/span&gt;.main.after(when: .now() + &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.removeAllAnimations()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码中添加了&lt;code&gt;move.isRemovedOnCompletion = false&lt;/code&gt;，即动画执行完后不立刻删除动画，默认情况下，动画执行完后会立刻删除动画。&lt;code&gt;isRemovedOnCompletion&lt;/code&gt;属性设置为false后，就不会立刻删除。然后我们还添加了&lt;code&gt;animationDidStop&lt;/code&gt;方法，这个是&lt;code&gt;CABasicAnimation&lt;/code&gt;的代理方法，在动画执行结束时会被调用。我们在这个方法里延时3s删除动画。运行效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/kCAFillModeForwards.gif&quot; alt=&quot;kCAFillModeForwards&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，鼠标点击后，myView等了2s才移动到动画初始位置，动画结束后，等待了3s，myView才恢复到原来的位置。也就是动画结束后会保持最后一帧的状态，直到动画被删除掉。&lt;/p&gt;
&lt;h3 id=&quot;kCAFillModeBoth&quot;&gt;&lt;a href=&quot;#kCAFillModeBoth&quot; class=&quot;headerlink&quot; title=&quot;kCAFillModeBoth&quot;&gt;&lt;/a&gt;kCAFillModeBoth&lt;/h3&gt;&lt;p&gt;这个值相当于kCAFillModeBackwards与kCAFillModeForwards的共同合集，即无论是否到达beginTime，动画开始后，立刻显示动画的第一帧，并且在动画结束时保持最后一帧的状态，直到动画被删除。修改代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;touchesBegan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; touches: Set&amp;lt;UITouch&amp;gt;, with event: UIEvent?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; move = &lt;span class=&quot;type&quot;&gt;CABasicAnimation&lt;/span&gt;(keyPath: &lt;span class=&quot;string&quot;&gt;&quot;position.y&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fromValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.toValue = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.duration = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.beginTime = &lt;span class=&quot;type&quot;&gt;CACurrentMediaTime&lt;/span&gt;() + &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fillMode = kCAFillModeBoth;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.isRemovedOnCompletion = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.add(move, forKey: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;animationDidStop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; anim: CAAnimation, finished flag: Bool)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;DispatchQueue&lt;/span&gt;.main.after(when: .now() + &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.removeAllAnimations()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/kCAFillModeBoth.gif&quot; alt=&quot;kCAFillModeBoth&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，鼠标点击后，myView立刻移动到了动画的初始位置，然后动画结束后，等待了3s，myView才恢复到原来的位置。&lt;/p&gt;
&lt;h2 id=&quot;更进一步的思考&quot;&gt;&lt;a href=&quot;#更进一步的思考&quot; class=&quot;headerlink&quot; title=&quot;更进一步的思考&quot;&gt;&lt;/a&gt;更进一步的思考&lt;/h2&gt;&lt;p&gt;以上就是我对fillMode的一个探究，下面再回到文章开头的那段代码&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;animation.fillMode = kCAFillModeBoth&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;animation.isRemovedOnCompletion = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这时，就很明白了，设置fillMode为&lt;code&gt;kCAFillModeBoth&lt;/code&gt;，可以使视图在动画结束时，仍然停留在动画结束的位置，直到动画被删除。设置&lt;code&gt;isRemovedOnCompletion&lt;/code&gt;为false，可以使动画在结束后不被删除，这样视图就会永远停留在动画结束的位置。&lt;/p&gt;
&lt;p&gt;乍一看没什么问题，但仔细想想还是觉得有点奇怪，动画已经结束了为什么不删除，还占着内存。如果动画少还好，如果动画非常多，每个动画执行完了都不删除的话，那内存岂不是会爆掉，这是不能接受的。有没有办法能够既让视图停留在动画结束的位置，又能在动画结束后删除动画呢？&lt;/p&gt;
&lt;p&gt;当然有，直接上代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;touchesBegan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; touches: Set&amp;lt;UITouch&amp;gt;, with event: UIEvent?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; move = &lt;span class=&quot;type&quot;&gt;CABasicAnimation&lt;/span&gt;(keyPath: &lt;span class=&quot;string&quot;&gt;&quot;position.y&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fromValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.toValue = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.duration = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.beginTime = &lt;span class=&quot;type&quot;&gt;CACurrentMediaTime&lt;/span&gt;() + &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fillMode = kCAFillModeBoth;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.add(move, forKey: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.position.y = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决方法就是在视图添加动画后，手动修改视图的位置为动画结束后的最终位置，这样动画结束后，动画就会被删除并且视图会停留在动画结束时的位置。&lt;/p&gt;
&lt;p&gt;注意：这里应该使用layer的position，不能直接修改UIView的frame，否则动画效果会不正确。&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.raywenderlich.com/store/ios-animations-by-tutorials&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS Animations by Tutorials&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一般在使用CoreAnimation写动画是，在定义CAAnimation时，都要加入如下两句来防止动画完成后视图的位置又还原成了原来的位置。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="CoreAnimation" scheme="http://yoursite.com/tags/CoreAnimation/"/>
    
  </entry>
  
  <entry>
    <title>用XCode8打开Xib后项目不能在XCode7上运行</title>
    <link href="http://yoursite.com/2016/07/03/%E7%94%A8XCode8%E6%89%93%E5%BC%80Xib%E5%90%8E%E9%A1%B9%E7%9B%AE%E4%B8%8D%E8%83%BD%E5%9C%A8XCode7%E4%B8%8A%E8%BF%90%E8%A1%8C/"/>
    <id>http://yoursite.com/2016/07/03/用XCode8打开Xib后项目不能在XCode7上运行/</id>
    <published>2016-07-03T10:56:06.000Z</published>
    <updated>2016-07-03T10:58:16.000Z</updated>
    
    <content type="html">&lt;p&gt;可以设置xib以Xcode7.x的方法打开，参考如下&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/37851459/the-document-main-storyboard-requires-xcode-8-0-or-later&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The document Main.storyboard requires Xcode 8.0 or later&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;可以设置xib以Xcode7.x的方法打开，参考如下&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/37851459/the-document-main-storyboard-requires-xcode-8-0-or
    
    </summary>
    
      <category term="iOS Tips" scheme="http://yoursite.com/categories/iOS-Tips/"/>
    
    
      <category term="其他" scheme="http://yoursite.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>Could not load the xxx image referenced from a nib in the bundle with identifier xxxx问题</title>
    <link href="http://yoursite.com/2016/07/03/Could-not-load-the-xxx-image-referenced-from-a-nib-in-the-bundle-with-identifier-xxxx%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/07/03/Could-not-load-the-xxx-image-referenced-from-a-nib-in-the-bundle-with-identifier-xxxx问题/</id>
    <published>2016-07-03T10:51:49.000Z</published>
    <updated>2016-07-03T10:52:32.000Z</updated>
    
    <content type="html">&lt;p&gt;出现在非retina的屏幕上，不能正确加载xib上的图片，只能通过代码重新设置图片。还没有找到其他解决办法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;出现在非retina的屏幕上，不能正确加载xib上的图片，只能通过代码重新设置图片。还没有找到其他解决办法。&lt;/p&gt;

    
    </summary>
    
      <category term="iOS Tips" scheme="http://yoursite.com/categories/iOS-Tips/"/>
    
    
      <category term="其他" scheme="http://yoursite.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>设置富文本字间距，文字不能居中对齐</title>
    <link href="http://yoursite.com/2016/07/03/%E8%AE%BE%E7%BD%AE%E5%AF%8C%E6%96%87%E6%9C%AC%E5%AD%97%E9%97%B4%E8%B7%9D%EF%BC%8C%E6%96%87%E5%AD%97%E4%B8%8D%E8%83%BD%E5%B1%85%E4%B8%AD%E5%AF%B9%E9%BD%90/"/>
    <id>http://yoursite.com/2016/07/03/设置富文本字间距，文字不能居中对齐/</id>
    <published>2016-07-03T10:40:19.000Z</published>
    <updated>2016-07-03T10:42:42.000Z</updated>
    
    <content type="html">&lt;p&gt;最近有一个需求，需要设置一个UILabel的字间距，我马上就想到了富文本，于是就写了下面的代码&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.text;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *attribute = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSKernAttributeName&lt;/span&gt;:@(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;built_in&quot;&gt;NSFontAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; systemFontOfSize:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;]&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attStr = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc] initWithString:str attributes:attribute];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.attributedText = attStr;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中NSKernAttributeName属性就是设置文字的字间距。但是，现在就有一个问题，设置字间距后，原本居中显示的文字，不能居中显示了。&lt;/p&gt;
&lt;p&gt;这是我设置字间距之前的label&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/3cba47225e6b1a02cfad6885a67d83ed.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是我设置了字间距后的label&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/424954a63f3e38514b84ab7277269336.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;“你”字距左边距明显要比”鸿”字的右边距要大。&lt;/p&gt;
&lt;p&gt;经过一阵Google，在StackOverflow上找到了相同的问题，链接是&lt;a href=&quot;http://stackoverflow.com/questions/23741850/nsstring-drawinrectwithattributes-not-correctly-centered-when-using-nskernattr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stackoverflow.com/questions/23741850/nsstring-drawinrectwithattributes-not-correctly-centered-when-using-nskernattr&lt;/a&gt;，根据问题回答里的做法，我把代码做了修改，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.text;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; *mutAttStr = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; alloc] initWithString:str];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[mutAttStr addAttribute:&lt;span class=&quot;built_in&quot;&gt;NSKernAttributeName&lt;/span&gt; value:@(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) range:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, str.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[mutAttStr addAttribute:&lt;span class=&quot;built_in&quot;&gt;NSFontAttributeName&lt;/span&gt; value:[&lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; systemFontOfSize:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;] range:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, str.length)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.attributedText = [mutAttStr &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改后效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/35b1f58bf08aa3dc7b827edb1da01e80.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近有一个需求，需要设置一个UILabel的字间距，我马上就想到了富文本，于是就写了下面的代码&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;l
    
    </summary>
    
      <category term="iOS Tips" scheme="http://yoursite.com/categories/iOS-Tips/"/>
    
    
      <category term="UILabel" scheme="http://yoursite.com/tags/UILabel/"/>
    
      <category term="NSAttributedString" scheme="http://yoursite.com/tags/NSAttributedString/"/>
    
  </entry>
  
  <entry>
    <title>UILabel设置lineBreakMode属性无效</title>
    <link href="http://yoursite.com/2016/07/03/UILabel%E8%AE%BE%E7%BD%AElineBreakMode%E5%B1%9E%E6%80%A7%E6%97%A0%E6%95%88/"/>
    <id>http://yoursite.com/2016/07/03/UILabel设置lineBreakMode属性无效/</id>
    <published>2016-07-03T10:09:30.000Z</published>
    <updated>2016-07-03T10:42:21.000Z</updated>
    
    <content type="html">&lt;p&gt;UILabel的lineBreakMode属性用于设置文字的截断方式，我在使用过程中，发现了一个问题，当我设置lineBreakMode为NSLineBreakByCharWrapping或NSLineBreakByWordWrapping时，有时会没有效果，它依然以NSLineBreakByClipping方式显示。&lt;/p&gt;
&lt;p&gt;经过一番Google，原来，要设置NSLineBreakByCharWrapping或NSLineBreakByWordWrapping，UILabel的numberOfLines必须是0，否则就会无效。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;UILabel的lineBreakMode属性用于设置文字的截断方式，我在使用过程中，发现了一个问题，当我设置lineBreakMode为NSLineBreakByCharWrapping或NSLineBreakByWordWrapping时，有时会没有效果，它依然以NSL
    
    </summary>
    
      <category term="iOS Tips" scheme="http://yoursite.com/categories/iOS-Tips/"/>
    
    
      <category term="UILabel" scheme="http://yoursite.com/tags/UILabel/"/>
    
  </entry>
  
  <entry>
    <title>从jekyll迁移到hexo</title>
    <link href="http://yoursite.com/2016/07/01/%E4%BB%8Ejekyll%E8%BF%81%E7%A7%BB%E5%88%B0hexo/"/>
    <id>http://yoursite.com/2016/07/01/从jekyll迁移到hexo/</id>
    <published>2016-07-01T13:24:50.000Z</published>
    <updated>2016-07-03T10:37:17.000Z</updated>
    
    <content type="html">&lt;p&gt;最近公司项目不是很忙，所以想把自己的博客好好整整，下面就是我从原先的jekyll迁移的hexo的整个过程的记录以及中间遇到的一些问题。&lt;/p&gt;
&lt;h2 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo&quot;&gt;&lt;/a&gt;安装Hexo&lt;/h2&gt;&lt;p&gt;打开终端，执行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ npm install -g hexo-cli&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后随便找个文件夹，执行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo init .&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个过程可能有些长，因为要安装很多依赖的包。&lt;/p&gt;
&lt;p&gt;执行完后，就会在这个文件中生成一些文件，如下图，这就是Hexo的主目录。然后执行命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ npm install&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个命令一定要执行，否则后面在启动本地服务器预览是会出现“Get 404”错误。&lt;/p&gt;
&lt;p&gt;其他还要执行的命令有：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ npm install hexo-renderer-ejs --save&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ npm install hexo-renderer-stylus --save&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ npm install hexo-renderer-marked --save&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ npm install hexo-server --save&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就完成了安装，然后执行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后打开浏览器，输入&lt;a href=&quot;http://127.0.0.1:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:4000/&lt;/a&gt;  ，就可以看到预览界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/5f8ddbc140ff9ec8ecbd1bb8bb119b4a.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;配置主题&quot;&gt;&lt;a href=&quot;#配置主题&quot; class=&quot;headerlink&quot; title=&quot;配置主题&quot;&gt;&lt;/a&gt;配置主题&lt;/h2&gt;&lt;p&gt;我选的是NexT主题，这个主题比较美观，而且最重要的是文档齐全，在&lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;可以找到关于这个主题的所有内容。&lt;/p&gt;
&lt;p&gt;安装主题的方法很简单，在hexo主目录执行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git clone https://github.com/iissnan/hexo-theme-next themes/next&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后修改配置文件_config.yml，添加一下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;theme: next&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后开启预览，就可以看到主题已经换成了新的主题&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/81a90b7504bc5d934c642d1395dd63ed.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;更详细的配置可以参考这个主题的&lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;数据迁移&quot;&gt;&lt;a href=&quot;#数据迁移&quot; class=&quot;headerlink&quot; title=&quot;数据迁移&quot;&gt;&lt;/a&gt;数据迁移&lt;/h2&gt;&lt;p&gt;Hexo的数据迁移很简单，只要要以前jekyll主目录下的&lt;code&gt;_post&lt;/code&gt;文件夹里的所有文件拷贝到hexo目录下的&lt;code&gt;source/_posts&lt;/code&gt;,然后在配置文件_config.yml中添加如下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;new_post_name: :year-:month-:day-:title.md&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就完成了数据迁移。其他框架的博客迁移到hexo可以参看&lt;a href=&quot;https://hexo.io/zh-cn/docs/migration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里要注意的是，之前在jekyll中，代码块是这样的格式：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;% highlight objectiveC linenos %&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; * str = &lt;span class=&quot;string&quot;&gt;@&quot;I love coding!!&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, str);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;% endhighlight %&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是在hexo不支持这样的格式，所以要全部替换成标准的Markdown代码块，这是比较蛋疼的地方。&lt;/p&gt;
&lt;p&gt;做完这些之后，再次打开预览，就可以看到原来的博客啦。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/d8627ec1356b590c21c2c6fba2cffd47.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;部署&quot;&gt;&lt;a href=&quot;#部署&quot; class=&quot;headerlink&quot; title=&quot;部署&quot;&gt;&lt;/a&gt;部署&lt;/h2&gt;&lt;p&gt;先安装hexo-deployer-git，执行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ npm install hexo-deployer-git --save&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在Github上创建一个仓库，然后开启Github Pages功能，可以参考&lt;a href=&quot;http://jingpin.jikexueyuan.com/article/33505.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后修改配置文件_config.yml,添加如下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;deploy:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  type: git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  repository: git@github.com:liujinlongxa/liujinlongxa.github.io.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  branch: master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后执行命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo deploy&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就把博客部署到了github上&lt;/p&gt;
&lt;h2 id=&quot;绑定独立域名&quot;&gt;&lt;a href=&quot;#绑定独立域名&quot; class=&quot;headerlink&quot; title=&quot;绑定独立域名&quot;&gt;&lt;/a&gt;绑定独立域名&lt;/h2&gt;&lt;p&gt;到万网购买了一个独立域名（后来才知道DNSPod的解析速度更快一些，后悔了），然后在hexo主目录下的source文件夹中创建一个名为CNAME的文件，里面填写你的独立域名，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/307f1cb10cc4a3286cc1dd01b0d4f0ce.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后重新部署一下，这样这个CNAME就会上传到Github仓库的根目录下。如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/69301b3770b43797bda6fbd110f08f87.png&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里一定要注意，要把CNAME放在source文件夹里，如果直接从Github创建CNAME，重新部署博客后，会删掉添加的CNAME。&lt;/p&gt;
&lt;p&gt;然后就是添加域名解析，打开万网域名管理后台，添加如下解析&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/f696d7662bef60f14f045484df43f22e.png&quot; alt=&quot;6&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;192.30.252.153&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;192.30.252.154&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这两个IP是Github的IP，设置完后，过一会，就可以用独立域名访问了。&lt;/p&gt;
&lt;p&gt;这样一个Hexo博客就搭建完成了。&lt;/p&gt;
&lt;h2 id=&quot;写博客&quot;&gt;&lt;a href=&quot;#写博客&quot; class=&quot;headerlink&quot; title=&quot;写博客&quot;&gt;&lt;/a&gt;写博客&lt;/h2&gt;&lt;p&gt;Hexo自带命令可以生成生成一篇新的博客，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo new post &amp;quot;helloworld&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后就会生成一篇名为”helloworld”的博客。&lt;/p&gt;
&lt;p&gt;写完博客后，然后执行下面三条命令发布博客。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo clean&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo generate&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo deploy&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里可以写一个脚本，一次性执行这三条命令。&lt;/p&gt;
&lt;h2 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;执行hexo deploy后，CNAME和README.md文件消失&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方法，把这两个文件放在source目录下，这样在部署时就会把这两个文件也放到github的根目录下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/b371a047e69935cd2c92c11169483d00.png&quot; alt=&quot;7&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行hexo deploy后，README.md被渲染成了README.html&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决方法，在_config.yml中添加如下内容即可：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;skip_render: README.md&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上就是我从Jekyll迁移到Hexo的整个过程。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NexT使用手册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.sunnyxx.com/2014/02/27/hexo_startup/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo边搭边记&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近公司项目不是很忙，所以想把自己的博客好好整整，下面就是我从原先的jekyll迁移的hexo的整个过程的记录以及中间遇到的一些问题。&lt;/p&gt;
&lt;h2 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hex
    
    </summary>
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>GMTC全球移动技术大会见闻</title>
    <link href="http://yoursite.com/2016/06/29/GMTC%E5%85%A8%E7%90%83%E7%A7%BB%E5%8A%A8%E6%8A%80%E6%9C%AF%E5%A4%A7%E4%BC%9A%E8%A7%81%E9%97%BB/"/>
    <id>http://yoursite.com/2016/06/29/GMTC全球移动技术大会见闻/</id>
    <published>2016-06-28T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;p&gt;6月24日至6月25日，我有幸参加了“GMTC全球移动技术大会”，这篇博客就是我对参见会议的一个经历和感受。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/457acda7bd3dc65f172468c45dad4a8f.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;第一天上午&quot;&gt;&lt;a href=&quot;#第一天上午&quot; class=&quot;headerlink&quot; title=&quot;第一天上午&quot;&gt;&lt;/a&gt;第一天上午&lt;/h3&gt;&lt;p&gt;会议共分为两天，第一天上午是主会场，首先是主办方开场致辞，然后是京东，阿里和微信的三个技术负责人的演讲，主要讲了移动开发的现状以及未来的一些趋势，没有涉及到具体的技术。&lt;/p&gt;
&lt;p&gt;接下来是Facebook的一个前员工分享了”Facebook iOS App技术演化10年”，讲到了很多有意思的地方，这里令我印象比较深刻的是Facebook一共有1000+的iOS工程师，这个iOS App的代码行数超过1000万行，同时他也分享了Facebook App演化过程中走过的一些完了，例如H5，CoreData等。&lt;/p&gt;
&lt;p&gt;接下来也是一个硅谷的iOS开发者分享了“Mobile Growth 的方法和实践”，由于之前从来没有接触过Growth，所以听的也是一知半解，感觉与产品运营更相关。这就是第一天早上的整个会议。&lt;/p&gt;
&lt;h3 id=&quot;第一天下午&quot;&gt;&lt;a href=&quot;#第一天下午&quot; class=&quot;headerlink&quot; title=&quot;第一天下午&quot;&gt;&lt;/a&gt;第一天下午&lt;/h3&gt;&lt;p&gt;从第一天的下午开始，就开始分了几个分会场进行具体的技术分享。第一天下午有三个分会场，分别是动态化，Swift和新技术专场。&lt;/p&gt;
&lt;p&gt;我先是听了”函数式编程中的Swift与Swift中的函数式编程”，分享者是SwiftyJSON的作者，由于之前在使用RAC时已经接触过函数式编程，所以这个并不陌生，整个演讲主要是分享了函数式编程的一些思想。&lt;/p&gt;
&lt;p&gt;接下来我有听了“RN项目实战优化之路”，由于之前从来没接触过ReactNative，所有听得也是云里雾里，听到一半就跑去听”JSPatch成长之路”。&lt;/p&gt;
&lt;p&gt;JSPatch目前是当前比较热门的一种iOS热修复技术，演讲者就是JSPatch的作者，他分享了整个JSPatch发展过程中遇到的问题以及解决方案，很佩服作者为了推广JSPatch而做的各项工作，包括代码转换工具、XCode插件、JSPatch平台等等，这些工作极大地促进了JSPatch的推广使用，有机会我一定要尝试一下JSPatch。&lt;/p&gt;
&lt;p&gt;听完了JSPatch，我又去听了“当泛型遇上协议”，是猿题库的iOS负责人做的分享，之前看过他写的关于Swift的博客，演讲中，作者通过具体的代码分享自己在Swift的协议与泛型上的实践经验，如果能把泛型使用好确实能极大地简化自己的代码。&lt;/p&gt;
&lt;p&gt;最后我又听了”聚划算iOS平台动态化方案LuaView”，分享者是阿里聚划算的技术专家，LuaView提供了一种使用Lua脚本动态更新App的方案，演讲者讲解了LuaView的基本原理、使用以及对LuaView未来发展的一些规划。&lt;/p&gt;
&lt;p&gt;这样，第一天的会议就结束了。&lt;/p&gt;
&lt;h3 id=&quot;第二天上午&quot;&gt;&lt;a href=&quot;#第二天上午&quot; class=&quot;headerlink&quot; title=&quot;第二天上午&quot;&gt;&lt;/a&gt;第二天上午&lt;/h3&gt;&lt;p&gt;第二天上午也有三个分会场，分别是架构演进、VR/AR、移动解决方案。&lt;/p&gt;
&lt;p&gt;我先听了“360°全景视频播放器的实现原理”，演讲者是阿里的高级iOS工程师，分享了如何使用OpenGL实现全景视频播放，以前从来没有接触过这一块，所以听得也是迷迷糊糊。VR/AR目前是是一个很火的方向，但还处于发展的初期，不过有机会还是值得尝试尝试。&lt;/p&gt;
&lt;p&gt;接下来我又听了一段“手机天猫解耦之路”，我是中间进去的，会场挤满了人，分享者讲的东西也是干货满满。演讲嘉宾是天猫的无线技术专家，我听的那一块正好讲到了一种界面间解耦的思路，使用URL Server来实现界面间跳转。&lt;/p&gt;
&lt;p&gt;接下来又听了滴滴的iOS负责人分享的“滴滴的组件化实践与优化”，主要讲到了滴滴iOS端在发展中遇到的问题以及解决方案，重点讲了滴滴组件化的经历，也是干货满满。后面提到的灰度发布对我们目前的项目很有参考价值。&lt;/p&gt;
&lt;p&gt;后面又听了“iOS遗留系统上的架构重构”，是一名来自澳洲的iOS工程师分享的，主要分享了自己是如何在遗留的代码上，把数据存储从CoreData迁移到Realm并且没有影响正常迭代的经历，使用的是抽象分支+特性开关，也非常有参考价值。&lt;/p&gt;
&lt;h3 id=&quot;第二天下午&quot;&gt;&lt;a href=&quot;#第二天下午&quot; class=&quot;headerlink&quot; title=&quot;第二天下午&quot;&gt;&lt;/a&gt;第二天下午&lt;/h3&gt;&lt;p&gt;第二天下午有两个分会场，分别是性能优化专场和应用架构专场。&lt;/p&gt;
&lt;p&gt;我先听了“美团 iOS 客户端的构建思考与实践”，分享者是美团的高级工程师，主要讲了美团APP iOS客户端的架构，以及集成和发布中遇到的问题和一些实践经验。分享了一些持续集成的经验，目前我们项目中还没有用到持续集成，所有这一块也不是很了解，不过很多东西还是值得借鉴和尝试的。&lt;/p&gt;
&lt;p&gt;后面我又听了来自微博的美女架构师分享的“微博复杂信息流的架构之道”，分享中提到的隔周发版也是一种很好的实践方式。&lt;/p&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;总体来说这次GMTC大会还是收获很多的，学习到了业界一些最新最热的技术和思想，非常感谢公司能给我这次机会。&lt;/p&gt;
&lt;p&gt;最后，由于第一次去北京，当然少不了要到处逛逛。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/9088bb3373fad1444a78921cb8c8172f.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/5a0e1b3dac94502a08f70de2f14bee22.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;6月24日至6月25日，我有幸参加了“GMTC全球移动技术大会”，这篇博客就是我对参见会议的一个经历和感受。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/457acda7bd3dc65f172468c45da
    
    </summary>
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>打造自己的翻墙VPS:搬运工VPS购买使用流程全记录</title>
    <link href="http://yoursite.com/2016/06/11/%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BF%BB%E5%A2%99VPS:%E6%90%AC%E8%BF%90%E5%B7%A5VPS%E8%B4%AD%E4%B9%B0%E4%BD%BF%E7%94%A8%E6%B5%81%E7%A8%8B%E5%85%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2016/06/11/打造自己的翻墙VPS:搬运工VPS购买使用流程全记录/</id>
    <published>2016-06-10T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;p&gt;端午节在家无聊，买了一个VPS，打算做翻墙用，下面是我购买和使用的一个流程全集了，主要以截图为主，文字为辅。&lt;/p&gt;
&lt;p&gt;我选的VPS是&lt;a href=&quot;https://bandwagonhost.com/index.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;搬运工&lt;/a&gt;，因为网上教程比较多，而且支持支付宝支付（实际证明支付宝支付就是个坑）。&lt;/p&gt;
&lt;h2 id=&quot;第一步：购买搬运工VPS&quot;&gt;&lt;a href=&quot;#第一步：购买搬运工VPS&quot; class=&quot;headerlink&quot; title=&quot;第一步：购买搬运工VPS&quot;&gt;&lt;/a&gt;第一步：购买搬运工VPS&lt;/h2&gt;&lt;p&gt;打开&lt;a href=&quot;https://bandwagonhost.com/index.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;搬运工&lt;/a&gt;官网，点击Home&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/bed44e502ad30c6337a757df1096eb42.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;选择一个套餐，点击OrderNow，出现了一个错误界面，没关系，继续点击Please Check…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/6521ec84ff41c1c28efcbaf55195b41b.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;往下拉，选择一个套餐，显示out of stock是已经售罄的，选择一个没有售罄的，点击Order Now（便宜的都卖完了😭😭）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/4d0c8ffde0ee4fabd1619a2f76cd142d.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;p&gt;我选的是4.99$每月的套餐，然后选择计费周期和机房地址，计费周期有每月，每季度，每半年，每年，机房地址如果开通后觉得速度慢可以换的，选择完成后，点击Add to Cart&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/df89863eb89691d23f8ede6df91474ac.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;p&gt;填写优惠码（如果有的话），然后点击CheckOut提交订单&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/22185a6765ad03c3c490039547b1a6f9.png&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;p&gt;填写支付信息，可以选择支付宝支付，然后点击Complete Order完成订单&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/c52d6ec41f2fe7306d95fe02c150ff3c.png&quot; alt=&quot;6&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后，点击PayNow&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/8c5c7146ebeae385a78a0d2ff4f41d50.png&quot; alt=&quot;7&quot;&gt;&lt;/p&gt;
&lt;p&gt;点了好几遍，使用没反应，最后无奈，只能使用PayPal（坑！！）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/5044a701d5863fb3df75cde054e40bf1.png&quot; alt=&quot;8&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后登陆PayPal，确认订单，支付就可了。支付完成后，返回搬运工，可以看到一个订单号，这就说明订单已经完成了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/b1919f5edb17005e107f2cda76ea6543.png&quot; alt=&quot;9&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;第二步：如何使用搬运工&quot;&gt;&lt;a href=&quot;#第二步：如何使用搬运工&quot; class=&quot;headerlink&quot; title=&quot;第二步：如何使用搬运工&quot;&gt;&lt;/a&gt;第二步：如何使用搬运工&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;查看主机&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/0d844d6592095394205b3ec705c27c07.png&quot; alt=&quot;10&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/519dd5c39986045804589fb1c2037bc1.png&quot; alt=&quot;11&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/32ba5f9b92493a7fae77e566ffeb1899.png&quot; alt=&quot;12&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管理我的VPS，点击KiwiVM..进入管理界面，这里可以查看服务器的状态，以及进行各种管理操作，具体操作方法可以参考最后我的两篇博客链接。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/765e9238bfc53b4d7efcf7eddadc1713.png&quot; alt=&quot;13&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;第三步：一键安装shadowsocks（搬运工这个功能太赞啦）&quot;&gt;&lt;a href=&quot;#第三步：一键安装shadowsocks（搬运工这个功能太赞啦）&quot; class=&quot;headerlink&quot; title=&quot;第三步：一键安装shadowsocks（搬运工这个功能太赞啦）&quot;&gt;&lt;/a&gt;第三步：一键安装shadowsocks（搬运工这个功能太赞啦）&lt;/h2&gt;&lt;p&gt;进入管理界面，然后点击Shadowsocks Server，然后点击Install Sh…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/6c277b288f658f0f46b49692ad44cd07.png&quot; alt=&quot;14&quot;&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，点击返回，就可以看到你的SS的端口和密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/cf4d5ded8facbea9375c69e1736db8b7.png&quot; alt=&quot;15&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后跟着上图的“What‘s Next”后面的内容，安装并配置Shadowsocks，就可以使用了。&lt;/p&gt;
&lt;p&gt;以上就是这个购买和使用VPS的流程，希望对大家有所帮助。&lt;/p&gt;
&lt;p&gt;Reference:&lt;br&gt;&lt;a href=&quot;https://blog.phpgao.com/vps.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://blog.phpgao.com/vps.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/2f51144c35c9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/2f51144c35c9&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;端午节在家无聊，买了一个VPS，打算做翻墙用，下面是我购买和使用的一个流程全集了，主要以截图为主，文字为辅。&lt;/p&gt;
&lt;p&gt;我选的VPS是&lt;a href=&quot;https://bandwagonhost.com/index.php&quot; target=&quot;_blank&quot; rel=&quot;e
    
    </summary>
    
      <category term="其他" scheme="http://yoursite.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>2016年6月开发问题记录</title>
    <link href="http://yoursite.com/2016/06/05/2016%E5%B9%B46%E6%9C%88%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2016/06/05/2016年6月开发问题记录/</id>
    <published>2016-06-04T16:00:00.000Z</published>
    <updated>2016-07-03T10:18:35.000Z</updated>
    
    <content type="html">&lt;p&gt;继续记录6月份开发中遇到的问题。&lt;/p&gt;
&lt;h2 id=&quot;UIBarButtonItem点击区域的问题&quot;&gt;&lt;a href=&quot;#UIBarButtonItem点击区域的问题&quot; class=&quot;headerlink&quot; title=&quot;UIBarButtonItem点击区域的问题&quot;&gt;&lt;/a&gt;UIBarButtonItem点击区域的问题&lt;/h2&gt;&lt;p&gt;今天在定制导航上的返回按钮遇到了一个问题，顺便记录一下。&lt;/p&gt;
&lt;p&gt;一般常规的定制导航栏返回按钮的方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationItem.leftBarButtonItem = [[&lt;span class=&quot;built_in&quot;&gt;UIBarButtonItem&lt;/span&gt; alloc] initWithImage:[&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; imageNamed:&lt;span class=&quot;string&quot;&gt;@&quot;back&quot;&lt;/span&gt;] style:&lt;span class=&quot;built_in&quot;&gt;UIBarButtonItemStyleDone&lt;/span&gt; target:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; action:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(clickBackBtn:)];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样写有一个问题，运行代码后，返回按钮的可点击区域如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/d869dc4bbc06c476771fc0cfe1b19d49.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;这并不是我想要的，点击区域太大，完全没有点到返回按钮上都可以触发返回操作。于是换一种思路，用自定义View实现，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIButton&lt;/span&gt; *backBtn = [[&lt;span class=&quot;built_in&quot;&gt;UIButton&lt;/span&gt; alloc] initWithFrame:&lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[backBtn addTarget:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; action:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(clickBackBtn:) forControlEvents:&lt;span class=&quot;built_in&quot;&gt;UIControlEventTouchUpInside&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[backBtn setImage:[&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; imageNamed:&lt;span class=&quot;string&quot;&gt;@&quot;back&quot;&lt;/span&gt;] forState:&lt;span class=&quot;built_in&quot;&gt;UIControlStateNormal&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationItem.leftBarButtonItem = [[&lt;span class=&quot;built_in&quot;&gt;UIBarButtonItem&lt;/span&gt; alloc] initWithCustomView:backBtn];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译运行，效果依然一样，点击区域还是太大，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/639a2d998265085ba8f03b4fb3cc6068.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;这我就不明白了，于是一阵Google，找到了一个解决方案，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIButton&lt;/span&gt; *backBtn = [[&lt;span class=&quot;built_in&quot;&gt;UIButton&lt;/span&gt; alloc] initWithFrame:&lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[backBtn addTarget:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; action:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(clickBackBtn:) forControlEvents:&lt;span class=&quot;built_in&quot;&gt;UIControlEventTouchUpInside&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[backBtn setImage:[&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; imageNamed:&lt;span class=&quot;string&quot;&gt;@&quot;back&quot;&lt;/span&gt;] forState:&lt;span class=&quot;built_in&quot;&gt;UIControlStateNormal&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; *containerView = [[&lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt; alloc] initWithFrame:&lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[containerView addSubview:backBtn];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationItem.leftBarButtonItem = [[&lt;span class=&quot;built_in&quot;&gt;UIBarButtonItem&lt;/span&gt; alloc] initWithCustomView:containerView];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样点击区域就正常了，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/0b15b63f3ddab728a7c593154f0083a2.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;p&gt;其实就是在Button外面又包了一层View，这样点击区域就只有Button那么大，我怀疑，可能是加载BarButtonItem上的自定义View都会被自动的拉长，暂时还没找到其他解决方案。&lt;/p&gt;
&lt;p&gt;Reference：&lt;a href=&quot;http://stackoverflow.com/questions/16858433/uibarbuttonitem-tap-area&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIBarButtonItem tap area&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;将自定义对象作为NSDictionary的Key&quot;&gt;&lt;a href=&quot;#将自定义对象作为NSDictionary的Key&quot; class=&quot;headerlink&quot; title=&quot;将自定义对象作为NSDictionary的Key&quot;&gt;&lt;/a&gt;将自定义对象作为NSDictionary的Key&lt;/h2&gt;&lt;p&gt;将自定义对象作为NSDictionary的Key，需要重写自定义isEqual方法和hash方法。isEqual方法比较简单，如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isEqual:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)object &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Student *st = (Student *)object;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([st.name isEqualToString:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name] &amp;amp;&amp;amp; st.age == &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.age) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是如果要把自定义的对象作为NSDictionary的Key，光重写isEqual方法是不够的，还需要重写hash方法，如果不重写hash方法就会导致字典不能正确的添加和删除。重写hash函数的方法很多，可以通过构建不同散列函数来实现，但是无论哪种方法，目的都是尽可能的确保相同的对象返回的hash值相同，一个简单的方法就是使用每一个属性的hash的异或的结果来作为这个对象的hash值。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt;)hash &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.name hash] ^ &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样构建的hash值冲突的概率很小。另外，要作为字典的Key，还必须实现&lt;code&gt;NSCopying&lt;/code&gt;协议。因为不需要做深拷贝，所以只需要简单的返回self即可，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)copyWithZone:(&lt;span class=&quot;built_in&quot;&gt;NSZone&lt;/span&gt; *)zone &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个构建的一个对象就可以作为NSDictionary的Key了。&lt;/p&gt;
&lt;p&gt;Reference：&lt;a href=&quot;http://nshipster.com/equality/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Equality&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;UITableViewCell的“no-index-path-for-table-cell-being-reused”问题&quot;&gt;&lt;a href=&quot;#UITableViewCell的“no-index-path-for-table-cell-being-reused”问题&quot; class=&quot;headerlink&quot; title=&quot;UITableViewCell的“no index path for table cell being reused”问题&quot;&gt;&lt;/a&gt;UITableViewCell的“no index path for table cell being reused”问题&lt;/h2&gt;&lt;p&gt;项目中有一个自定义的UITableViewCell，由于版本更新，要把这个Cell改为可以悬停的SectionHeader，为了图方便，我没有重新自定义一个View，而是直接在&lt;code&gt;viewForHeaderInSection:&lt;/code&gt;方法里返回了cell，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;LMBookWriteCommentCell *cell = (LMBookWriteCommentCell *)[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; tableView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.tableView writeCommentCellWithIndexPath:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cell;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样写有个问题，就是在reloadData时，这SectionHeader就消失了，变成了空白的一片，并且出现了“no index path for table cell being reused”错误，程序没有崩溃，但是就是看不见Cell上的内容。于是一阵Google，终于找到了答案，只要把上面的代码的&lt;code&gt;return cell;&lt;/code&gt;改为&lt;code&gt;return cell.contentView;&lt;/code&gt;就可以了。&lt;/p&gt;
&lt;p&gt;Reference：&lt;a href=&quot;http://stackoverflow.com/questions/12772197/what-is-the-meaning-of-the-no-index-path-for-table-cell-being-reused-message-i?lq=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What is the meaning of the “no index path for table cell being reused” message in iOS 6/7?&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Autolayout动画的正确姿势&quot;&gt;&lt;a href=&quot;#Autolayout动画的正确姿势&quot; class=&quot;headerlink&quot; title=&quot;Autolayout动画的正确姿势&quot;&gt;&lt;/a&gt;Autolayout动画的正确姿势&lt;/h2&gt;&lt;p&gt;做Autolayout动画的一般步骤是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;修改约束，如果使用Masonry，使用&lt;code&gt;mas_updateConstraints&lt;/code&gt;方法修改约束，如果使用Xib，则直接把要修改的约束通过拉线链接到代码里进行修改即可。&lt;/li&gt;
&lt;li&gt;在动画的block中，调用View的&lt;code&gt;layoutIfNeed()&lt;/code&gt;方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里要注意的一点是第二步，如果直接调用&lt;code&gt;view.layoutIfNeed()&lt;/code&gt;，可能会导致动画不能进行，正确的方法应该是调用&lt;code&gt;view.superview.layoutIfNeed()&lt;/code&gt;，这样才能正确的进行动画。完整代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ViewController: &lt;span class=&quot;built_in&quot;&gt;UIViewController&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    @IBOutlet &lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; var myView: &lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt;!&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    @IBOutlet &lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt; var topConstraint: &lt;span class=&quot;built_in&quot;&gt;NSLayoutConstraint&lt;/span&gt;!&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    override func viewDidLoad() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.viewDidLoad()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    override func touchesBegan(touches: Set&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt;&amp;gt;, withEvent event: &lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt;?) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        topConstraint.constant += &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;UIView&lt;/span&gt;.animateWithDuration(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.superview?.layoutIfNeeded()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;在iOS7上UILabel的省略点颜色不正确&quot;&gt;&lt;a href=&quot;#在iOS7上UILabel的省略点颜色不正确&quot; class=&quot;headerlink&quot; title=&quot;在iOS7上UILabel的省略点颜色不正确&quot;&gt;&lt;/a&gt;在iOS7上UILabel的省略点颜色不正确&lt;/h2&gt;&lt;p&gt;在iOS7上，有时UILabel的省略点的颜色与文字的颜色不同，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/90fa287185b4062e4c37dd86ac05436b.png&quot; alt=&quot;uilable color error&quot;&gt;&lt;/p&gt;
&lt;p&gt;网上查了一下，这应该是iOS7的一个Bug，解决方法就是不要使用textColor设置文字颜色，而使用attributeText，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attStr = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc] initWithString:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.titleLabel.text attributes:@&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSForegroundColorAttributeName&lt;/span&gt;:style.fColor, &lt;span class=&quot;built_in&quot;&gt;NSFontAttributeName&lt;/span&gt;:style.font&amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.titleLabel.attributedText = attStr;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://stackoverflow.com/questions/22718172/uilabel-dotted-line-color-bug-in-ios-7-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UILabel dotted line color bug in iOS 7.1&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;iOS7上，给UICollectionViewCell添加长按手势的坑&quot;&gt;&lt;a href=&quot;#iOS7上，给UICollectionViewCell添加长按手势的坑&quot; class=&quot;headerlink&quot; title=&quot;iOS7上，给UICollectionViewCell添加长按手势的坑&quot;&gt;&lt;/a&gt;iOS7上，给UICollectionViewCell添加长按手势的坑&lt;/h2&gt;&lt;p&gt;项目中有一个需求，当长按任何一个UICollectionViewCell时，刷新UICollectionView，每一个Cell的右上角都出现一个选择按钮。效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/88e710b25fdcd0403ba7fe2610bd1547.png&quot; alt=&quot;iOS7 UICollectionView longPress&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是一个比较常见的需求，我的做法是在每一个Cell上添加一个长按手势，然后，在手势触发时，刷新这个UICollectionView，然每一个Cell都显示选择按钮。这样做在iOS8，iOS9上都没有问题，当时在iOS7上却出现了问题。在iOS7上，当触发某一个Cell的长按手势之后，这个Cell就不再响应UICollectionView的&lt;code&gt;collectionView:didSelectItemAtIndexPath:&lt;/code&gt;方法了。&lt;/p&gt;
&lt;p&gt;网上没有找到类似的情况，只能自己解决。最终找到了一种解决方案，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 必须重新放在主线程队列中，否则在iOS7上回出现Cell不触发didSelect的情况&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_async&lt;/span&gt;(dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.collectionView reloadData];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;要将reloadData重新放在主线程队列中，这样就不会出现这种情况。具体原因不是非常明白，但是，这样确实可以完美的解决这个问题。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;继续记录6月份开发中遇到的问题。&lt;/p&gt;
&lt;h2 id=&quot;UIBarButtonItem点击区域的问题&quot;&gt;&lt;a href=&quot;#UIBarButtonItem点击区域的问题&quot; class=&quot;headerlink&quot; title=&quot;UIBarButtonItem点击区域的问题&quot;&gt;
    
    </summary>
    
      <category term="iOS Tips" scheme="http://yoursite.com/categories/iOS-Tips/"/>
    
    
  </entry>
  
  <entry>
    <title>自定义NSOperation的那些事</title>
    <link href="http://yoursite.com/2016/05/29/%E8%87%AA%E5%AE%9A%E4%B9%89NSOperation%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/"/>
    <id>http://yoursite.com/2016/05/29/自定义NSOperation的那些事/</id>
    <published>2016-05-28T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;p&gt;最近在项目中负责一个下载模块，使用的是NSOperation+NSOperationQueue实现的，以前总以为自己对NSOperation已经很熟悉了，也写过很多Demo，但是到真正使用的时候，才发现里面还有很多细节的东西自己没有注意到，这篇博客算是对NSOperation的用法的一个总结。比较简单的NSBlockOperation以及NSInvocationOperation就不介绍，本文主要讲解一下自定义NSOperation的方法以及注意事项。&lt;/p&gt;
&lt;p&gt;很多技术Blog在介绍自定NSOperation时，思路都是大同小异，大致可以分为一下几步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建一个集成自NSOperation的类&lt;/li&gt;
&lt;li&gt;重写NSOperation的main()方法，在main()方法中实现耗时操作&lt;/li&gt;
&lt;li&gt;然后使用时创建自定义的NNSOperation对象，把它添加到NSOperationQueue中，这样就可以自动执行了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其实，这只是自定义NSOperation的一种方法，而且是比较简单的一种方法，不需要自己去控制NSOperation的完成，取消等。另外一种方式是重写NSOperation的start方法，这种方法就需要你自己去控制NSOperation的完成，取消，执行等，而且有许多需要注意的地方。下面着重介绍一些第二种方法。&lt;/p&gt;
&lt;p&gt;废话不多说，直接上代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;CustomOperation.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CustomOperation&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)start &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;built_in&quot;&gt;NSThread&lt;/span&gt; sleepForTimeInterval:&lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;这是一个耗时操作：%@&quot;&lt;/span&gt;, @(++i));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * argv[]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;@autoreleasepool&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSOperationQueue&lt;/span&gt; *queue = [[&lt;span class=&quot;built_in&quot;&gt;NSOperationQueue&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        queue.maxConcurrentOperationCount = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CustomOperation *op1 = [[CustomOperation alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CustomOperation *op2 = [[CustomOperation alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CustomOperation *op3 = [[CustomOperation alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [queue addOperation:op1];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [queue addOperation:op2];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [queue addOperation:op3];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [[&lt;span class=&quot;built_in&quot;&gt;NSRunLoop&lt;/span&gt; mainRunLoop] run];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述代码创建了一个NSOperation的子类CustomOperation，然后重写了start方法，在start方法中模拟了一个耗时操作，然后在main方法中创建一个NSOperationQueue并添加三个CustomOperation，执行结果是只有op1被执行，op2和op3一直没有被执行。这是因为，一个NSOperationQueue在判断一个Operation是否执行完成的标志是Operation的&lt;code&gt;- (BOOL)isFinished&lt;/code&gt;方法返回YES，所以这里需要有一个变量来记录当前Operation执行的状态，修改代码，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;CustomOperation.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NS_ENUM&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt;, OperationState) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    OperationStateReady,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    OperationStateExecuting,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    OperationStateFinished,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CustomOperation&lt;/span&gt; ()&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;assign&lt;/span&gt;) OperationState state;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CustomOperation&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;)init &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; init]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        _state = OperationStateReady;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isFinished &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.state == OperationStateFinished;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)start &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.state = OperationStateExecuting;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;built_in&quot;&gt;NSThread&lt;/span&gt; sleepForTimeInterval:&lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;这是一个耗时操作：%@&quot;&lt;/span&gt;, @(++i));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.state = OperationStateFinished;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里先定义个一个表示Operation状态的枚举，共有三种状态：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;OperationStateReady：准备状态，创建Operation后默认就是准备状态&lt;/li&gt;
&lt;li&gt;OperationStateExecuting：执行状态，Operation在执行过程中的状态&lt;/li&gt;
&lt;li&gt;OperationStateFinished：完成状态，Operation执行完成后的状态&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后在main方法中先将状态置为执行状态，然后在耗时操作执行完后，将状态置为完成状态。有了状态之后，重写NSOperation的&lt;code&gt;- (BOOL)isFinished&lt;/code&gt;方法，当状态为OperationStateFinished时返回YES，否则返回NO。这样，NSOperationQueue就可以知道操作已经执行完成。运行代码，现在三个Operation就可以按顺序执行了。&lt;/p&gt;
&lt;p&gt;继续完善代码&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CustomOperation&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;)init &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; init]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        _state = OperationStateReady;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isFinished &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.state == OperationStateFinished;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isExecuting &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.state == OperationStateExecuting;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isReady &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.state == OperationStateReady &amp;amp;&amp;amp; [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; isReady];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)cancel &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (![&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; isExecuting] &amp;amp;&amp;amp; ![&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; isFinished]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; cancel];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)start &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (![&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; isReady]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; isCancelled]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.state = OperationStateExecuting;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;built_in&quot;&gt;NSThread&lt;/span&gt; sleepForTimeInterval:&lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;这是一个耗时操作：%@&quot;&lt;/span&gt;, @(++i));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.state = OperationStateFinished;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，一个重写start方法的自定义NSOperation就完成了，这是CustomOperation支持Cancel操作，测试代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * argv[]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;@autoreleasepool&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSOperationQueue&lt;/span&gt; *queue = [[&lt;span class=&quot;built_in&quot;&gt;NSOperationQueue&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        queue.maxConcurrentOperationCount = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CustomOperation *op1 = [[CustomOperation alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CustomOperation *op2 = [[CustomOperation alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        CustomOperation *op3 = [[CustomOperation alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [queue addOperation:op1];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [queue addOperation:op2];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [queue addOperation:op3];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            [op3 cancel];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [[&lt;span class=&quot;built_in&quot;&gt;NSRunLoop&lt;/span&gt; mainRunLoop] run];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行代码，会发现只执行了op1和op2，达到了我们预期的效果。&lt;/p&gt;
&lt;p&gt;这就是一个完整的自定义NSOperation的方法，这里的关键点就是那几个状态。&lt;/p&gt;
&lt;p&gt;比较一下重写start函数的方法和重写main函数的方法，重写main函数实现起来更加简单，不需要自己控制Operation的状态，但是重写start函数更加灵活，可以根据自己的需求定制不同的状态。更加完善的实现可以参看&lt;a href=&quot;https://github.com/AFNetworking/AFNetworking&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AFNetworking&lt;/a&gt;的AFURLConnectionOperation实现，里面有很多值得学习的东西。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;br&gt;&lt;a href=&quot;http://nshipster.com/nsoperation/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSOperation&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在项目中负责一个下载模块，使用的是NSOperation+NSOperationQueue实现的，以前总以为自己对NSOperation已经很熟悉了，也写过很多Demo，但是到真正使用的时候，才发现里面还有很多细节的东西自己没有注意到，这篇博客算是对NSOperatio
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>【翻译】MVVM Tutorial with ReactiveCocoa Part 2</title>
    <link href="http://yoursite.com/2016/05/09/MVVMTutorialwithReactiveCocoaPart2(%E7%BF%BB%E8%AF%91)/"/>
    <id>http://yoursite.com/2016/05/09/MVVMTutorialwithReactiveCocoaPart2(翻译)/</id>
    <published>2016-05-08T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;p&gt;原文地址：&lt;a href=&quot;https://www.raywenderlich.com/74131/mvvm-tutorial-with-reactivecocoa-part-2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MVVM Tutorial with ReactiveCocoa: Part 2/2&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;MVVM作为一种UI设计模式，正在成为一种非常流行的MVC模式的替代方案。&lt;/p&gt;
&lt;p&gt;在MVVM系列教程的第一部分，你已经了解了ReactiveCocoa是如何将ViewModels和他们各自的的View绑定起来的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn5.raywenderlich.com/wp-content/uploads/2014/06/MVVMReactiveCocoa-700x121.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;下面是你创建的应用，一个搜索Flickr的APP。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn3.raywenderlich.com/wp-content/uploads/2014/06/FinishedApp-671x500.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;在 MVVM系列教程的第二部分以及最后一部分，你讲学会如果从应用程序的ViewModel中控制ViewController的导航。&lt;/p&gt;
&lt;p&gt;截止目前，你所开发的应用可以通过一个简单的字符串搜索Flickr，如果你需要当前的项目，可以从&lt;a href=&quot;http://www.raywenderlich.com/wp-content/uploads/2014/06/FlickrSearchPart1Project1.zip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;下载&lt;/p&gt;
&lt;p&gt;使用ReactiveCocoa构建的模型层服务提供搜索结果，对应的ViewModel能够简单地打印出响应结果。&lt;/p&gt;
&lt;p&gt;现在，是时候完成跳转到搜索结果界面的任务了。&lt;/p&gt;
&lt;h2 id=&quot;实现ViewModel导航&quot;&gt;&lt;a href=&quot;#实现ViewModel导航&quot; class=&quot;headerlink&quot; title=&quot;实现ViewModel导航&quot;&gt;&lt;/a&gt;实现ViewModel导航&lt;/h2&gt;&lt;p&gt;搜索Flickr成功并返回正确的结果后，应用程序应该跳转到一个新的ViewController并显示这些搜索结果。&lt;/p&gt;
&lt;p&gt;当前应该程序只有单一的一个ViewModel，即RWTFlickrSearchViewModel类。为了达到预期的效果，你应该再创建一个ViewModel来描述返回的搜索结果视图。&lt;/p&gt;
&lt;p&gt;在ViewModel文件夹中一个名为RWTSearchResultsViewModel类，他继承自NSObject。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@import&lt;/span&gt; Foundation;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTViewModelServices.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTFlickrSearchResults.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RWTSearchResultsViewModel&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;)initWithSearchResults:(RWTFlickrSearchResults *)results services:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RWTViewModelServices&amp;gt;)services;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *title;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *searchResults;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码中添加了一些属性用于描述搜索结果视图，并且声明了一个包含一个RWTFlickrSearchResults参数（返回模型层的服务）的构造方法。&lt;/p&gt;
&lt;p&gt;打开RWTSearchResultsViewModel.m实现以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;)initWithSearchResults:(RWTFlickrSearchResults *)results services:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RWTViewModelServices&amp;gt;)services &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; init]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    _title = results.searchString;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    _searchResults = results.photos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样RWTSearchResultsViewModel就完成了。&lt;/p&gt;
&lt;p&gt;回忆第一部分的内容，ViewModel应该在对应的View创建之前就已经创建好了，下面就是要完成各个ViewModel对应了View了。&lt;/p&gt;
&lt;p&gt;打开RWTSearchResultsViewController.h文件，导入对应的ViewModel头文件，并且添加一个初始化方法，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTSearchResultsViewModel.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RWTSearchResultsViewController&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;UIViewController&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;)initWithViewModel:(RWTSearchResultsViewModel *)viewModel;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开RWTSearchResultsViewController.m文件，并且在顶部的类扩展中添加一个私有属性，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) RWTSearchResultsViewModel *viewModel;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;进一步完成初始化方法的实现，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;)initWithViewModel:(RWTSearchResultsViewModel *)viewModel &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; init]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    _viewModel = viewModel;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这一步中，你将关注视图导航是如何工作的。&lt;/p&gt;
&lt;p&gt;你的应用程序现在有两个ViewModel，但是这里你将面临一个难题！我该怎么在视图控制器切换的同时也把对应的ViewModel进行切换。&lt;/p&gt;
&lt;p&gt;ViewModel不能直接持有View的引用，所以，有什么巧妙的方法可以实现这个呢？&lt;/p&gt;
&lt;p&gt;答案已经在RWTViewModelServices协议中展现了。它当前被用来获得一个模型层的引用，你将用这个协议来实现ViewModel的切换。&lt;/p&gt;
&lt;p&gt;打开RWTViewModelServices.h并且添加如下方法到协议中去。&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)pushViewModel:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)viewModel;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从概念上讲，ViewModel层驱动着整个App，这一层的逻辑决定着界面上会显示什么，以及界面之间切换的方式和时机。&lt;/p&gt;
&lt;p&gt;这个方法允许ViewModel也像UINavigationController那样可以从一个ViewModel以Push的方法切换到另一个ViewModel。&lt;/p&gt;
&lt;p&gt;在实现这个协议之前，你应该先是这个方法在ViewModel层可以工作。&lt;/p&gt;
&lt;p&gt;打开RWTFlickrSearchViewModel.m文件并导入新添加的ViewModel。&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTSearchResultsViewModel.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在同一文件更新executeSearchSignal方法的实现，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (RACSignal *)executeSearchSignal &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.services getFlickrSearchService]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    flickrSearchSignal:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searchText]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    doNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; result) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      RWTSearchResultsViewModel *resultsViewModel =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [[RWTSearchResultsViewModel alloc] initWithSearchResults:result services:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.services];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.services pushViewModel:resultsViewModel];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码在搜索信号执行过程中添加了一个doNext操作，在doNext的block中创建了一个新的ViewModel来展示搜索结果，然后通过ViewModel的services的push操作切换到这个新的ViewModel上。&lt;/p&gt;
&lt;p&gt;现在，该更新代码，实现这个协议并达到切换ViewModel同时切换ViewController的效果。为了实现这个效果，我们需要在代码中引用导航控制器。&lt;/p&gt;
&lt;p&gt;打开RWTViewModelServicesImpl.h并且添加如下初始化方法：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;)initWithNavigationController:(&lt;span class=&quot;built_in&quot;&gt;UINavigationController&lt;/span&gt; *)navigationController;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开RWTViewModelServicesImpl.m并且添加下面的头文件：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTSearchResultsViewController.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后添加一个私有属性：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UINavigationController&lt;/span&gt; *navigationController;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在同一个文件完成方法的实现：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;)initWithNavigationController:(&lt;span class=&quot;built_in&quot;&gt;UINavigationController&lt;/span&gt; *)navigationController &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; init]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    _searchService = [RWTFlickrSearchImpl new];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    _navigationController = navigationController;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述代码用来把传过来的导航控制器引用记录下来。&lt;/p&gt;
&lt;p&gt;最后，添加一个新的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)pushViewModel:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)viewModel &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; viewController;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([viewModel isKindOfClass:RWTSearchResultsViewModel.class]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    viewController = [[RWTSearchResultsViewController alloc] initWithViewModel:viewModel];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;an unknown ViewModel was pushed!&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationController pushViewController:viewController animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述代码会根据ViewModel的类型来判断该显示那个视图。&lt;/p&gt;
&lt;p&gt;一般来说，View和ViewModel是一一对应的关系，但是你一定可以举出反例。&lt;/p&gt;
&lt;p&gt;最后一步，打开RWTAppDelegate.m，将createInitialViewController方法中创建RWTViewModelServicesImpl的一行改为如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.viewModelServices = [[RWTViewModelServicesImpl alloc] initWithNavigationController:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationController];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译并运行程序，输入一个搜索关键字然后点击Go，可以观察到应用程序将切换到一个新的View/ViewModel。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn4.raywenderlich.com/wp-content/uploads/2014/06/BlankView-281x500.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;p&gt;界面是空白的，别着急，待会你将修复这个问题。&lt;/p&gt;
&lt;p&gt;现在，可以庆祝一下，你已经实现了一个含有多个ViewModel并且可以通过ViewModel来切换界面的应用程序了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;小贴士：John Gossman是一名微软WPF团队的工程师，他创造了MVVM模式。他说测试MVVM的一种方法就是你的应用程序应该脱离UI也可以运行。&lt;/p&gt;
&lt;p&gt;你的应用程序通过了这个测试。如果你不确信，可以通过单元测试来执行一个搜索或从一个ViewModel切换到另一个ViewModel。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在，你已经有了一个非常纯净的解决方案，下面要开始绑定UI了。&lt;/p&gt;
&lt;h2 id=&quot;呈现搜索结果列表&quot;&gt;&lt;a href=&quot;#呈现搜索结果列表&quot; class=&quot;headerlink&quot; title=&quot;呈现搜索结果列表&quot;&gt;&lt;/a&gt;呈现搜索结果列表&lt;/h2&gt;&lt;p&gt;搜索结果视图控制器RWTSearchResultsViewController在nib中定义了一个UITableview，下一步就是讲ViewModel中的内容展现在这个列表中。&lt;/p&gt;
&lt;p&gt;打开RWTSearchResultsViewController.m，添加一个类扩展，让他实现UITableViewDataSource协议，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RWTSearchResultsViewController&lt;/span&gt; () &amp;lt;&lt;span class=&quot;title&quot;&gt;UITableViewDataSource&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在同一文件中重写viewDidLoad方法，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searchResultsTable registerClass:&lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt;.class&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                  forCellReuseIdentifier:&lt;span class=&quot;string&quot;&gt;@&quot;cell&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searchResultsTable.dataSource = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; bindViewModel];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这些操作会在tableview初始化时执行一次，并绑定ViewModel。请忽略上面的Cell Identifier的硬编码，这个待会会删掉。&lt;/p&gt;
&lt;p&gt;然后在同一文件中，添加bindViewModel方法。&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)bindViewModel &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.title = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.viewModel.title;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当前并没有添加太多代码。ViewModel有两个属性，一个是标题，另一个是将要展示在列表中的搜索结果的数组。&lt;/p&gt;
&lt;p&gt;因此，你该如何把这些搜索结果绑定到Tableview上呢？&lt;/p&gt;
&lt;p&gt;ReactiveCocoa可以绑定简单的属性到UIKit上，但是无法处理复杂的Tableview的数据绑定。&lt;/p&gt;
&lt;p&gt;不用焦急，还有其他方法。可以使用传统的代理方法实现。&lt;/p&gt;
&lt;p&gt;在同一文件中，添加如下两个dataSource的代理方法：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; numberOfRowsInSection:(&lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt;)section &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.viewModel.searchResults.count;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt; *)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         cellForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt; *cell = [tableView dequeueReusableCellWithIdentifier:&lt;span class=&quot;string&quot;&gt;@&quot;cell&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  cell.textLabel.text = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.viewModel.searchResults[indexPath.row] title];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cell;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个方法用来告诉Tableview搜索结果的个数，第二个方法根据ViewModel返回一个相应的Cell。这就够了，不是吗？&lt;/p&gt;
&lt;p&gt;编译并运行程序，就可以看到数据了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn2.raywenderlich.com/wp-content/uploads/2014/06/PopulatedTable-281x500.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;更好的Tableview数据绑定方法&quot;&gt;&lt;a href=&quot;#更好的Tableview数据绑定方法&quot; class=&quot;headerlink&quot; title=&quot;更好的Tableview数据绑定方法&quot;&gt;&lt;/a&gt;更好的Tableview数据绑定方法&lt;/h2&gt;&lt;p&gt;这种绑定Tableview数据的方法的缺点就是很快就会使视图控制器的代码变得很大。手动绑定数据的方法看起来也不是很优雅。&lt;/p&gt;
&lt;p&gt;这个问题困扰着我，因此我着手解决这个问题。&lt;/p&gt;
&lt;p&gt;从理论上讲，ViewModel的搜索结果数据中的每一项自身也是一个与Cell一一对应的ViewModel。在我的一篇最近的&lt;a href=&quot;http://www.scottlogic.com/blog/2014/05/11/reactivecocoa-tableview-binding.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博客&lt;/a&gt;中，我创建了一个通用的绑定辅助类，叫做CETableViewBindingHelper，这个类允许你使用每一个子ViewModel创建一个视图。这个类可以用来辅助实现datasource协议。&lt;/p&gt;
&lt;p&gt;这个CETableViewBindingHelper类的构造方法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;+ (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;) bindingHelperForTableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                              sourceSignal:(RACSignal *)source&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                          selectionCommand:(RACCommand *)selection&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                              templateCell:(&lt;span class=&quot;built_in&quot;&gt;UINib&lt;/span&gt; *)templateCellNib;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你仅仅只需要创建一个辅助类的引用，就可以用来绑定一个View的数组。这个构造方法的参数如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需要加载ViewModel数组的Tableview&lt;/li&gt;
&lt;li&gt;一个source的信号用来监控数据的变化&lt;/li&gt;
&lt;li&gt;一个在选中一个Cell后要执行的命令&lt;/li&gt;
&lt;li&gt;cell视图的nib&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;nib文件定义的Cell必须实现CEReactiveView协议。&lt;/p&gt;
&lt;p&gt;项目中已经包含了一个用于展示搜索结果的Cell视图。打开RWTSearchResultsTableViewCell.h导入协议头文件：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;CEReactiveView.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实现这个协议：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RWTSearchResultsTableViewCell&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;UITableViewCell&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;CEReactiveView&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下一步就是实现协议方法，打开RWTSearchResultsTableViewCell.m，导入如下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;SDWebImage/UIImageView+WebCache.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTFlickrPhoto.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后添加如下方法：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)bindViewModel:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)viewModel &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  RWTFlickrPhoto *photo = viewModel;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.titleLabel.text = photo.title;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageThumbnailView.contentMode = &lt;span class=&quot;built_in&quot;&gt;UIViewContentModeScaleToFill&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageThumbnailView setImageWithURL:photo.url];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在RWTSearchResultsViewModel的searchResults属性包含了一个RWTFlickrPhoto的引用的数组。&lt;/p&gt;
&lt;p&gt;你刚刚添加的bindViewModel方法中用到了SDWebImage框架，这是一个非常有用的用来在后台加载图片的第三方框架。&lt;/p&gt;
&lt;p&gt;setImageWithURL:是SDWebImage添加的一个UIImageView的分类方法。&lt;/p&gt;
&lt;p&gt;最后一步是用绑定辅助类去展示列表。&lt;/p&gt;
&lt;p&gt;打开RWTSearchResultsViewController.m导入辅助类头文件：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;CETableViewBindingHelper.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在同一文件中删除UITableDataSource协议以及实现的两个协议方法。&lt;/p&gt;
&lt;p&gt;下一步，在类扩展中添加一个如下的属性：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) CETableViewBindingHelper *bindingHelper;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在同一文件中，删除你之前添加的ViewDidload方法中的内容，然后添加如下代码到ViewDidLoad中：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; bindViewModel];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后，在bindViewModel方法的最后添加如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UINib&lt;/span&gt; *nib = [&lt;span class=&quot;built_in&quot;&gt;UINib&lt;/span&gt; nibWithNibName:&lt;span class=&quot;string&quot;&gt;@&quot;RWTSearchResultsTableViewCell&quot;&lt;/span&gt; bundle:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.bindingHelper =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [CETableViewBindingHelper bindingHelperForTableView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searchResultsTable&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                         sourceSignal:RACObserve(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.viewModel, searchResults)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                     selectionCommand:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                         templateCell:nib];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述代码从nib文件中创建了一个UINIb类型的引用，并且创建了一个绑定辅助类的对象。通过观察ViewModel中的searchResults属性来创建一个sourceSignal。&lt;/p&gt;
&lt;p&gt;编译并运行，结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.raywenderlich.com/wp-content/uploads/2014/06/UsingTheBindingHelper.png&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;p&gt;这就是一种更加又要的绑定数组到Tableview的方法。&lt;/p&gt;
&lt;h2 id=&quot;一些UI的个性化&quot;&gt;&lt;a href=&quot;#一些UI的个性化&quot; class=&quot;headerlink&quot; title=&quot;一些UI的个性化&quot;&gt;&lt;/a&gt;一些UI的个性化&lt;/h2&gt;&lt;p&gt;到目前为止，这篇教程始终重点叫的都是如何根据MVVM模式构建你的应用程序。我想你已经忍不住想添加一些个性化的东西了。&lt;/p&gt;
&lt;p&gt;自从iOS7发布后，已经过了1年了，&lt;a href=&quot;http://www.beyondkinetic.com/motion-ui-design-principles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;运动设计&lt;/a&gt;获得了更大的知名度，许多设计人员现在倾向于微妙的动画和流体行为。&lt;/p&gt;
&lt;p&gt;这一步中，你将在照片上添加一个微妙的视差滚动效果，棒极了。&lt;/p&gt;
&lt;p&gt;打开RWTSearchResultsTableViewCell.h添加如下方法：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;) setParallax:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)value;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;列表视图的每个Cell将使用这个方法来为每个Cell做视觉偏移。&lt;/p&gt;
&lt;p&gt;打开 RWTSearchResultsTableViewCell.m 文件添加如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setParallax:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)value &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.imageThumbnailView.transform = &lt;span class=&quot;built_in&quot;&gt;CGAffineTransformMakeTranslation&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, value);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开RWTSearchResultsViewController.m导入如下头文件：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTSearchResultsTableViewCell.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在同一个文件的类扩展中实现UITableViewDelegate的协议，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RWTSearchResultsViewController&lt;/span&gt; () &amp;lt;&lt;span class=&quot;title&quot;&gt;UITableViewDataSource&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;UITableViewDelegate&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你刚刚添加了一个绑定辅助类，并且把他设置为列表视图的代理，是他可以响应列表中行的选中动作。&lt;/p&gt;
&lt;p&gt;在bindViewModel方法中设置绑定辅助类的代理：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.bindingHelper.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在同一文件中添加scrollViewDidScroll方法的实现，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)scrollViewDidScroll:(&lt;span class=&quot;built_in&quot;&gt;UIScrollView&lt;/span&gt; *)scrollView &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *cells = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searchResultsTable visibleCells];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (RWTSearchResultsTableViewCell *cell &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; cells) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; value = &lt;span class=&quot;number&quot;&gt;-40&lt;/span&gt; + (cell.frame.origin.y - &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.searchResultsTable.contentOffset.y) / &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [cell setParallax:value];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每当列表视图滚动时，就会调用这个方法。在这个方法中，遍历所有可见的Cell，然后计算出一个偏移量，然后给每一个Cell设置一个视觉偏移。实际的偏移量将根据每一个Cell在列表视图可见部分的位置而定。&lt;/p&gt;
&lt;p&gt;编译并运行程序，就可以看到一个视差效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.raywenderlich.com/wp-content/uploads/2014/06/ParallaxAnimation.gif&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;p&gt;回到之前Views和ViewModels的工作。&lt;/p&gt;
&lt;h2 id=&quot;根据评论和点赞数查询&quot;&gt;&lt;a href=&quot;#根据评论和点赞数查询&quot; class=&quot;headerlink&quot; title=&quot;根据评论和点赞数查询&quot;&gt;&lt;/a&gt;根据评论和点赞数查询&lt;/h2&gt;&lt;p&gt;界面上应该在每一张图片的底部右侧显示评论数和点赞数。但是，当前从nib创建的文件仅仅只是显示了一个123的假数据。&lt;/p&gt;
&lt;p&gt;在你使用真实数据之前，你需要在模型层添加这个功能。&lt;/p&gt;
&lt;p&gt;在Model文件夹中添加一个新的继承自NSObject的类RWTFlickrPhotoMetadata，打开RWTFlickrPhotoMetadata.h添加如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt; favorites;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt; comments;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开 RWTFlickrPhotoMetadata.m实现description方法：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)description &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;metadata: comments=%lU, faves=%lU&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.comments, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.favorites];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个方法用于测试新添加的获取第一张照片的元数据的接口返回的数据是否正确。结果将被打印出来。&lt;/p&gt;
&lt;p&gt;编译并运行，搜索一些照片，当结果显示时，你将看到如下log将被打印出来。&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2014&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-06&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-04&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;27&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;26.813&lt;/span&gt; RWTFlickrSearch[&lt;span class=&quot;number&quot;&gt;76828&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;b] metadata: comments=&lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;, faves=&lt;span class=&quot;number&quot;&gt;434&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;取得元数据赋给可见的Cell&quot;&gt;&lt;a href=&quot;#取得元数据赋给可见的Cell&quot; class=&quot;headerlink&quot; title=&quot;取得元数据赋给可见的Cell&quot;&gt;&lt;/a&gt;取得元数据赋给可见的Cell&lt;/h2&gt;&lt;p&gt;你可以将当前的代码扩展成获取所有搜索结果的元数据。&lt;/p&gt;
&lt;p&gt;但是，如果结果有100张图片，你就要调用200次API接口，每张图片两次。许多API都有一个调用频率限制，这个操作可能会导致API Key被锁定，最少也是暂时不能用。&lt;/p&gt;
&lt;p&gt;其实，你只需要获取到当前在列表视图中显示的几张图片的元数据。因此，你该怎样实现这样的行为呢？你应该已经猜到了，你需要一个可以意识到他是否显示的一个ViewModel。&lt;/p&gt;
&lt;p&gt;当前的RWTSearchResultsViewModel对外暴漏了一个展示在视图上的RWTFlickrPhoto数组的接口，这些模型层的对象会被保留给View。为了能够添加一个可见性的概念，你将把这些在ViewModels里的模型对象封装起来。&lt;/p&gt;
&lt;p&gt;在ViewModel文件夹中添加一个NSObject的子类RWTSearchResultsItemViewModel，打开头文件，添加如下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@import&lt;/span&gt; Foundation;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTFlickrPhoto.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTViewModelServices.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RWTSearchResultsItemViewModel&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;) initWithPhoto:(RWTFlickrPhoto *)photo services:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RWTViewModelServices&amp;gt;)services;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; isVisible;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *title;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *url;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *favorites;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *comments;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如你所见，这个ViewModel封装了RWTFlickrPhoto模型对象。&lt;/p&gt;
&lt;p&gt;这个ViewModel的属性混合了如下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对外的模型属性（title，url）&lt;/li&gt;
&lt;li&gt;会动态更新的图像元数据模型（favorites，comments）&lt;/li&gt;
&lt;li&gt;isVisible用来指示ViewModel是否可见或不可见&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开RWTSearchResultsItemViewModel.m导入如下头文件：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;ReactiveCocoa/ReactiveCocoa.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;ReactiveCocoa/RACEXTScope.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTFlickrPhotoMetadata.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在类扩展中添加如下私有属性：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RWTSearchResultsItemViewModel&lt;/span&gt; ()&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;weak&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RWTViewModelServices&amp;gt; services;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) RWTFlickrPhoto *photo;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在同一文件中实现如下方法：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;)initWithPhoto:(RWTFlickrPhoto *)photo services:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RWTViewModelServices&amp;gt;)services &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    _title = photo.title;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    _url = photo.url;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    _services = services;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    _photo = photo;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; initialize];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后添加一个initialize方法，注意了，这是关键的地方：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)initialize &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  RACSignal *fetchMetadata =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [RACObserve(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, isVisible)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     filter:^&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *visible) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [visible boolValue];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  @weakify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [fetchMetadata subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    @strongify(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [[[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.services getFlickrSearchService] flickrImageMetadata:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.photo.identifier]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     subscribeNext:^(RWTFlickrPhotoMetadata *x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.favorites = @(x.favorites);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.comments = @(x.comments);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;方法的第一部分创建了一个用于监听isVisible属性的信号fetchMetadate，并且根据isVisible的值进行了过滤。结果就是只有当isVisible为true时这个信号才会发出Next Value。&lt;/p&gt;
&lt;p&gt;接下来一部分就是订阅这个信号以便开始请求flickrImageMetadata方法。当这个内嵌的信号触发Next时，将更新赞数和评论数。&lt;/p&gt;
&lt;p&gt;总的来说，当isVisible为true时，将触发Flickr请求，然后在未来的某个点更新comments和favorites属性。&lt;/p&gt;
&lt;p&gt;为了使这个新的ViewModel能够使用，打开RWTSearchResultsViewModel.m导入如下头文件：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;LinqToObjectiveC/NSArray+LinqExtensions.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTSearchResultsItemViewModel.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在初始化方法中，删除当前的代码，然后设置_searchResults如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;_searchResults =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [results.photos linq_select:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(RWTFlickrPhoto *photo) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[RWTSearchResultsItemViewModel alloc]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              initWithPhoto:photo services:services];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码将每一个模型对象封装成了一个ViewModel。&lt;/p&gt;
&lt;p&gt;最后一步就是根据视图设置isVisible属性，使得这些新的属性能够生效。&lt;/p&gt;
&lt;p&gt;打开RWTSearchResultsTableViewCell.m添加如下头文件：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;RWTSearchResultsItemViewModel.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在同一文件中，改变bindViewModel方法的第一行代码，使用新添加的ViewModel。&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;RWTSearchResultsItemViewModel *photo = viewModel;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在同一方法中添加如下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[RACObserve(photo, favorites) subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.favouritesLabel.text = [x stringValue];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.favouritesIcon.hidden = (x == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[RACObserve(photo, comments) subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; *x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.commentsLabel.text = [x stringValue];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.commentsIcon.hidden = (x == &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;photo.isVisible = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样当comments和favorites属性发生变化时，对应的lable以及image也会更新。&lt;/p&gt;
&lt;p&gt;最后一步，设置ViewModel的isVisible为YES。&lt;/p&gt;
&lt;h2 id=&quot;后记&quot;&gt;&lt;a href=&quot;#后记&quot; class=&quot;headerlink&quot; title=&quot;后记&quot;&gt;&lt;/a&gt;后记&lt;/h2&gt;&lt;p&gt;终于翻译完了，这是我第一次尝试翻译英文技术文章，前后断断续续用了大概两周的时间，真的很累，说实话，最后完全是为了翻译而去翻译的，而不是为了学习技术而去翻译的。不过这个过程中还是学到了不少东西。以后我还会坚持找一些经典的文章拿来翻译，不过不会翻译这么长的文章了，太累了。&lt;/p&gt;
&lt;p&gt;水平有限，很多地方翻译的不是很通顺，有些句子不知道怎么翻好，干脆就没有翻译，个中错误，以后有空会慢慢纠正。（2016-5-19）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;原文地址：&lt;a href=&quot;https://www.raywenderlich.com/74131/mvvm-tutorial-with-reactivecocoa-part-2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MVVM Tutorial w
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>2016年5月开发问题记录</title>
    <link href="http://yoursite.com/2016/05/08/2016%E5%B9%B45%E6%9C%88%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2016/05/08/2016年5月开发问题记录/</id>
    <published>2016-05-07T16:00:00.000Z</published>
    <updated>2016-07-03T10:02:43.000Z</updated>
    
    <content type="html">&lt;p&gt;这是我最近工作中遇到的问题，做一个简单的记录。&lt;/p&gt;
&lt;h2 id=&quot;设置导航栏透明&quot;&gt;&lt;a href=&quot;#设置导航栏透明&quot; class=&quot;headerlink&quot; title=&quot;设置导航栏透明&quot;&gt;&lt;/a&gt;设置导航栏透明&lt;/h2&gt;&lt;p&gt;项目中有一个界面的导航栏是透明的，效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/d2b06aad44ccf25b3088bf3268f6de26.png&quot; alt=&quot;1-1&quot;&gt;&lt;/p&gt;
&lt;p&gt;我首先想到的是:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationController.navigationBar.barTintColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; clearColor];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是设置了没有效果，然后又是一顿Google，找到了如下的解决方案：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置导航栏背景图为一个透明的空图片&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.lmrNavigationBar setBackgroundImage:[&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; new] forBarMetrics:&lt;span class=&quot;built_in&quot;&gt;UIBarMetricsDefault&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置导航栏的阴影背景图为一个透明的空图片&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.lmrNavigationBar.shadowImage = [&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; new];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置导航栏为半透明&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.lmrNavigationBar.translucent = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;设置UIPageControl左对齐&quot;&gt;&lt;a href=&quot;#设置UIPageControl左对齐&quot; class=&quot;headerlink&quot; title=&quot;设置UIPageControl左对齐&quot;&gt;&lt;/a&gt;设置UIPageControl左对齐&lt;/h2&gt;&lt;p&gt;UIPageControl默认是居中对齐的，要设置它左对齐，需要进行在布局是，根据UIPageControl点的个数，计算UIPageControl的中心点X的坐标。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)layoutSubviews &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGSize&lt;/span&gt; pageSize = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.pageControl sizeForNumberOfPages:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.pageControl.numberOfPages];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.pageControl setCenterX:&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; + pageSize.width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.pageControl setOriginY:&lt;span class=&quot;built_in&quot;&gt;CGRectGetHeight&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.frame) - &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt; - &lt;span class=&quot;built_in&quot;&gt;CGRectGetHeight&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.pageControl.frame)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/664bd5d66be86fc7d0327fa63c0b8958.png&quot; alt=&quot;2-1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;设置UILabel的内边距&quot;&gt;&lt;a href=&quot;#设置UILabel的内边距&quot; class=&quot;headerlink&quot; title=&quot;设置UILabel的内边距&quot;&gt;&lt;/a&gt;设置UILabel的内边距&lt;/h2&gt;&lt;p&gt;项目中要实现如下的一个标签（不可点击）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/dab95307496966b3e7f51b6f8fa22308.png&quot; alt=&quot;3-1&quot;&gt;&lt;/p&gt;
&lt;p&gt;一种方案是直接使用UIButton来实现，因为UIButton有titleEdgeInsets属性，可以设置文字的内边距，我这里尝试使用了UILabel来实现，UILabel默认是不可以设置内边距的，但是可以通过自定义Label来实现，实现代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;LMRPaddingLabel.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LMRPaddingLabel&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)drawTextInRect:(&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;)rect &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIEdgeInsets&lt;/span&gt; insets = &amp;#123;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; drawTextInRect:&lt;span class=&quot;built_in&quot;&gt;UIEdgeInsetsInsetRect&lt;/span&gt;(rect, insets)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGSize&lt;/span&gt;)intrinsicContentSize &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGSize&lt;/span&gt; size = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; intrinsicContentSize];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(size.width + &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, size.height + &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，LMRPaddingLabel就会有2个点的内边距，相关问题可参考：&lt;a href=&quot;http://stackoverflow.com/questions/19437579/ios-add-left-padding-to-uilabel&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ios add left padding to uilabel&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;长按手势默认会触发两次&quot;&gt;&lt;a href=&quot;#长按手势默认会触发两次&quot; class=&quot;headerlink&quot; title=&quot;长按手势默认会触发两次&quot;&gt;&lt;/a&gt;长按手势默认会触发两次&lt;/h2&gt;&lt;p&gt;给一个View添加了一个UILongPressGestureRecognizer，长按这个View，默认会触发两次，一次是经过了minimumPressDuration长的时间，另一次是手指离开时，可以通过手势的state属性来区分，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;-  (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)handleLongPress:(&lt;span class=&quot;built_in&quot;&gt;UILongPressGestureRecognizer&lt;/span&gt;*)sender &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sender.state == &lt;span class=&quot;built_in&quot;&gt;UIGestureRecognizerStateEnded&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;UIGestureRecognizerStateEnded&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//Do Whatever You want on End of Gesture&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sender.state == &lt;span class=&quot;built_in&quot;&gt;UIGestureRecognizerStateBegan&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;UIGestureRecognizerStateBegan.&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//Do Whatever You want on Began of Gesture&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;相关问题可参考：&lt;a href=&quot;http://stackoverflow.com/questions/3319591/uilongpressgesturerecognizer-gets-called-twice-when-pressing-down&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UILongPressGestureRecognizer gets called twice when pressing down&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用RAC绑定可重用的Cell&quot;&gt;&lt;a href=&quot;#使用RAC绑定可重用的Cell&quot; class=&quot;headerlink&quot; title=&quot;使用RAC绑定可重用的Cell&quot;&gt;&lt;/a&gt;使用RAC绑定可重用的Cell&lt;/h2&gt;&lt;p&gt;一般来讲，我们会为每一个复杂View创建一个对应的ViewModel，然后使用RAC（ReactiveCocoa）对View与ViewModel进行绑定（Binding），View与ViewModel之间始终是一一对应的，但是在UITableview中就有问题了，由于UITableviewCell的重用机制，实际创建的Cell个数要少于对应的ViewModel的数量，这样如果还是使用RAC进行简单的数据绑定的话，就会出现重复绑定的问题。&lt;/p&gt;
&lt;p&gt;解决方案就是在Cell发生重用后，解除Cell与之前的ViewModel的绑定，然后把Cell与新的ViewModel进行绑定。RAC中有一个方法&lt;code&gt;takeUntil&lt;/code&gt;可以实现在指定信号发出前，一直订阅某一信号，一旦指定信号发出，就不再订阅某一信号，就相当于接触绑定。&lt;/p&gt;
&lt;p&gt;实例代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt; *)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView cellForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt; *cell =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [tableView dequeueReusableCellWithIdentifier:REUSABLE_CELL_ID];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; *label = (&lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; *)[cell viewWithTag:VIEW_TAG];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Model *someModel = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; getModelFromIndexPath:indexPath];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//  `takeUntil:` makes the RACObserve() signal complete (and thus breaks the subscription)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//  when the cell is recycled.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RAC(label, text) = [RACObserve(someModel, someKey)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            takeUntil:cell.rac_prepareForReuseSignal];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cell;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里信号rac_prepareForReuseSignal即为Cell发生重用时发出的信号。&lt;/p&gt;
&lt;p&gt;相关问题可参考：&lt;a href=&quot;https://gist.github.com/bunnyhero/9988574&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Example of Reactive Cocoa binding for a reusable cell.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用NSURLSession发送同步请求&quot;&gt;&lt;a href=&quot;#使用NSURLSession发送同步请求&quot; class=&quot;headerlink&quot; title=&quot;使用NSURLSession发送同步请求&quot;&gt;&lt;/a&gt;使用NSURLSession发送同步请求&lt;/h2&gt;&lt;p&gt;最近项目中用到了同步请求，使用NSURLConnection发送同步请求非常简单，直接调用NSURLConnection的类方法&lt;code&gt;+sendSynchronousRequest:&lt;/code&gt;就可以了，不过由于苹果官方不建议使用NSURLConnection，而NSURLSession又没有直接的同步请求的方法，所以就查了一下如何使用NSURLSession发送同步请求，结果如下，可以使用下面的方法发送同步请求：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;NSURLSession+SynchronousTask.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NSURLSession&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;SynchronousTask&lt;/span&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#pragma mark - NSURLSessionDataTask&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;nullable&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; *)sendSynchronousDataTaskWithURL:(&lt;span class=&quot;keyword&quot;&gt;nonnull&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *)url returningResponse:(&lt;span class=&quot;built_in&quot;&gt;NSURLResponse&lt;/span&gt; *_Nullable*_Nullable)response error:(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *_Nullable*_Nullable)error &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; sendSynchronousDataTaskWithRequest:[&lt;span class=&quot;built_in&quot;&gt;NSURLRequest&lt;/span&gt; requestWithURL:url] returningResponse:response error:error];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;nullable&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; *)sendSynchronousDataTaskWithRequest:(&lt;span class=&quot;keyword&quot;&gt;nonnull&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;NSURLRequest&lt;/span&gt; *)request returningResponse:(&lt;span class=&quot;built_in&quot;&gt;NSURLResponse&lt;/span&gt; *_Nullable*_Nullable)response error:(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *_Nullable*_Nullable)error &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dispatch_semaphore_t semaphore = dispatch_semaphore_create(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    __block &lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; *data = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; dataTaskWithRequest:request completionHandler:^(&lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; *taskData, &lt;span class=&quot;built_in&quot;&gt;NSURLResponse&lt;/span&gt; *taskResponse, &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *taskError) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        data = taskData;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (response) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            *response = taskResponse;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (error) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            *error = taskError;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        dispatch_semaphore_signal(semaphore);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;] resume];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; data;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里使用的GCD的信号量做同步，使用时直接调用NSURLSession的这个分类的方法即可实现同步请求。&lt;/p&gt;
&lt;h2 id=&quot;iOS7上自动布局的坑：Assertion-failure-in-UITableView-layoutSublayersOfLayer-的错误&quot;&gt;&lt;a href=&quot;#iOS7上自动布局的坑：Assertion-failure-in-UITableView-layoutSublayersOfLayer-的错误&quot; class=&quot;headerlink&quot; title=&quot;iOS7上自动布局的坑：Assertion failure in -[UITableView layoutSublayersOfLayer:]的错误&quot;&gt;&lt;/a&gt;iOS7上自动布局的坑：Assertion failure in -[UITableView layoutSublayersOfLayer:]的错误&lt;/h2&gt;&lt;p&gt;最近在开发中遇到了“Assertion failure in -[UITableView layoutSublayersOfLayer:]”错误，而且只在iOS7上出现，iOS8及以上都是正常了，于是一阵Google，发现原来这个iOS7上自动布局的一个坑，造成这个错误主要有两个原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在添加UITableviewCell的子视图时，加在了Cell上而不是加在Cell的ContentView上，并且使用自动布局来布局&lt;/li&gt;
&lt;li&gt;给UITableview添加了子视图，并且使用自动布局来布局，即&lt;code&gt;[tableView addSubview:someView]&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于第一个问题比较好解决，一般Cell的子视图都是加在Cell的ContentView上的，如果有那个视图没有加在ContentView上，改过来就可以了，只不过找起来可能比较麻烦。&lt;/p&gt;
&lt;p&gt;第二个问题就比较麻烦了，有时候我们确实需要给UITableview上加一个子视图，例如，加一个ErrorView或LoadingView等，这是如果使用自动布局设置了这个子视图与Tableview之间的约束，就会出现这个错误。解决方法就是不要使用自动布局，改用Frame的方法去设置子视图的位置，这样就不会报错了。针对iSO7专门做一下适配，如果大于iOS7可以继续使用自动布局。&lt;/p&gt;
&lt;p&gt;因为自动布局是在iOS6上才出现的，所以iOS6，包括iOS7上的自动布局都不是很成熟，有很多坑，这就需要我们不多的总结，才能避免再次掉进坑里。&lt;/p&gt;
&lt;h2 id=&quot;Masonry不能用来更新XIB上设置的约束&quot;&gt;&lt;a href=&quot;#Masonry不能用来更新XIB上设置的约束&quot; class=&quot;headerlink&quot; title=&quot;Masonry不能用来更新XIB上设置的约束&quot;&gt;&lt;/a&gt;Masonry不能用来更新XIB上设置的约束&lt;/h2&gt;&lt;p&gt;使用XIB加载的视图，如果在XIB上设置了自动布局的约束，在代码中想更新约束，是不能使用Masonry的mas_updateConstraints方法来更新约束的。解决方法就是把要更新的约束通过IBOutlet连接到代码中，然后在代码里更新这个约束，不过这个方法比较麻烦，暂时还没有找到其他更好的方法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这是我最近工作中遇到的问题，做一个简单的记录。&lt;/p&gt;
&lt;h2 id=&quot;设置导航栏透明&quot;&gt;&lt;a href=&quot;#设置导航栏透明&quot; class=&quot;headerlink&quot; title=&quot;设置导航栏透明&quot;&gt;&lt;/a&gt;设置导航栏透明&lt;/h2&gt;&lt;p&gt;项目中有一个界面的导航栏是透明的，效果
    
    </summary>
    
      <category term="iOS Tips" scheme="http://yoursite.com/categories/iOS-Tips/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS开发企业证书申请过程全记录</title>
    <link href="http://yoursite.com/2016/04/10/iOS%E5%BC%80%E5%8F%91%E4%BC%81%E4%B8%9A%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7%E8%BF%87%E7%A8%8B%E5%85%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2016/04/10/iOS开发企业证书申请过程全记录/</id>
    <published>2016-04-09T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;p&gt;最近帮公司申请了企业开发者证书，中间也遇到了不少坑，下面是整个过程的一个完整记录，包括申请邓白氏编码的过程，希望对大家有所帮助。&lt;/p&gt;
&lt;h3 id=&quot;申请邓白氏编码&quot;&gt;&lt;a href=&quot;#申请邓白氏编码&quot; class=&quot;headerlink&quot; title=&quot;申请邓白氏编码&quot;&gt;&lt;/a&gt;申请邓白氏编码&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;注册企业开发者账号之前，要先申请&lt;a href=&quot;http://baike.baidu.com/link?url=dzCD0bvR7RV_I_3KBXQtse65aaKmEO8_ghvPq7M9Y3V6-H-omCBMvpOMNImYwvKYdBBdhkvaD2oTmgiTYd9FHq&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;邓白氏编码&lt;/a&gt;，申请地址p&lt;a href=&quot;https://developer.apple.com/support/D-U-N-S/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.apple.com/support/D-U-N-S/&lt;/a&gt;，首先填写公司信息，然后提交申请&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/b1ee643bd69fb351c1048b0f4c620ca2.png&quot; alt=&quot;1.1.1&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/7bd0b2899cdc677a901febad7306fba2.png&quot; alt=&quot;1.1.2&quot;&gt;&lt;/li&gt;
&lt;li&gt;过一会会收到一封邮件，大概内容就是正在申请邓氏码，大概什么时候完成，还有一个requestID&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/5a8e972d91eb408774c787acf066c713.png&quot; alt=&quot;1.2.1&quot;&gt;&lt;/li&gt;
&lt;li&gt;又过了两天，接到了上海一家公司的电话，他跟我确认了一下邮箱，接着他会给你这个邮箱发一封邮件，要求你提供以下公司信息&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/810e19e549cbac41c918fdd9f794c025.png&quot; alt=&quot;1.3.1&quot;&gt;&lt;/li&gt;
&lt;li&gt;回复这封邮件，过一会又会收到一封邮件，内容如下&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/f1de6028777c7874a1593ec0119da0a6.png&quot; alt=&quot;1.4.1&quot;&gt;&lt;/li&gt;
&lt;li&gt;有过了不到一天的时间，就收到了申请的邓氏码，虽然他邮件上要求14个工作日再去使用邓氏码，但是根据我的尝试，我只等了不到两天就可以使用了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;注册企业开发者账号&quot;&gt;&lt;a href=&quot;#注册企业开发者账号&quot; class=&quot;headerlink&quot; title=&quot;注册企业开发者账号&quot;&gt;&lt;/a&gt;注册企业开发者账号&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;注册一个AppleID，这个就不用说了，这里要注意的一点是，你在注册AppleID时必须使用你真实姓名的拼音去注册，否则苹果会给你发邮件让你改成真实姓名，我就遇到了这一点。&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/66506633bad28c995b24039688dda30e.png&quot; alt=&quot;2.1.1&quot;&gt;&lt;/li&gt;
&lt;li&gt;用你注册的AppleID登录苹果开发者中心，在最底部点击Enterprise Program，注意不是Developer Program。&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/939056f54db775460ceb68e2506e0003.png&quot; alt=&quot;2.2.1&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/2281829dbb65193c65e248e581e595b3.png&quot; alt=&quot;2.2.2&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/0aa47a0de740fdcd44c8197dafd43006.png&quot; alt=&quot;2.2.3&quot;&gt;&lt;/li&gt;
&lt;li&gt;Entity Type选择“Company/Organization”，然后点击继续&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/81c91b2b12845c24d0376ac599769625.png&quot; alt=&quot;2.3.1&quot;&gt;&lt;/li&gt;
&lt;li&gt;填写资料，然后点击继续&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/f04ef93f3b1298058add7700888fbb97.png&quot; alt=&quot;2.4.1&quot;&gt;&lt;/li&gt;
&lt;li&gt;确认信息，这里要注意一点，苹果显示的地址有字数限制，所以如果你的公司地址很长，这里可能会显示不全，这是正常的。确认完成后，点击提交。&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/2bad2013936e0dfe82b8e0b5bbc1a7ec.png&quot; alt=&quot;2.4.1&quot;&gt;&lt;/li&gt;
&lt;li&gt;过一会会收到一封邮件，提示你的申请已经被接受&lt;/li&gt;
&lt;li&gt;又过了两天，苹果会打电话来确认一些信息，然后就可以接着走下面的流程了，进入开发者中心，点击Review Now&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/dade54e4af9cc6126cb099e6656bf59f.png&quot; alt=&quot;2.7.1&quot;&gt;&lt;/li&gt;
&lt;li&gt;点击继续，然后就到了付款的阶段&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/249c8652294855c003063ab3cb1d04df.png&quot; alt=&quot;2.8.1&quot;&gt;&lt;/li&gt;
&lt;li&gt;点击Purchase，然后要重新登录一次AppleID，然后就是填写付款信息，这里要注意的是使用的信用卡一定是要同时具有银联标志和VISA标志的卡，我尝试过，使用仅支持银联或者VISA的信用卡是不能支付成功的。&lt;/li&gt;
&lt;li&gt;支付完成后，这个企业开发者证书就申请完了，登录开发者中心，显示的开发者类型就是企业开发者（in-house)&lt;br&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/6c79710a8bb20bf59439b3de749e1839.png&quot; alt=&quot;2.10.1&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上就算是我申请苹果企业开发者证书的全过程，希望对大家有所帮助&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近帮公司申请了企业开发者证书，中间也遇到了不少坑，下面是整个过程的一个完整记录，包括申请邓白氏编码的过程，希望对大家有所帮助。&lt;/p&gt;
&lt;h3 id=&quot;申请邓白氏编码&quot;&gt;&lt;a href=&quot;#申请邓白氏编码&quot; class=&quot;headerlink&quot; title=&quot;申请邓白氏编
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>自动打包工具shenzhen使用简介</title>
    <link href="http://yoursite.com/2016/01/01/%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85%E5%B7%A5%E5%85%B7shenzhen%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2016/01/01/自动打包工具shenzhen使用简介/</id>
    <published>2015-12-31T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;p&gt;DailyBuild几乎是每一个iOS开发每天都必做的事情，尤其是到了项目测试阶段，每天都要打好几个安装包给测试同学去测试，如果使用以前的老方法，就得先手动Clean，然后Archive，然后创建响应的目录，把安装包和dSYM文件都拷进去，然后再上传到FTP，所有的这些操作，手动做下来至少得七八分钟，每天如果打三个包，那么将近半个小时就浪费在了打包上。&lt;/p&gt;
&lt;p&gt;为了节约打包话费的时间，出现了很多自动打包的工具，比较著名的有facebook的&lt;a href=&quot;https://github.com/facebook/xctool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xctool&lt;/a&gt;以及Mattt Thompson大神的&lt;a href=&quot;https://github.com/nomad/shenzhen&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;shenzhen&lt;/a&gt;（深圳，名字也很有意思，😄），本文主要介绍一下&lt;a href=&quot;https://github.com/nomad/shenzhen&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;shenzhen&lt;/a&gt;的用法。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nomad/shenzhen&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;shenzhen&lt;/a&gt;最大的特点就是它除了能个打包外，还可以发布，可以发布到&lt;a href=&quot;https://itunesconnect.apple.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iTunes Connect&lt;/a&gt;，也可以发布到&lt;a href=&quot;http://fir.im/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FIR.im&lt;/a&gt;，&lt;a href=&quot;http://www.pgyer.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;蒲公英&lt;/a&gt;等第三方应用托管平台。让我们可以一键时间打包发布。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;使用gem安装&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo gem install shenzhen&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;h3 id=&quot;打包&quot;&gt;&lt;a href=&quot;#打包&quot; class=&quot;headerlink&quot; title=&quot;打包&quot;&gt;&lt;/a&gt;打包&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ipa build -w lazyaudio.xcworkspace --clean -d /Users/liujinlong/Desktop/App -s MyApp --ipa AppName.ipa -c Debug --verbose&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-w 表示编译的workspace，如果没有创建workspace，可以使用-p来指定项目名&lt;/li&gt;
&lt;li&gt;–clean 表示在编译前进行clean操作&lt;/li&gt;
&lt;li&gt;-d 指定的是打包后生成的&lt;em&gt;.ipa和&lt;/em&gt;.dSYM文件存放的目录，可以是不存在的目录，如果目录不存在，会自动创建&lt;/li&gt;
&lt;li&gt;-s 指定scheme，如果存在多个scheme，需要明确指定的，如果不指定，在执行时会出现选项，进行选择&lt;/li&gt;
&lt;li&gt;-ipa 指定生成的ipa的名称，注意要添加.ipa&lt;/li&gt;
&lt;li&gt;-c 指定configuration，这里可以指定是以Debug还是以Release方法进行编译，注意第一个字母要大写，否则会出错&lt;/li&gt;
&lt;li&gt;–verbose打印，更多log&lt;/li&gt;
&lt;li&gt;如果项目使用了CocoaPods，应该使用-w指定workspace进行编译，并且要明确指定编译哪个scheme&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;发布&quot;&gt;&lt;a href=&quot;#发布&quot; class=&quot;headerlink&quot; title=&quot;发布&quot;&gt;&lt;/a&gt;发布&lt;/h3&gt;&lt;p&gt;发布的命令的很多，具体可以参考github的&lt;a href=&quot;https://github.com/nomad/shenzhen/blob/master/README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;README&lt;/a&gt;，这里只介绍上传到FTP一种&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ipa distribute:ftp --host 127.0.0.1 -port 8080 -f /Users/liujinlong/Desktop/App/AppName.ipa -u username -p 123456 --path /iOSApp/v1.1.2/20160101 --mkdir&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;–host 指定FTP服务器主机&lt;/li&gt;
&lt;li&gt;–port 指定FTP服务器端口&lt;/li&gt;
&lt;li&gt;-f 指定要上传的ipa文件的路径&lt;/li&gt;
&lt;li&gt;-u 指定FTP服务器用户名&lt;/li&gt;
&lt;li&gt;-p 指定FTP服务器密码&lt;/li&gt;
&lt;li&gt;–path 指定FTP服务器路径&lt;/li&gt;
&lt;li&gt;–mkdir 如果指定的FTP服务器路径不存在，则创建路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有了&lt;a href=&quot;https://github.com/nomad/shenzhen&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;shenzhen&lt;/a&gt;这个工具，我们的打包工作就变得异常轻松，下面是我使用&lt;a href=&quot;https://github.com/nomad/shenzhen&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;shenzhen&lt;/a&gt;写的一个shell脚本，可以一个命令完成打包并上传到FTP。&lt;/p&gt;
&lt;p&gt;Github: &lt;a href=&quot;https://github.com/liujinlongxa/BuildIPAScript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BuildIPAScript&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;DailyBuild几乎是每一个iOS开发每天都必做的事情，尤其是到了项目测试阶段，每天都要打好几个安装包给测试同学去测试，如果使用以前的老方法，就得先手动Clean，然后Archive，然后创建响应的目录，把安装包和dSYM文件都拷进去，然后再上传到FTP，所有的这些操作
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>《ios核心动画高级技巧》阅读笔记(3)</title>
    <link href="http://yoursite.com/2015/12/27/%E3%80%8Aios%E6%A0%B8%E5%BF%83%E5%8A%A8%E7%94%BB%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0(3)/"/>
    <id>http://yoursite.com/2015/12/27/《ios核心动画高级技巧》阅读笔记(3)/</id>
    <published>2015-12-26T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;第四章-视觉效果&quot;&gt;&lt;a href=&quot;#第四章-视觉效果&quot; class=&quot;headerlink&quot; title=&quot;第四章 视觉效果&quot;&gt;&lt;/a&gt;第四章 视觉效果&lt;/h2&gt;&lt;h3 id=&quot;圆角&quot;&gt;&lt;a href=&quot;#圆角&quot; class=&quot;headerlink&quot; title=&quot;圆角&quot;&gt;&lt;/a&gt;圆角&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;设置CALayer的cornerRadius属性来设置圆角，并且要把maskToBounds设置为YES&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;边框&quot;&gt;&lt;a href=&quot;#边框&quot; class=&quot;headerlink&quot; title=&quot;边框&quot;&gt;&lt;/a&gt;边框&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;设置CALayer的borderColor和borderWidth可以设置边框的颜色和宽度&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;阴影&quot;&gt;&lt;a href=&quot;#阴影&quot; class=&quot;headerlink&quot; title=&quot;阴影&quot;&gt;&lt;/a&gt;阴影&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;shadowColor:阴影的颜色&lt;/li&gt;
&lt;li&gt;shadowOpacity:阴影的透明度&lt;/li&gt;
&lt;li&gt;shadowOffset:阴影的偏移&lt;/li&gt;
&lt;li&gt;shadowRadius:阴影的模糊度，即模糊半径&lt;/li&gt;
&lt;li&gt;如果设置了maskToBounds，则阴影就不会显示了，因为阴影已经被裁减调了。要解决这个问题，可以再创建一个frame一样的View，给这个view设置阴影，而设置原本的view的maskToBounds，这样阴影就不会被裁减掉了。&lt;/li&gt;
&lt;li&gt;shadowPath:指定阴影的路径。&lt;/li&gt;
&lt;li&gt;设置ImageView,label等的阴影，并不是设置他们边界的阴影，而是设置里面内容的阴影，例如设置label的阴影，设置的是label中文字的阴影。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidAppear:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)animated &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidAppear:animated];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.buleView.hidden = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layerView.layer.shadowColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor].CGColor;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layerView.layer.shadowOpacity = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layerView.layer.shadowRadius = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGMutablePathRef&lt;/span&gt; path = &lt;span class=&quot;built_in&quot;&gt;CGPathCreateMutable&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPathAddEllipseInRect&lt;/span&gt;(path, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layerView.bounds);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layerView.layer.shadowPath = path;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPathRelease&lt;/span&gt;(path);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;图层蒙版&quot;&gt;&lt;a href=&quot;#图层蒙版&quot; class=&quot;headerlink&quot; title=&quot;图层蒙版&quot;&gt;&lt;/a&gt;图层蒙版&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;mask:CALayer的mask属性定义了父图层的部分可见区域，父图层与mask的关系如下图&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/87291a0061be6a254bd4937851ecf4d8.png&quot; alt=&quot;mask&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虽然设置了mask，但是视图的事件响应区域任然是原视图的区域&lt;/li&gt;
&lt;li&gt;mask是可以动态设置的，只要改变mask的大小，就可以对视图的显示区域进行动画&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidAppear:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)animated &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidAppear:animated];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CAShapeLayer&lt;/span&gt; *mask = [&lt;span class=&quot;built_in&quot;&gt;CAShapeLayer&lt;/span&gt; layer];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIBezierPath&lt;/span&gt; *path = [&lt;span class=&quot;built_in&quot;&gt;UIBezierPath&lt;/span&gt; bezierPathWithOvalInRect:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.greenBtn.bounds];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mask.path = path.CGPath;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.greenBtn.layer.mask = mask;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesBegan:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIBezierPath&lt;/span&gt; *endPath = [&lt;span class=&quot;built_in&quot;&gt;UIBezierPath&lt;/span&gt; bezierPathWithRect:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.greenBtn.bounds];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CAShapeLayer&lt;/span&gt; *layer = (&lt;span class=&quot;built_in&quot;&gt;CAShapeLayer&lt;/span&gt; *)&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.greenBtn.layer.mask;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 动画&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CABasicAnimation&lt;/span&gt; *animation = [&lt;span class=&quot;built_in&quot;&gt;CABasicAnimation&lt;/span&gt; animationWithKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;path&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    animation.duration = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    animation.fromValue = (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)layer.path;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    animation.toValue = (__bridge &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable)(endPath.CGPath);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    animation.removedOnCompletion = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    animation.fillMode = kCAFillModeForwards;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [layer addAnimation:animation forKey:&lt;span class=&quot;string&quot;&gt;@&quot;shapeLayerPath&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;拉伸过滤&quot;&gt;&lt;a href=&quot;#拉伸过滤&quot; class=&quot;headerlink&quot; title=&quot;拉伸过滤&quot;&gt;&lt;/a&gt;拉伸过滤&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;minificationFilter:缩小图片的拉伸算法&lt;/li&gt;
&lt;li&gt;magnificationFilter:方法图片的拉伸算法&lt;/li&gt;
&lt;li&gt;三个值：kCAFilterNearest，kCAFilterLinear，kCAFilterTrilinear&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;组透明&quot;&gt;&lt;a href=&quot;#组透明&quot; class=&quot;headerlink&quot; title=&quot;组透明&quot;&gt;&lt;/a&gt;组透明&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;改变视图或图层的透明度，其子视图或子图层的透明度也会跟着改变，但是经过叠加后，原本颜色相同的父子视图，变成了不同的视图，如下图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/dda57bde043a3358e1cbc03af4fcbcf1.png&quot; alt=&quot;group-opacity&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为了解决这种问题，可以在plist中添加”Renders with group opacity”为YES（目前ios9中默认就为YES），或者设置CALayer的shouldRasterize为YES也可以达到相同的效果。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第四章-视觉效果&quot;&gt;&lt;a href=&quot;#第四章-视觉效果&quot; class=&quot;headerlink&quot; title=&quot;第四章 视觉效果&quot;&gt;&lt;/a&gt;第四章 视觉效果&lt;/h2&gt;&lt;h3 id=&quot;圆角&quot;&gt;&lt;a href=&quot;#圆角&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>《ios核心动画高级技巧》阅读笔记(2)</title>
    <link href="http://yoursite.com/2015/12/27/%E3%80%8Aios%E6%A0%B8%E5%BF%83%E5%8A%A8%E7%94%BB%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0(2)/"/>
    <id>http://yoursite.com/2015/12/27/《ios核心动画高级技巧》阅读笔记(2)/</id>
    <published>2015-12-26T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;第三章-图层集合学&quot;&gt;&lt;a href=&quot;#第三章-图层集合学&quot; class=&quot;headerlink&quot; title=&quot;第三章 图层集合学&quot;&gt;&lt;/a&gt;第三章 图层集合学&lt;/h2&gt;&lt;h3 id=&quot;布局&quot;&gt;&lt;a href=&quot;#布局&quot; class=&quot;headerlink&quot; title=&quot;布局&quot;&gt;&lt;/a&gt;布局&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;frame：图层的相对于父图层的外部坐标&lt;/li&gt;
&lt;li&gt;bounds：内部坐标&lt;/li&gt;
&lt;li&gt;center和position：相对于父图层anchorPoint所在的位置&lt;/li&gt;
&lt;li&gt;设置视图的frame，bounds和center，也就是相当于设置图层的frame，bounds和position&lt;/li&gt;
&lt;li&gt;一般情况下，frame中的size与bounds中的size是相同的，但是当视图旋转时，frame的size和bounds的size就不一样了，如下图&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/a592d9f689fe8a2818583430f5a8211d.png&quot; alt=&quot;frame&amp;amp;bounds&amp;amp;center&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;锚点&quot;&gt;&lt;a href=&quot;#锚点&quot; class=&quot;headerlink&quot; title=&quot;锚点&quot;&gt;&lt;/a&gt;锚点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;锚点是相对于父图层anchorPoint所在的位置。&lt;/li&gt;
&lt;li&gt;默认，锚点位于图层的中点，可以改变锚点的位置，描点改变，frame也会随之改变。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/99c7a6ddc1d2b162816b2a9ef5ff568f.png&quot; alt=&quot;anchorPoint&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改变锚点，position不会改变，但是frame改变了。&lt;/li&gt;
&lt;li&gt;anchorPoint是View在旋转是的轴点，如果想改变view的旋转轴点，改变anchorPoint即可&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;坐标系&quot;&gt;&lt;a href=&quot;#坐标系&quot; class=&quot;headerlink&quot; title=&quot;坐标系&quot;&gt;&lt;/a&gt;坐标系&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;与UIView一样，CALayer也提供了一套坐标变换的借口&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt;)convertPoint:(&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt;)p fromLayer:(&lt;span class=&quot;keyword&quot;&gt;nullable&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; *)l;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt;)convertPoint:(&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt;)p toLayer:(&lt;span class=&quot;keyword&quot;&gt;nullable&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; *)l;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;)convertRect:(&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;)r fromLayer:(&lt;span class=&quot;keyword&quot;&gt;nullable&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; *)l;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;)convertRect:(&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;)r toLayer:(&lt;span class=&quot;keyword&quot;&gt;nullable&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; *)l;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;翻转的几何结构&quot;&gt;&lt;a href=&quot;#翻转的几何结构&quot; class=&quot;headerlink&quot; title=&quot;翻转的几何结构&quot;&gt;&lt;/a&gt;翻转的几何结构&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;ios上坐标系原点为左上角，macOS上坐标系原点为左下角。&lt;/li&gt;
&lt;li&gt;CALayer的&lt;code&gt;geometryFlipped&lt;/code&gt;属性决定了图层的坐标是否相对于父图层翻转。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;z坐标轴&quot;&gt;&lt;a href=&quot;#z坐标轴&quot; class=&quot;headerlink&quot; title=&quot;z坐标轴&quot;&gt;&lt;/a&gt;z坐标轴&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;zPosition：表示图层空间z轴上的位置&lt;/li&gt;
&lt;li&gt;zPosition除了可以改变z轴的位置，还可以用来改变图层的先后顺序，如图，如果设置了绿色view的zPosition，绿色View就可以覆盖在蓝色view之上。但是通过这种方法改变视图的层次，是不能改变视图的响应事件的顺序的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/d673bc31fdbe28367ad557ac739a60fd.png&quot; alt=&quot;zPositon&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;anchorPointZ表示z轴上锚点的位置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Hit-Testing&quot;&gt;&lt;a href=&quot;#Hit-Testing&quot; class=&quot;headerlink&quot; title=&quot;Hit Testing&quot;&gt;&lt;/a&gt;Hit Testing&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CALayer不能处理点击事件，但是他有一系列方法帮你处理事件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;- (BOOL)containsPoint:(CGPoint)p;&lt;/code&gt;用于判断一个点是否属于一个图层&lt;/li&gt;
&lt;li&gt;&lt;code&gt;- (nullable CALayer *)hitTest:(CGPoint)p;&lt;/code&gt;返回被点击的图层&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesBegan:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *touch = [touches anyObject];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt; point = [touch locationInView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    point = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layerView convertPoint:point fromView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; ret = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layerView.layer containsPoint:point];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ret) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;green&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    point = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.buleView convertPoint:point fromView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layerView];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ret = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.buleView.layer containsPoint:point];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ret) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;blue&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; *layer = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view.layer hitTest:point];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (layer == &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layerView.layer) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;green&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(layer == &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.buleView.layer) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;blue&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第三章-图层集合学&quot;&gt;&lt;a href=&quot;#第三章-图层集合学&quot; class=&quot;headerlink&quot; title=&quot;第三章 图层集合学&quot;&gt;&lt;/a&gt;第三章 图层集合学&lt;/h2&gt;&lt;h3 id=&quot;布局&quot;&gt;&lt;a href=&quot;#布局&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>《ios核心动画高级技巧》阅读笔记(1)</title>
    <link href="http://yoursite.com/2015/12/27/%E3%80%8Aios%E6%A0%B8%E5%BF%83%E5%8A%A8%E7%94%BB%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0(1)/"/>
    <id>http://yoursite.com/2015/12/27/《ios核心动画高级技巧》阅读笔记(1)/</id>
    <published>2015-12-26T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;第一章-图层树&quot;&gt;&lt;a href=&quot;#第一章-图层树&quot; class=&quot;headerlink&quot; title=&quot;第一章 图层树&quot;&gt;&lt;/a&gt;第一章 图层树&lt;/h2&gt;&lt;h3 id=&quot;CoreAnimation简介&quot;&gt;&lt;a href=&quot;#CoreAnimation简介&quot; class=&quot;headerlink&quot; title=&quot;CoreAnimation简介&quot;&gt;&lt;/a&gt;CoreAnimation简介&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;动画只是CoreAnimation特性的冰山一角&lt;/li&gt;
&lt;li&gt;CoreAnimation是一个复合引擎，它的职责就是尽可能快地组合屏幕上不同的可视内容，这个内容被分解成独立的图层，存储在一个叫图层树的体系中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;图层与视图&quot;&gt;&lt;a href=&quot;#图层与视图&quot; class=&quot;headerlink&quot; title=&quot;图层与视图&quot;&gt;&lt;/a&gt;图层与视图&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CALayer类在概念上和UIView类似，同样是一些被层级关系树管理的矩形块，同样可以含有一些内容。他有一些方法和属性用来做动画和变换。&lt;/li&gt;
&lt;li&gt;和UIView最大的不同是，CALayer不处理用户的交互。CALayer并不清楚具体的响应链，因此它并不能响应时间。&lt;/li&gt;
&lt;li&gt;每个UIView都有一个CALayer属性，即所谓的bakinglayer，视图的职责就是创建并管理这个图层。视图的层级关系与其图层的层级关系是相同的。&lt;/li&gt;
&lt;li&gt;真正在界面上显示和进行动画的都是CALayer，UIView只是对CALayer的一个封装而已。&lt;/li&gt;
&lt;li&gt;进行视图和图层的分类，是为了职责分离，避免重复的代码。ios中视图为UIView，MacOS中视图为NSView，但是他们的图层都是CALayer。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;图层的能力&quot;&gt;&lt;a href=&quot;#图层的能力&quot; class=&quot;headerlink&quot; title=&quot;图层的能力&quot;&gt;&lt;/a&gt;图层的能力&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CALayer能做但UIView不能做的东西：&lt;ul&gt;
&lt;li&gt;阴影，圆角，带颜色的边框&lt;/li&gt;
&lt;li&gt;3D变换&lt;/li&gt;
&lt;li&gt;非矩形范围&lt;/li&gt;
&lt;li&gt;透明遮罩&lt;/li&gt;
&lt;li&gt;多级非线性动画&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;使用图层&quot;&gt;&lt;a href=&quot;#使用图层&quot; class=&quot;headerlink&quot; title=&quot;使用图层&quot;&gt;&lt;/a&gt;使用图层&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;可以直接在UIView的layer属性中添加图层，如下&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; *blueLayer = [[&lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    blueLayer.frame = &lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    blueLayer.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; blueColor].CGColor;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layerView.layer addSublayer:blueLayer];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用图层而不使用视图的情况&lt;ul&gt;
&lt;li&gt;开发可以在MacOS上运行的跨平台应用&lt;/li&gt;
&lt;li&gt;使用多种CALayer的子类（特殊图层），并且不想创建单独的UIView去封装他们&lt;/li&gt;
&lt;li&gt;做一些对性能特别挑剔的工作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;第二章-寄宿图&quot;&gt;&lt;a href=&quot;#第二章-寄宿图&quot; class=&quot;headerlink&quot; title=&quot;第二章 寄宿图&quot;&gt;&lt;/a&gt;第二章 寄宿图&lt;/h2&gt;&lt;p&gt;CALayer除了可以设置颜色，也可以设置一张图片，这张图片称为CALayer的寄宿图。&lt;/p&gt;
&lt;h3 id=&quot;contents属性&quot;&gt;&lt;a href=&quot;#contents属性&quot; class=&quot;headerlink&quot; title=&quot;contents属性&quot;&gt;&lt;/a&gt;contents属性&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CALayer有一个contents的属性，它虽然是id类型，但是必须设置一个CGImage，才能显示出图片，设置为其他类型，都只会显示一个空白的区域。这种现象是有Mac OS的历史历史原因造成的。在Mac OS上，contents对CGImage和NSImage类型的值都起作用，但在ios中，不能给contents设置一个UIImage。&lt;/li&gt;
&lt;li&gt;contentGravity属性：与UIView中的contentMode属性对应&lt;/li&gt;
&lt;li&gt;contentScale属性：定义了寄宿图的像素尺寸和视图的比例，默认为1.0。UIView中与之对应的属性为contentScaleFactor。使用UIImage加载图片会自动根据屏幕加载2x或3x图片，但是使用CGImage则不会。这样我们就需要手动设置contentScale属性来修复这个问题。一般使用代码设置寄宿图，都会手动设置contentScale，如下：&lt;code&gt;blueLayer.contentsScale = [[UIScreen mainScreen] scale];&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;maskToBounds属性用来决定是否显示超出边界的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;contentsRect属性&quot;&gt;&lt;a href=&quot;#contentsRect属性&quot; class=&quot;headerlink&quot; title=&quot;contentsRect属性&quot;&gt;&lt;/a&gt;contentsRect属性&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;contentRect属性允许我们在图层边框里显示寄宿图的一个子域，这要比contentGravity属性灵活许多。contentRect是一个单位坐标，长宽最大都为1。默认为{0，0，1，1}，当设置为{0，0，0.5，0.5}，则显示效果如下图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/004ddacd5a9506600889fc2c32686262.png&quot; alt=&quot;contentsRect&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;contentRect的另外一个用途就是ImageSprites（图片拼合），把多张图片放在一张大的图片上，然后使用contentRect分别显示每一张图片，去掉不显示的部分，这就是图片拼合。在游戏编程中非常常见。加载一张大图要比加载多张小图效率要高。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;contentsCenter属性&quot;&gt;&lt;a href=&quot;#contentsCenter属性&quot; class=&quot;headerlink&quot; title=&quot;contentsCenter属性&quot;&gt;&lt;/a&gt;contentsCenter属性&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;contentsCenter属性表示图层相对于寄宿图的位置与大小，可以用来定义图片的拉伸。&lt;/li&gt;
&lt;li&gt;如下图，虚线框为图层的区域，灰色为内容的区域。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/01278b2b759e5b3c5fc5ae2a961a71ee.png&quot; alt=&quot;contentCenter&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;该属性相当于UIImage的&lt;code&gt;resizableImageWithCapInsets:&lt;/code&gt;方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;customDrawing&quot;&gt;&lt;a href=&quot;#customDrawing&quot; class=&quot;headerlink&quot; title=&quot;customDrawing&quot;&gt;&lt;/a&gt;customDrawing&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;除了直接给contents属性设置CGImage，也可以通过CoreGraphics直接绘制寄宿图。使用UIVIew 的drawRect:方法来自定义绘制&lt;/li&gt;
&lt;li&gt;除了重写drawRect:方法，也可以通过设置CALayer的代理，使用代理方法&lt;code&gt;(void)displayLayer:&lt;/code&gt;来实现重绘，但是强烈建议使用前一种方法。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一章-图层树&quot;&gt;&lt;a href=&quot;#第一章-图层树&quot; class=&quot;headerlink&quot; title=&quot;第一章 图层树&quot;&gt;&lt;/a&gt;第一章 图层树&lt;/h2&gt;&lt;h3 id=&quot;CoreAnimation简介&quot;&gt;&lt;a href=&quot;#CoreAnimation简介&quot; c
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>RAC学习笔记</title>
    <link href="http://yoursite.com/2015/12/20/RAC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2015/12/20/RAC学习笔记/</id>
    <published>2015-12-19T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;RAC简介&quot;&gt;&lt;a href=&quot;#RAC简介&quot; class=&quot;headerlink&quot; title=&quot;RAC简介&quot;&gt;&lt;/a&gt;RAC简介&lt;/h2&gt;&lt;p&gt;RAC要解决的问题是传统ios中事件，通知，回调的机制十分的繁琐。&lt;/p&gt;
&lt;h2 id=&quot;常规用法&quot;&gt;&lt;a href=&quot;#常规用法&quot; class=&quot;headerlink&quot; title=&quot;常规用法&quot;&gt;&lt;/a&gt;常规用法&lt;/h2&gt;&lt;h3 id=&quot;target-action&quot;&gt;&lt;a href=&quot;#target-action&quot; class=&quot;headerlink&quot; title=&quot;target-action&quot;&gt;&lt;/a&gt;target-action&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RAC可以替代一般的target-action操作，例如监测textField的文字的改变，不是用RAC的写法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; *text = (&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; *text = [[&lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view addSubview:text];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [text mas_makeConstraints:^(MASConstraintMaker *make) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            make.center.equalTo(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            make.size.mas_equalTo(&lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        text.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [text addTarget:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; action:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(textDidChange:) forControlEvents:&lt;span class=&quot;built_in&quot;&gt;UIControlEventEditingChanged&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        text;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)textDidChange:(&lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; *)sender &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;did change: %@&quot;&lt;/span&gt;, sender);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用RAC的写法：&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; *text = (&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; *text = [[&lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view addSubview:text];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [text mas_makeConstraints:^(MASConstraintMaker *make) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            make.center.equalTo(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            make.size.mas_equalTo(&lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        text.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [[text rac_signalForControlEvents:&lt;span class=&quot;built_in&quot;&gt;UIControlEventEditingChanged&lt;/span&gt;] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 或者&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//[text.rac_textSignal subscribeNext:^(id x) &amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//    NSLog(@&quot;%@&quot;, x);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#125;];&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        text;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;手势中使用RAC&quot;&gt;&lt;a href=&quot;#手势中使用RAC&quot; class=&quot;headerlink&quot; title=&quot;手势中使用RAC&quot;&gt;&lt;/a&gt;手势中使用RAC&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RAC可以替换手势的方法，代码如下&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view.userInteractionEnabled = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UITapGestureRecognizer&lt;/span&gt; *tap = [[&lt;span class=&quot;built_in&quot;&gt;UITapGestureRecognizer&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [[tap rac_gestureSignal] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view addGestureRecognizer:tap];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;通知&quot;&gt;&lt;a href=&quot;#通知&quot; class=&quot;headerlink&quot; title=&quot;通知&quot;&gt;&lt;/a&gt;通知&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RAC可以代替通知，并且RAC的通知不用移出&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [[[&lt;span class=&quot;built_in&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter] rac_addObserverForName:&lt;span class=&quot;built_in&quot;&gt;UIApplicationDidBecomeActiveNotification&lt;/span&gt; object:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;定制器&quot;&gt;&lt;a href=&quot;#定制器&quot; class=&quot;headerlink&quot; title=&quot;定制器&quot;&gt;&lt;/a&gt;定制器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RAC可以代替定时器&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 延迟2秒执行&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [[RACScheduler mainThreadScheduler] afterDelay:&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; schedule:^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;haha&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// interval为间隔事件，scheduler为在那个线程上执行，leeway为多久之后开始执行。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [[RACSignal interval:&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; onScheduler:[RACScheduler mainThreadScheduler] withLeeway:&lt;span class=&quot;number&quot;&gt;5.0&lt;/span&gt;] subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;代理&quot;&gt;&lt;a href=&quot;#代理&quot; class=&quot;headerlink&quot; title=&quot;代理&quot;&gt;&lt;/a&gt;代理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RAC可以替换代理，但仅限没有返回值的代理&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ViewController&lt;/span&gt; ()&amp;lt;&lt;span class=&quot;title&quot;&gt;UITableViewDelegate&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UIAlertView&lt;/span&gt; *alertView;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ViewController&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.alertView = [[&lt;span class=&quot;built_in&quot;&gt;UIAlertView&lt;/span&gt; alloc] initWithTitle:&lt;span class=&quot;string&quot;&gt;@&quot;RAC&quot;&lt;/span&gt; message:&lt;span class=&quot;string&quot;&gt;@&quot;test&quot;&lt;/span&gt; delegate:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; cancelButtonTitle:&lt;span class=&quot;string&quot;&gt;@&quot;OK&quot;&lt;/span&gt; otherButtonTitles: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; rac_signalForSelector:&lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(alertView:clickedButtonAtIndex:) fromProtocol:&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@protocol&lt;/span&gt;(&lt;span class=&quot;title&quot;&gt;UIAlertViewDelegate&lt;/span&gt;)]&lt;span class=&quot;title&quot;&gt;subscribeNext&lt;/span&gt;:^(&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;x&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;,x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 或者&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// [[self.alertView rac_buttonClickedSignal] subscribeNext:^(id x) &amp;#123;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//     NSLog(@&quot;%@&quot;, x);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#125;];&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.alertView show];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;KVO&quot;&gt;&lt;a href=&quot;#KVO&quot; class=&quot;headerlink&quot; title=&quot;KVO&quot;&gt;&lt;/a&gt;KVO&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RAC可以替换KVO&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ViewController&lt;/span&gt; ()&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;assign&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSInteger&lt;/span&gt; index;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ViewController&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [RACObserve(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, index) subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesBegan:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.index++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;高级用法&quot;&gt;&lt;a href=&quot;#高级用法&quot; class=&quot;headerlink&quot; title=&quot;高级用法&quot;&gt;&lt;/a&gt;高级用法&lt;/h2&gt;&lt;h3 id=&quot;创建信号&quot;&gt;&lt;a href=&quot;#创建信号&quot; class=&quot;headerlink&quot; title=&quot;创建信号&quot;&gt;&lt;/a&gt;创建信号&lt;/h3&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RACSignal *signal = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSURLRequest&lt;/span&gt; *req = [&lt;span class=&quot;built_in&quot;&gt;NSURLRequest&lt;/span&gt; requestWithURL:[&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; URLWithString:&lt;span class=&quot;string&quot;&gt;@&quot;http://www.baidu.com&quot;&lt;/span&gt;]];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [&lt;span class=&quot;built_in&quot;&gt;NSURLConnection&lt;/span&gt; sendAsynchronousRequest:req queue:[&lt;span class=&quot;built_in&quot;&gt;NSOperationQueue&lt;/span&gt; mainQueue] completionHandler:^(&lt;span class=&quot;built_in&quot;&gt;NSURLResponse&lt;/span&gt; * _Nullable response, &lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; * _Nullable data, &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; * _Nullable connectionError) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (connectionError) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// 请求失败&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                [subscriber sendError:connectionError];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// 请求成功&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                [subscriber sendNext:data];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACDisposable disposableWithBlock:^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 取消订阅&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;cancel&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RACDisposable *disposable = [signal subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; *responseData) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, responseData);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, error);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; completed:^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;completed&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 订阅完就取消订阅，这样就不会执行订阅block了&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [disposable dispose];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;信号处理&quot;&gt;&lt;a href=&quot;#信号处理&quot; class=&quot;headerlink&quot; title=&quot;信号处理&quot;&gt;&lt;/a&gt;信号处理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;map:映射&lt;/li&gt;
&lt;li&gt;filter:过滤&lt;/li&gt;
&lt;li&gt;delay:延时&lt;/li&gt;
&lt;li&gt;startWith:在接收到信号前，先接收到一个信号&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; *textField = (&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; *view = [[&lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view addSubview:view];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [view mas_makeConstraints:^(MASConstraintMaker *make) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            make.center.equalTo(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            make.size.mas_equalTo(&lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        view.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        view;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [[[[[[textField rac_textSignal] map:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str = (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)value;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; @([str length]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;] filter:^&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [value integerValue] &amp;gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;] delay:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] startWith:&lt;span class=&quot;string&quot;&gt;@&quot;haha&quot;&lt;/span&gt;] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;timeout:超时&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *signal = [[RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [[RACScheduler mainThreadScheduler] afterDelay:&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; schedule:^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;hello&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;] timeout:&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; onScheduler:[RACScheduler mainThreadScheduler]]; &lt;span class=&quot;comment&quot;&gt;// 如果请求没有在2秒内完成，则请求超时，会调用errorBlock&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[signal subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;NSData&lt;/span&gt; *responseData) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, responseData);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; error:^(&lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, error);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; completed:^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;completed&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;take:接收到多次信号，但只处理前几次信号&lt;/li&gt;
&lt;li&gt;takeLast:只处理最后几次信号&lt;/li&gt;
&lt;li&gt;skip:忽略几次&lt;/li&gt;
&lt;li&gt;takeUntilBlock:返回YES可以表示不接收，返回NO表示接收该信号，与filter类似&lt;/li&gt;
&lt;li&gt;takeWhileBlock:当返回一次YES后，就停止接收所有信号&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *signal = [[RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;hello1&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;hello2&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;hello3&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;hello4&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;hello5&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;] takeLast:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[signal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, value);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;throttle:节流，可以规定两个信号的间隔时间必须大于某个值&lt;/li&gt;
&lt;li&gt;distinctUntilChanged:直到订阅的内容发生变化才会处理信号&lt;/li&gt;
&lt;li&gt;ignore:忽略某些信号值&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; *textField = (&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; *view = [[&lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view addSubview:view];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [view mas_makeConstraints:^(MASConstraintMaker *make) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        make.center.equalTo(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        make.size.mas_equalTo(&lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    view.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    view;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 如果文字的改变速度过快，则不处理，两次信号间隔时间必须大于0.3秒&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[[[[[textField rac_textSignal] throttle:&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;] distinctUntilChanged] ignore:&lt;span class=&quot;string&quot;&gt;@&quot;&quot;&lt;/span&gt;] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;flattenMap:订阅的值为一个信号，将该信号转为订阅具体的值&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; *textField = (&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; *view = [[&lt;span class=&quot;built_in&quot;&gt;UITextField&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view addSubview:view];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [view mas_makeConstraints:^(MASConstraintMaker *make) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        make.center.equalTo(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        make.size.mas_equalTo(&lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    view.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    view;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[[[textField.rac_textSignal throttle:&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;] flattenMap:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; value) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;aaa&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACDisposable disposableWithBlock:^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;repeat:重复发送某个信号&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *signal = [[RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendNext:[&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; date]];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;] repeat];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [signal subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;merge:同时订阅两个信号源，无论哪个发出信号，都会执行&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *signalA = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  RACSignal *signalB = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [[signalA merge:signalB] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;combineLatest:reduce:这是一个RACSignal的类方法，表示同时聚合多个信号&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *signalA = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RACSignal *signalB = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [[RACSignal combineLatest:@[signalA, signalB] reduce:^&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *s1, &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *s2)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;s1=%@, s2=%@&quot;&lt;/span&gt;, s1, s2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@%@&quot;&lt;/span&gt;, s1, s2];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;concat:先订阅信号A，A执行完成后再订阅信号B&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *signalA = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *signalB = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 先订阅A，A执行完成后，再执行B，如果A失败了，不会再执行B&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[[signalA concat:signalB] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;zipWith:两个信号都发出后，再执行，也可以使用combineLatest:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *signalA = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *signalB = [RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendNext:&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[[signalA zipWith:signalB] subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// x是一个RACTuple，包含了signalA和signalB的值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;RAC的坑&quot;&gt;&lt;a href=&quot;#RAC的坑&quot; class=&quot;headerlink&quot; title=&quot;RAC的坑&quot;&gt;&lt;/a&gt;RAC的坑&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;side effect: 一个信号源被多个订阅者订阅，每个订阅者收到的信号可能不一样。解决方法：使用reply&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;RACSignal *signalA = [[RACSignal createSignal:^RACDisposable *(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    i++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [subscriber sendNext:@(i)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [subscriber sendCompleted];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;] replay];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[signalA subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[signalA subscribeNext:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, x);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;RAC简介&quot;&gt;&lt;a href=&quot;#RAC简介&quot; class=&quot;headerlink&quot; title=&quot;RAC简介&quot;&gt;&lt;/a&gt;RAC简介&lt;/h2&gt;&lt;p&gt;RAC要解决的问题是传统ios中事件，通知，回调的机制十分的繁琐。&lt;/p&gt;
&lt;h2 id=&quot;常规用法&quot;&gt;&lt;a hre
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>CoreAnimation编程指南学习笔记(2)</title>
    <link href="http://yoursite.com/2015/12/13/CoreAnimation%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(2)/"/>
    <id>http://yoursite.com/2015/12/13/CoreAnimation编程指南学习笔记(2)/</id>
    <published>2015-12-12T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;第六章-动画&quot;&gt;&lt;a href=&quot;#第六章-动画&quot; class=&quot;headerlink&quot; title=&quot;第六章 动画&quot;&gt;&lt;/a&gt;第六章 动画&lt;/h2&gt;&lt;h3 id=&quot;动画类&quot;&gt;&lt;a href=&quot;#动画类&quot; class=&quot;headerlink&quot; title=&quot;动画类&quot;&gt;&lt;/a&gt;动画类&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CABasicAnimation提供了在图层的属性值间简单的插入。&lt;/li&gt;
&lt;li&gt;CAKeyframeAnimation提供支持关键帧动画。你指定动画的一个图层属性的关键路径，一个表示在动画的每个阶段的价值的数组，还有一个关键帧时间的数组和时间函数。&lt;/li&gt;
&lt;li&gt;CATransition提供了一个影响整个图层的内容过渡效果。在动画显示过程中采用淡出（fade）、推出(push)、显露(reveal)图层的内容。 常用的过渡效果可以通过提供你自己定制的核心图像滤镜来扩展。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;隐式动画&quot;&gt;&lt;a href=&quot;#隐式动画&quot; class=&quot;headerlink&quot; title=&quot;隐式动画&quot;&gt;&lt;/a&gt;隐式动画&lt;/h3&gt;&lt;p&gt;隐式动画指所有修改CALayer的可动画属性，默认会都会带有动画。例如&lt;code&gt;self.layer.position = CGPointMake(200, 200);&lt;/code&gt;默认是带有动画效果的。注意一定是修改layer属性，修改UIView的属性，默认是不带有隐式动画的。而且UIView默认带有的layer属性也是不带隐式动画的。&lt;/p&gt;
&lt;h3 id=&quot;显示动画&quot;&gt;&lt;a href=&quot;#显示动画&quot; class=&quot;headerlink&quot; title=&quot;显示动画&quot;&gt;&lt;/a&gt;显示动画&lt;/h3&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;CABasicAnimation&lt;/span&gt; *anim = [&lt;span class=&quot;built_in&quot;&gt;CABasicAnimation&lt;/span&gt; 	animationWithKeyPath:&lt;span class=&quot;string&quot;&gt;@&quot;opacity&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   anim.fromValue = @(&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   anim.toValue = @(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   anim.autoreverses = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   anim.repeatCount = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   anim.duration = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layer addAnimation:anim forKey:&lt;span class=&quot;string&quot;&gt;@&quot;anim&quot;&lt;/span&gt;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;第七章-事务&quot;&gt;&lt;a href=&quot;#第七章-事务&quot; class=&quot;headerlink&quot; title=&quot;第七章 事务&quot;&gt;&lt;/a&gt;第七章 事务&lt;/h2&gt;&lt;p&gt;图层的每一个改变都是事务的一部分。隐式分为显示事务和隐式事务。隐式事务由系统自动创建和提交，在修改图层属性时，系统会自动创建一个事务，在下一次运行循环时自动提交。显示事务由用户程序控制创建和提交。一旦创建了显示事务，系统就不会再创建隐式事务。&lt;/p&gt;
&lt;h3 id=&quot;使用显式事务禁止隐式动画&quot;&gt;&lt;a href=&quot;#使用显式事务禁止隐式动画&quot; class=&quot;headerlink&quot; title=&quot;使用显式事务禁止隐式动画&quot;&gt;&lt;/a&gt;使用显式事务禁止隐式动画&lt;/h3&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[&lt;span class=&quot;built_in&quot;&gt;CATransaction&lt;/span&gt; begin];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   [&lt;span class=&quot;built_in&quot;&gt;CATransaction&lt;/span&gt; setDisableActions:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layer.position = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   [&lt;span class=&quot;built_in&quot;&gt;CATransaction&lt;/span&gt; commit];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;修改隐式动画的动画时长&quot;&gt;&lt;a href=&quot;#修改隐式动画的动画时长&quot; class=&quot;headerlink&quot; title=&quot;修改隐式动画的动画时长&quot;&gt;&lt;/a&gt;修改隐式动画的动画时长&lt;/h3&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[&lt;span class=&quot;built_in&quot;&gt;CATransaction&lt;/span&gt; begin];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   [&lt;span class=&quot;built_in&quot;&gt;CATransaction&lt;/span&gt; setAnimationDuration:&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.layer.position = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   [&lt;span class=&quot;built_in&quot;&gt;CATransaction&lt;/span&gt; commit];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;第八章-KVC&quot;&gt;&lt;a href=&quot;#第八章-KVC&quot; class=&quot;headerlink&quot; title=&quot;第八章 KVC&quot;&gt;&lt;/a&gt;第八章 KVC&lt;/h2&gt;&lt;p&gt;CoreAnimation是通过KVC来实现对不同字段或关键路径进行动画的，使用方法如下&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[theLayer setValue:[&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithInteger:&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;] forKey:&lt;span class=&quot;string&quot;&gt;@&quot;someKey&quot;&lt;/span&gt;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用&lt;code&gt;defaultValueForKey:&lt;/code&gt;可以获取字段的默认值。&lt;/p&gt;
&lt;p&gt;CAAnimation提供支持使用关键路径访问选择的结构字段。目前支持的字段如下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/2015-12-13_10-42-53.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第六章-动画&quot;&gt;&lt;a href=&quot;#第六章-动画&quot; class=&quot;headerlink&quot; title=&quot;第六章 动画&quot;&gt;&lt;/a&gt;第六章 动画&lt;/h2&gt;&lt;h3 id=&quot;动画类&quot;&gt;&lt;a href=&quot;#动画类&quot; class=&quot;headerlink&quot; title=&quot;动画类
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>CoreAnimation编程指南学习笔记(1)</title>
    <link href="http://yoursite.com/2015/12/06/CoreAnimation%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(1)/"/>
    <id>http://yoursite.com/2015/12/06/CoreAnimation编程指南学习笔记(1)/</id>
    <published>2015-12-05T16:00:00.000Z</published>
    <updated>2016-07-01T12:43:36.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;第一章：核心动画概念&quot;&gt;&lt;a href=&quot;#第一章：核心动画概念&quot; class=&quot;headerlink&quot; title=&quot;第一章：核心动画概念&quot;&gt;&lt;/a&gt;第一章：核心动画概念&lt;/h2&gt;&lt;p&gt;CoreAnimation框架中类的分类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供显示内容的图层类&lt;/li&gt;
&lt;li&gt;动画和计时类&lt;/li&gt;
&lt;li&gt;布局和约束类&lt;/li&gt;
&lt;li&gt;事务类，在原子更新的时候组合图层类&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;图层类（Layer-Classes）&quot;&gt;&lt;a href=&quot;#图层类（Layer-Classes）&quot; class=&quot;headerlink&quot; title=&quot;图层类（Layer Classes）&quot;&gt;&lt;/a&gt;图层类（Layer Classes）&lt;/h3&gt;&lt;p&gt;CALayer是所有层类的父类，几个常见的图层子类：CAScrollLayer,CATextLayer,CATiledLayer等&lt;/p&gt;
&lt;h3 id=&quot;动画类和计时类&quot;&gt;&lt;a href=&quot;#动画类和计时类&quot; class=&quot;headerlink&quot; title=&quot;动画类和计时类&quot;&gt;&lt;/a&gt;动画类和计时类&lt;/h3&gt;&lt;p&gt;CAAnimation是动画类的基类，他实现了CAMediaTiming协议，提供了动画的持续时间，速度，和重复计数等。他也实现了CAAction协议，该协议为图层触发一个动画动作提供了标准化响应。&lt;/p&gt;
&lt;p&gt;动画类同时定义了一个使用贝塞尔曲线来描述动画改变的时间函数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CATransition：提供了一个图层改变的过渡效果，他能影响图层的整个内容。&lt;/li&gt;
&lt;li&gt;CAAnimationGroup:组动画&lt;/li&gt;
&lt;li&gt;CAPropertyAnimation:属性动画&lt;/li&gt;
&lt;li&gt;CABasicAnimation:基础动画&lt;/li&gt;
&lt;li&gt;CAKeyframeAnimation:关键帧动画&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;布局管理类&quot;&gt;&lt;a href=&quot;#布局管理类&quot; class=&quot;headerlink&quot; title=&quot;布局管理类&quot;&gt;&lt;/a&gt;布局管理类&lt;/h3&gt;&lt;p&gt;CAConstraint类是一个布局管理类，他可以指定子图层类限制于你指定的约束集合。&lt;/p&gt;
&lt;h3 id=&quot;事务管理类&quot;&gt;&lt;a href=&quot;#事务管理类&quot; class=&quot;headerlink&quot; title=&quot;事务管理类&quot;&gt;&lt;/a&gt;事务管理类&lt;/h3&gt;&lt;p&gt;CATransaction是核心动画里面负责协调多个动画原子更新显示操作。事务支持嵌套使用。核心动画支持两种事务：隐式事务和显式事务。&lt;/p&gt;
&lt;h2 id=&quot;第二章：渲染架构&quot;&gt;&lt;a href=&quot;#第二章：渲染架构&quot; class=&quot;headerlink&quot; title=&quot;第二章：渲染架构&quot;&gt;&lt;/a&gt;第二章：渲染架构&lt;/h2&gt;&lt;p&gt;每个可见的图层树由两个相应的树组成，一个是呈现树，一个是渲染树。修改图层的一个属性，图层树里相应的值会被马上更新，但是呈现树里面的值在将要显示给用户的时候才会被更新为新值。&lt;/p&gt;
&lt;h2 id=&quot;第三章：几何变换&quot;&gt;&lt;a href=&quot;#第三章：几何变换&quot; class=&quot;headerlink&quot; title=&quot;第三章：几何变换&quot;&gt;&lt;/a&gt;第三章：几何变换&lt;/h2&gt;&lt;p&gt;anchorPoint:锚点，他指定了bounds相对于position的值，同时也作为变换时候的支点。在Autolayout设置约束时，锚点的值也会影响视图显示的位置。&lt;/p&gt;
&lt;p&gt;几何变换：CATransform3D，可以使用变换函数进行变换，例如CATransform3DMakeTranslation，CATransform3DTranslate等，也可以通过键值路径修改变换。&lt;/p&gt;
&lt;h2 id=&quot;第四章：图层树结构&quot;&gt;&lt;a href=&quot;#第四章：图层树结构&quot; class=&quot;headerlink&quot; title=&quot;第四章：图层树结构&quot;&gt;&lt;/a&gt;第四章：图层树结构&lt;/h2&gt;&lt;p&gt;图层树与视图的结构很类似：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个图层定义了一个基于其父图层的坐标系的坐标系，当一个图层变换的时候，他的子图层同样变换&lt;/li&gt;
&lt;li&gt;一个动态的图层树，可以在程序运行的时候重新设置，图层可以添加，也可以删除&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ios中，每个UIView的实例会自动创建一个CALayer类的实体，视图为图层提供了底层的事件处理，图层为视图提供了显示的内容。&lt;/p&gt;
&lt;h2 id=&quot;第五章：图层的内容&quot;&gt;&lt;a href=&quot;#第五章：图层的内容&quot; class=&quot;headerlink&quot; title=&quot;第五章：图层的内容&quot;&gt;&lt;/a&gt;第五章：图层的内容&lt;/h2&gt;&lt;p&gt;使用CALayer无需创建继承子类，直接设置CALayer的contents属性即可，contents属性是一个CGImageRef类型，这样子创建比使用UIImageView效率要高&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myLayer = [[&lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myLayer.bounds = &lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myLayer.position = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myLayer.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor].CGColor;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *image = [&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; imageNamed:&lt;span class=&quot;string&quot;&gt;@&quot;1.JPG&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myLayer.contents = (__bridge &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable)(image.CGImage);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view.layer addSublayer:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myLayer];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以通过代理方法，提供CALayer的内容，有两个代理方法：&lt;code&gt;- (void)displayLayer:(CALayer *)theLayer&lt;/code&gt;与&lt;code&gt;- (void)drawLayer:(CALayer *)layer inContext:(CGContextRef)ctx&lt;/code&gt;, 要通知系统重绘图层，只需要调用CALayer的&lt;code&gt;setNeedsDisplay&lt;/code&gt;或者&lt;code&gt;setNeedsDisplayInRect:&lt;/code&gt;方法或者把图层的needsDisplayOnBoundsChange属性值设置为YES即可。&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)drawLayer:(&lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; *)layer inContext:(&lt;span class=&quot;built_in&quot;&gt;CGContextRef&lt;/span&gt;)ctx &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGMutablePathRef&lt;/span&gt; thePath = &lt;span class=&quot;built_in&quot;&gt;CGPathCreateMutable&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPathMoveToPoint&lt;/span&gt;(thePath,&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;15.0&lt;/span&gt;f,&lt;span class=&quot;number&quot;&gt;15.&lt;/span&gt;f);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPathAddCurveToPoint&lt;/span&gt;(thePath,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                          &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                          &lt;span class=&quot;number&quot;&gt;15.&lt;/span&gt;f,&lt;span class=&quot;number&quot;&gt;250.0&lt;/span&gt;f,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                          &lt;span class=&quot;number&quot;&gt;295.0&lt;/span&gt;f,&lt;span class=&quot;number&quot;&gt;250.0&lt;/span&gt;f,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                          &lt;span class=&quot;number&quot;&gt;295.0&lt;/span&gt;f,&lt;span class=&quot;number&quot;&gt;15.0&lt;/span&gt;f);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextBeginPath&lt;/span&gt;(ctx);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextAddPath&lt;/span&gt;(ctx, thePath );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSetLineWidth&lt;/span&gt;(ctx, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextStrokePath&lt;/span&gt;(ctx);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// release the path&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CFRelease&lt;/span&gt;(thePath);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)displayLayer:(&lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; *)layer &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *image = [&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; imageNamed:&lt;span class=&quot;string&quot;&gt;@&quot;1.JPG&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    layer.contents = (__bridge &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable)(image.CGImage);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;除了设置代理方法，也可以通过继承CALayer，重写&lt;code&gt;display&lt;/code&gt;方法或&lt;code&gt;- (void)drawInContext:(CGContextRef)theContext&lt;/code&gt;方法来自定义图层&lt;/p&gt;
&lt;p&gt;CALayer的contentsGravity属性相当于UIView的contentMode属性。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一章：核心动画概念&quot;&gt;&lt;a href=&quot;#第一章：核心动画概念&quot; class=&quot;headerlink&quot; title=&quot;第一章：核心动画概念&quot;&gt;&lt;/a&gt;第一章：核心动画概念&lt;/h2&gt;&lt;p&gt;CoreAnimation框架中类的分类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供显示
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
