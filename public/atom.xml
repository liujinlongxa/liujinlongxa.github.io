<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liujinlongxa的技术博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liujinlongxa.com/"/>
  <updated>2016-11-05T11:10:12.000Z</updated>
  <id>http://liujinlongxa.com/</id>
  
  <author>
    <name>liujinlongxa</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用nat123实现外网ssh连接内网树莓派设备</title>
    <link href="http://liujinlongxa.com/2016/11/05/%E4%BD%BF%E7%94%A8nat123%E5%AE%9E%E7%8E%B0%E5%A4%96%E7%BD%91ssh%E8%BF%9E%E6%8E%A5%E5%86%85%E7%BD%91%E6%A0%91%E8%8E%93%E6%B4%BE%E8%AE%BE%E5%A4%87/"/>
    <id>http://liujinlongxa.com/2016/11/05/使用nat123实现外网ssh连接内网树莓派设备/</id>
    <published>2016-11-05T09:56:46.000Z</published>
    <updated>2016-11-05T11:10:12.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-cn/%E6%A0%91%E8%8E%93%E6%B4%BE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;树莓派&lt;/a&gt;是一款基于Linux的单板机电脑。最近入手了一块，打算作为Linux服务器来使用。&lt;/p&gt;
&lt;p&gt;树莓派自带以太网接口和Wifi模块，可以通过网线或Wifi连接网络。但是由于我家里的网络是电信的光纤网络，用的是电信配的路由器，各个终端都是通过Wifi或网线连到这个路由上，因此各个终端相当于处于局域网，外网无法通过ip直接访问到内网的树莓派设备，这样如果我在树莓派上搭建一个服务器，外网就无法访问。&lt;/p&gt;
&lt;p&gt;一般这种问题，只需要在路由器上设置一下&lt;a href=&quot;http://www.hrtl.com.cn/News_398.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;端口映射&lt;/a&gt;就可通过外网访问内网主机了，但是电信配的这个路由器不支持设置端口映射（吐槽一下，电信自带的路由器简直弱爆了），所有就没办法通过设置路由器的方法解决。&lt;/p&gt;
&lt;p&gt;经过一番探索，找了一种可行的方案：&lt;a href=&quot;http://www.nat123.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nat123&lt;/a&gt;。nat123是一家专业提供端口映射和域名解析的网站，下面我就详细介绍一下如何使用nat123来实现外网访问内网树莓派设备。&lt;/p&gt;
&lt;h2 id=&quot;具体步骤&quot;&gt;&lt;a href=&quot;#具体步骤&quot; class=&quot;headerlink&quot; title=&quot;具体步骤&quot;&gt;&lt;/a&gt;具体步骤&lt;/h2&gt;&lt;h3 id=&quot;第一步-准备工作&quot;&gt;&lt;a href=&quot;#第一步-准备工作&quot; class=&quot;headerlink&quot; title=&quot;第一步 准备工作&quot;&gt;&lt;/a&gt;第一步 准备工作&lt;/h3&gt;&lt;p&gt;确保在内网环境下可以通过ssh访问树莓派，如何在树莓派上配置ssh，可以参考&lt;a href=&quot;http://www.itnose.net/detail/6109563.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;第二步-注册nat123&quot;&gt;&lt;a href=&quot;#第二步-注册nat123&quot; class=&quot;headerlink&quot; title=&quot;第二步 注册nat123&quot;&gt;&lt;/a&gt;第二步 注册nat123&lt;/h3&gt;&lt;p&gt;打开&lt;a href=&quot;http://www.nat123.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nat123&lt;/a&gt;官网，点击右上角的注册按钮完成注册&lt;/p&gt;
&lt;h3 id=&quot;第三步-在树莓派上安装nat123-Linux版&quot;&gt;&lt;a href=&quot;#第三步-在树莓派上安装nat123-Linux版&quot; class=&quot;headerlink&quot; title=&quot;第三步 在树莓派上安装nat123 Linux版&quot;&gt;&lt;/a&gt;第三步 在树莓派上安装nat123 Linux版&lt;/h3&gt;&lt;p&gt;打开树莓派，按照&lt;a href=&quot;http://www.nat123.com/pages_17_600.jsp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;的内容安装并启动相关软件。这里注意要根据你树莓派上的操作系统选择不同的安装方式，如果安装的官方操作系统Raspbian，应该选用Debian系统的安装方式。&lt;/p&gt;
&lt;h3 id=&quot;第四步-配置端口映射&quot;&gt;&lt;a href=&quot;#第四步-配置端口映射&quot; class=&quot;headerlink&quot; title=&quot;第四步 配置端口映射&quot;&gt;&lt;/a&gt;第四步 配置端口映射&lt;/h3&gt;&lt;p&gt;登录&lt;a href=&quot;http://www.nat123.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nat123&lt;/a&gt;，在左侧的用户中心点击“端口映射添加”，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/7855931f84f019009241b787d7c35f87.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;应用类型选择“其他（非网站）”，这里我要实现的是通过ssh访问树莓派，所有不是80端口，具体应该根据自己的需求选择应用类型，可以参考&lt;a href=&quot;http://www.nat123.com/Pages_8_570.jsp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/d784b452f4e1a71ef9555fd783b95386.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;下面解释一下每一项的含义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用名称：随便起，这里因为是用于ssh连接的，所以起名为ssh&lt;/li&gt;
&lt;li&gt;内网端口：内网应用的端口，ssh访问默认端口为22，如果是其他服务，这里的端口号应该填相应服务的端口号，例如，ftp服务默认端口号为21，http服务默认端口80等。&lt;/li&gt;
&lt;li&gt;内网地址：即树莓派在内网的ip地址，可以通过&lt;code&gt;ifconfig&lt;/code&gt;命令查看&lt;/li&gt;
&lt;li&gt;外网端口：自动生成，要记住这个端口号，待会链接是要用到&lt;/li&gt;
&lt;li&gt;外网域名：自动生成，这就是外网要访问的地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后点击“确认保存”，这里需要认证，认证需要收费（30￥），付款完成后，再次点击“确认保存”，就可以保存成功。可以在左侧的“端口映射列表”里查看和修改添加的端口映射。&lt;/p&gt;
&lt;p&gt;这样就完成了端口映射的添加。&lt;/p&gt;
&lt;h3 id=&quot;第五步-外网访问&quot;&gt;&lt;a href=&quot;#第五步-外网访问&quot; class=&quot;headerlink&quot; title=&quot;第五步 外网访问&quot;&gt;&lt;/a&gt;第五步 外网访问&lt;/h3&gt;&lt;p&gt;这时就已经可以通过外网访问了，在外网环境下打开终端，输入命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ssh pi@45067491.nat123.net -p 22996&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后输入密码，就可以通过ssh访问树莓派了。这里”pi”是你在树莓派里的用户名，-p参数是刚才的端口号。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h2&gt;&lt;p&gt;以上就是我使用nat123实现外网访问内网树莓派设备的这个过程。整个过程并不复杂，但是我在进行的过程中还是磕磕绊绊折腾了好久才完全整好，不过这个过程中还是学到了不少的东西。&lt;/p&gt;
&lt;p&gt;由于水平有限，如果上文中有不正确的地方，欢迎大家交流指正。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-cn/%E6%A0%91%E8%8E%93%E6%B4%BE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;树莓派&lt;/a&gt;是一款基于Linux的单板机电脑。最近入手了一块，打算作为L
    
    </summary>
    
      <category term="树莓派" scheme="http://liujinlongxa.com/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="http://liujinlongxa.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
      <category term="SSH" scheme="http://liujinlongxa.com/tags/SSH/"/>
    
      <category term="网络" scheme="http://liujinlongxa.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Swift3中的预处理宏</title>
    <link href="http://liujinlongxa.com/2016/10/28/Swift3%E4%B8%AD%E7%9A%84%E9%A2%84%E5%A4%84%E7%90%86%E5%AE%8F/"/>
    <id>http://liujinlongxa.com/2016/10/28/Swift3中的预处理宏/</id>
    <published>2016-10-28T09:18:57.000Z</published>
    <updated>2016-10-28T09:41:29.000Z</updated>
    
    <content type="html">&lt;p&gt;Swift中也可以使用预处理宏，只不过和ObjectiveC有点不一样，下面详细说明一下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Swift中取消了#define，建议使用全局常量替换宏定义&lt;/li&gt;
&lt;li&gt;Swift中仍然可以使用&lt;code&gt;#if, #elseif, #endif&lt;/code&gt;等宏，注意，Swift中是&lt;code&gt;#elseif&lt;/code&gt;，而在OC中是&lt;code&gt;#elif&lt;/code&gt;。还有&lt;code&gt;#if&lt;/code&gt;和&lt;code&gt;#elseif&lt;/code&gt;后面的判断条件必须是Bool类型的。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;aaaa&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#elseif &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;bbbb&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;cccc&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#endif&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Swift中取消了&lt;code&gt;__FUNCTION__, __FILE__, __LINE__&lt;/code&gt;，分别改为了&lt;code&gt;#function, #file, #line&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(#file)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(#line)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;function1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(#function)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Swift中也可以使用预处理宏，只不过和ObjectiveC有点不一样，下面详细说明一下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Swift中取消了#define，建议使用全局常量替换宏定义&lt;/li&gt;
&lt;li&gt;Swift中仍然可以使用&lt;code&gt;#if, #elseif, #endif
    
    </summary>
    
      <category term="Swift" scheme="http://liujinlongxa.com/categories/Swift/"/>
    
    
      <category term="Swift" scheme="http://liujinlongxa.com/tags/Swift/"/>
    
      <category term="预处理宏" scheme="http://liujinlongxa.com/tags/%E9%A2%84%E5%A4%84%E7%90%86%E5%AE%8F/"/>
    
  </entry>
  
  <entry>
    <title>给多个Target添加CocoaPods</title>
    <link href="http://liujinlongxa.com/2016/10/26/%E7%BB%99%E5%A4%9A%E4%B8%AATarget%E6%B7%BB%E5%8A%A0CocoaPods/"/>
    <id>http://liujinlongxa.com/2016/10/26/给多个Target添加CocoaPods/</id>
    <published>2016-10-26T14:25:04.000Z</published>
    <updated>2016-10-26T14:49:21.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;基本用法&quot;&gt;&lt;a href=&quot;#基本用法&quot; class=&quot;headerlink&quot; title=&quot;基本用法&quot;&gt;&lt;/a&gt;基本用法&lt;/h3&gt;&lt;p&gt;一般我们使用CocoaPods进行依赖管理时，如果项目里只有一个Target，则Podfile文件的格式应该是：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;target &lt;span class=&quot;string&quot;&gt;&#39;ZipApp&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# ZipApp为Target名称&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  pod &lt;span class=&quot;string&quot;&gt;&#39;SSZipArchive&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果项目中有多个Target，可以定义多个这样的block，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;target &lt;span class=&quot;string&quot;&gt;&#39;ZipApp&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# ZipApp为Target名称&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  pod &lt;span class=&quot;string&quot;&gt;&#39;SSZipArchive&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;target &lt;span class=&quot;string&quot;&gt;&#39;ZipAppTest&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# ZipAppTest为另一个Target名称&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  pod &lt;span class=&quot;string&quot;&gt;&#39;SSZipArchive&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果多个Target的依赖的库都是一样的，没有必要每一个Target都把所有库都写一遍，可以定义一个函数，写法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;common_pods&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pod &lt;span class=&quot;string&quot;&gt;&#39;SSZipArchive&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pod &lt;span class=&quot;string&quot;&gt;&#39;AFNetworking&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pod &lt;span class=&quot;string&quot;&gt;&#39;JSPatch&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;target &lt;span class=&quot;string&quot;&gt;&#39;ZipApp&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;# ZipApp即使Target名称&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  common_pods&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;target &lt;span class=&quot;string&quot;&gt;&#39;ZipAppTest&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    common_pods&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;其他的用法&quot;&gt;&lt;a href=&quot;#其他的用法&quot; class=&quot;headerlink&quot; title=&quot;其他的用法&quot;&gt;&lt;/a&gt;其他的用法&lt;/h3&gt;&lt;p&gt;如果多个Target有嵌套关系，即一个Target是另一个Target的父Target，则可以写成以下形式：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;target &lt;span class=&quot;string&quot;&gt;&#39;ZipApp&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  pod &lt;span class=&quot;string&quot;&gt;&#39;SSZipArchive&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  target &lt;span class=&quot;string&quot;&gt;&#39;ZipAppTests&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    inherit! &lt;span class=&quot;symbol&quot;&gt;:search_paths&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# 这句话表示子Target继承了父Target包含的pod，即ZipAppTests这个Target里包含了SSZipArchive和Nimble两个pod&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pod &lt;span class=&quot;string&quot;&gt;&#39;Nimble&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果一个Workspace里包含了多个Project，并且每一个Project都有不同的Target，则可以使用以下形式定义多个Project的Target：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;target &lt;span class=&quot;string&quot;&gt;&#39;Target1&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  project &lt;span class=&quot;string&quot;&gt;&#39;Project1&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  pod &lt;span class=&quot;string&quot;&gt;&#39;AFNetworking&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;target &lt;span class=&quot;string&quot;&gt;&#39;Target2&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  project &lt;span class=&quot;string&quot;&gt;&#39;Project2&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  pod &lt;span class=&quot;string&quot;&gt;&#39;JSPatch&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;基本用法&quot;&gt;&lt;a href=&quot;#基本用法&quot; class=&quot;headerlink&quot; title=&quot;基本用法&quot;&gt;&lt;/a&gt;基本用法&lt;/h3&gt;&lt;p&gt;一般我们使用CocoaPods进行依赖管理时，如果项目里只有一个Target，则Podfile文件的格式应该是：&lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://liujinlongxa.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Target" scheme="http://liujinlongxa.com/tags/Target/"/>
    
      <category term="CocoaPods" scheme="http://liujinlongxa.com/tags/CocoaPods/"/>
    
  </entry>
  
  <entry>
    <title>如何获取WebView的UserAgent</title>
    <link href="http://liujinlongxa.com/2016/10/25/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96WebView%E7%9A%84UserAgent/"/>
    <id>http://liujinlongxa.com/2016/10/25/如何获取WebView的UserAgent/</id>
    <published>2016-10-25T03:46:04.000Z</published>
    <updated>2016-10-25T03:53:30.000Z</updated>
    
    <content type="html">&lt;p&gt;项目中用到了WebView的UserAgent，可以通过以下方式获取到：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIWebView&lt;/span&gt;* webView = [[&lt;span class=&quot;built_in&quot;&gt;UIWebView&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt;* secretAgent = [webView stringByEvaluatingJavaScriptFromString:&lt;span class=&quot;string&quot;&gt;@&quot;navigator.userAgent&quot;&lt;/span&gt;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果是WKWebView，可以通过以下方式获取&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;WKWebView&lt;/span&gt; *webView = [[&lt;span class=&quot;built_in&quot;&gt;WKWebView&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[webView evaluateJavaScript:&lt;span class=&quot;string&quot;&gt;@&quot;navigator.userAgent&quot;&lt;/span&gt; completionHandler:^(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; _Nullable userAgent, &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; * _Nullable error) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;userAgent: %@&quot;&lt;/span&gt;, userAgent);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.webView = webView; &lt;span class=&quot;comment&quot;&gt;// 注意，一定要对webView进行强引用&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;获取到的值的为：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Mozilla/5.0 (iPhone; CPU iPhone OS 10_0_1 like Mac OS X) AppleWebKit/602.1.50 (KHTML, like Gecko) Mobile/14A403&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;项目中用到了WebView的UserAgent，可以通过以下方式获取到：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div
    
    </summary>
    
      <category term="iOS Tips" scheme="http://liujinlongxa.com/categories/iOS-Tips/"/>
    
    
      <category term="其他" scheme="http://liujinlongxa.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>iOS10无法获取IDFA的问题</title>
    <link href="http://liujinlongxa.com/2016/10/18/iOS10%E6%97%A0%E6%B3%95%E8%8E%B7%E5%8F%96IDFA%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://liujinlongxa.com/2016/10/18/iOS10无法获取IDFA的问题/</id>
    <published>2016-10-18T02:17:44.000Z</published>
    <updated>2016-10-18T02:30:22.000Z</updated>
    
    <content type="html">&lt;p&gt;iOS10上，如果用户开启了“限制广告跟踪”选项（设置-&amp;gt;隐私-&amp;gt;广告），则在使用&lt;code&gt;[[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString]&lt;/code&gt;方法获取IDFA时会返回全部是0，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/13bbfe746dacb7c156cac2aaac5b2c0d.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;有两种解决方案：&lt;/p&gt;
&lt;p&gt;第一种方法是通过&lt;code&gt;isAdvertisingTrackingEnabled&lt;/code&gt;属性判断是否可以返回正确的IDFA，如果返回为NO，则可以提示用户去设置中关闭限制广告跟踪。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *idfa = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([[ASIdentifierManager sharedManager] isAdvertisingTrackingEnabled]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    idfa = [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 弹窗提示用户关闭限制广告跟踪&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外一种更好的方法是使用第三方库获取IDFA，这里推荐两个第三方库：&lt;a href=&quot;https://github.com/ylechelle/OpenIDFA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenIDFA&lt;/a&gt;和&lt;a href=&quot;https://github.com/youmi/SimulateIDFA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SimulateIDFA&lt;/a&gt;，个人更推荐SimulateIDFA，因为他的重复率更低。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;iOS10上，如果用户开启了“限制广告跟踪”选项（设置-&amp;gt;隐私-&amp;gt;广告），则在使用&lt;code&gt;[[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString]&lt;/code&gt;方法获取I
    
    </summary>
    
      <category term="iOS Tips" scheme="http://liujinlongxa.com/categories/iOS-Tips/"/>
    
    
      <category term="IDFA" scheme="http://liujinlongxa.com/tags/IDFA/"/>
    
  </entry>
  
  <entry>
    <title>获取本地化的APP版本描述信息</title>
    <link href="http://liujinlongxa.com/2016/10/09/%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E5%8C%96%E7%9A%84APP%E7%89%88%E6%9C%AC%E6%8F%8F%E8%BF%B0%E4%BF%A1%E6%81%AF/"/>
    <id>http://liujinlongxa.com/2016/10/09/获取本地化的APP版本描述信息/</id>
    <published>2016-10-09T15:25:15.000Z</published>
    <updated>2016-10-09T15:47:57.000Z</updated>
    
    <content type="html">&lt;p&gt;在制作APP升级提示框时，需要APP的最新版本信息，苹果提供了”&lt;a href=&quot;http://itunes.apple.com/lookup?id=123123&amp;quot;接口用于查询AppStore上的APP的详细信息，参数id表示的是应用程序的AppId。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://itunes.apple.com/lookup?id=123123&amp;quot;接口用于查询AppStore上的APP的详细信息，参数id表示的是应用程序的AppId。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果在iTunesConnect上对应用的版本描述信息做了本地化，上述接口只会返回首选语言的描述信息，如果要返回特定语言的描述信息，还要加上两个参数:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;country: 国家参数，CN表示中国，US表示美国，国家代码可以在&lt;a href=&quot;https://zh.wikipedia.org/wiki/ISO_3166-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;找到&lt;/li&gt;
&lt;li&gt;lang: 语言参数，zh_cn表示中文，zh_tw表示繁体中文，en_us表示美国英国，语言编码可以参考&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%8C%BA%E5%9F%9F%E8%AE%BE%E7%BD%AE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;维基百科&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要获取中文的描述信息，应该调用&lt;a href=&quot;http://itunes.apple.com/lookup?id=123123&amp;amp;country=CN&amp;amp;lang=zh_cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://itunes.apple.com/lookup?id=123123&amp;amp;country=CN&amp;amp;lang=zh_cn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;要获取繁体中文的描述信息，应该调用&lt;a href=&quot;http://itunes.apple.com/lookup?id=123123&amp;amp;country=TW&amp;amp;lang=zh_tw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://itunes.apple.com/lookup?id=123123&amp;amp;country=TW&amp;amp;lang=zh_tw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;要获取英文的描述信息，应该调用&lt;a href=&quot;http://itunes.apple.com/lookup?id=123123&amp;amp;country=US&amp;amp;lang=en_us&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://itunes.apple.com/lookup?id=123123&amp;amp;country=US&amp;amp;lang=en_us&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%8C%BA%E5%9F%9F%E8%AE%BE%E7%BD%AE&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;语言区域&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/ISO_3166-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ISO_3166-1&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://affiliate.itunes.apple.com/resources/documentation/itunes-store-web-service-search-api/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iTunes Affiliate Resources&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.hoachuck.biz/blog/2012/07/01/playing-around-with-app-store-meta-data/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Playing Around With App Store Meta Data&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在制作APP升级提示框时，需要APP的最新版本信息，苹果提供了”&lt;a href=&quot;http://itunes.apple.com/lookup?id=123123&amp;quot;接口用于查询AppStore上的APP的详细信息，参数id表示的是应用程序的AppId。&quot; targ
    
    </summary>
    
      <category term="iOS Tips" scheme="http://liujinlongxa.com/categories/iOS-Tips/"/>
    
    
      <category term="本地化" scheme="http://liujinlongxa.com/tags/%E6%9C%AC%E5%9C%B0%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>iOS多环境配置实践</title>
    <link href="http://liujinlongxa.com/2016/10/07/iOS%E5%A4%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%AE%9E%E8%B7%B5/"/>
    <id>http://liujinlongxa.com/2016/10/07/iOS多环境配置实践/</id>
    <published>2016-10-07T02:04:43.000Z</published>
    <updated>2016-10-07T03:38:39.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在移动客户端开发过程中，服务器一般都会提供多个环境的API接口，例如测试环境(TEST_ENV)，发布环境(RELEASE_ENV)，预发布环境(PRERELEASE_ENV)等，我们客户端在打包的时候需要在不同的阶段打不同环境的包，最简单的做法就是在代码里直接修改URL来切换不同的环境。但是这种做法太Low了，而且也不易于使用脚本自动打包。本文的主要内容就是介绍一种不修改代码达到配置不同环境的方法。&lt;/p&gt;
&lt;h2 id=&quot;明确需求&quot;&gt;&lt;a href=&quot;#明确需求&quot; class=&quot;headerlink&quot; title=&quot;明确需求&quot;&gt;&lt;/a&gt;明确需求&lt;/h2&gt;&lt;p&gt;在开始主要内容之前，先明确一下需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;服务器有三个环境，测试环境(TEST_ENV)，发布环境(RELEASE_ENV)，预发布环境(PRERELEASE_ENV)，要求要很方便的实现在三个不同环境之间自由切换&lt;/li&gt;
&lt;li&gt;代码中大量使用了DEBUG宏，因此要求每个环境都应该区分DEBUG和RELEASE，即在任一环境下都可能需要打DEBUG包或RELEASE包&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为此，我编写了一份测试代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;#if TEST_ENV // 测试环境&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#if DEBUG&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NSLog(@&amp;quot;hello test env debug&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#else&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NSLog(@&amp;quot;hello test env release&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#endif&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#endif&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#if RELEASE_ENV // 发布环境&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#if DEBUG&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NSLog(@&amp;quot;hello release env debug&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#else&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NSLog(@&amp;quot;hello release env release&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#endif&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#endif&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#if PRERELEASE_ENV // 预发布环境&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#if DEBUG&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NSLog(@&amp;quot;hello pre-relase env debug&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#else&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NSLog(@&amp;quot;hello pre-relase env release&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#endif&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#endif&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;具体步骤&quot;&gt;&lt;a href=&quot;#具体步骤&quot; class=&quot;headerlink&quot; title=&quot;具体步骤&quot;&gt;&lt;/a&gt;具体步骤&lt;/h2&gt;&lt;h3 id=&quot;1-为每一个环境创建一个Target&quot;&gt;&lt;a href=&quot;#1-为每一个环境创建一个Target&quot; class=&quot;headerlink&quot; title=&quot;1. 为每一个环境创建一个Target&quot;&gt;&lt;/a&gt;1. 为每一个环境创建一个Target&lt;/h3&gt;&lt;p&gt;创建项目后，项目本身就会有一个Target（如果不了解Target的概念可以看一下&lt;a href=&quot;https://developer.apple.com/library/content/featuredarticles/XcodeConcepts/Concept-Targets.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇官方文档&lt;/a&gt;）,我们可以把这个Target就作为某一个环境的Target，这里我们把它作为发布环境的Target，然后还需要创建测试环境和预发布环境的Target，方法如下：&lt;/p&gt;
&lt;p&gt;在项目配置界面左侧，选中Target，点击右键，选择”Duplicate”，复制一个新的Target，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/ec6ceac9d953c320c0cbf0bfe55ee361.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后在弹出的菜单中点击”Duplicate Only”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/463b4e2b32269ab485d9f160315e1d75.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;这样就创建好了一个新的Target。新的Target的默认名称为”项目名称 copy”，即”Test1007 copy”，单击新创建的Target，修改Target名称为”Test1007_Test”，将这个Target作为测试环境的Target。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/4e99d383134b80176fedbe7853327b6f.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;p&gt;创建完Target后，XCode会自动为这个Target创建一个Scheme，为了方便起见，也将这个Scheme的名称修改为”Test1007_Test”，方法是在左上角点击”Manage Schemes…”，单机要修改名称的Scheme，即可修改Scheme的名称。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/32c4abd9100ed10efbebda4f876c5939.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;p&gt;同样的方法，在创建一个名为”Test1007_Prerelease”的Target作为预发布环境的Target。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/640b7eebdbb792330544b5211110f278.png&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-配置环境变量&quot;&gt;&lt;a href=&quot;#2-配置环境变量&quot; class=&quot;headerlink&quot; title=&quot;2. 配置环境变量&quot;&gt;&lt;/a&gt;2. 配置环境变量&lt;/h3&gt;&lt;p&gt;配置环境变量，就是添加TEST_ENV，RELEASE_ENV和PRERELEASE_ENV这三个宏，这一步在ObjectiveC下和Swift是不一样的，这里会分别讲解&lt;/p&gt;
&lt;h4 id=&quot;ObjectiveC下配置环境变量&quot;&gt;&lt;a href=&quot;#ObjectiveC下配置环境变量&quot; class=&quot;headerlink&quot; title=&quot;ObjectiveC下配置环境变量&quot;&gt;&lt;/a&gt;ObjectiveC下配置环境变量&lt;/h4&gt;&lt;p&gt;在项目配置界面选择发布环境的Target “Test1007”，点击Build Settings，找到Preprocessor Macros，在Debug和Release下都添加环境变量”RELEASE_ENV=1”，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/e685c55dc756723ecd8a2d513efca11e.png&quot; alt=&quot;6&quot;&gt;&lt;/p&gt;
&lt;p&gt;添加完成后结果如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/60989466ad3f7b1b1e272210c2fafe8d.png&quot; alt=&quot;7&quot;&gt;&lt;/p&gt;
&lt;p&gt;这样就为发布环境添加好了”RELEASE_ENV”宏。&lt;/p&gt;
&lt;p&gt;同样的方法，分别在Target “Test1007_Test”和”Test1007_Prerelease”添加TEST_ENV和PRERELEASE_ENV这两个宏。&lt;/p&gt;
&lt;h4 id=&quot;Swift下配置环境变量&quot;&gt;&lt;a href=&quot;#Swift下配置环境变量&quot; class=&quot;headerlink&quot; title=&quot;Swift下配置环境变量&quot;&gt;&lt;/a&gt;Swift下配置环境变量&lt;/h4&gt;&lt;p&gt;在项目配置界面选择发布环境的Target “Test1007”，点击Build Settings，找到Other Swift Flags，在Debug和Release下都添加环境变量”-D RELEASE_ENV”，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/d7ec2f7e6073166d15fc64d488b42fcb.png&quot; alt=&quot;8&quot;&gt;&lt;/p&gt;
&lt;p&gt;添加完成后如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/2697bee36a116092b03257cfca9bf774.png&quot; alt=&quot;9&quot;&gt;&lt;/p&gt;
&lt;p&gt;同样的方法，分别在Target “Test1007_Test”和”Test1007_Prerelease”下添加TEST_ENV和PRERELEASE_ENV这两个宏。&lt;/p&gt;
&lt;p&gt;这样就完成了环境变量的配置。&lt;/p&gt;
&lt;h3 id=&quot;3-为不同环境的包配置不同的名称，BundleId和图标&quot;&gt;&lt;a href=&quot;#3-为不同环境的包配置不同的名称，BundleId和图标&quot; class=&quot;headerlink&quot; title=&quot;3. 为不同环境的包配置不同的名称，BundleId和图标&quot;&gt;&lt;/a&gt;3. 为不同环境的包配置不同的名称，BundleId和图标&lt;/h3&gt;&lt;p&gt;其实到这一步就已经完成了不同环境的配置，要切换环境，只需要切换左上角的Scheme就可以了。为了更好的区分不同环境下的包，可以给每个环境配置不同的App名称，BundleId和App图标，方法如下：&lt;/p&gt;
&lt;p&gt;在项目配置界面选中一个Target，通过修改Display Name和Bundle Identifier可以为不同环境的包设置不同的App名称和BundleId。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/98681390ae672ce58b2a541c3068e4c6.png&quot; alt=&quot;10&quot;&gt;&lt;/p&gt;
&lt;p&gt;要设置不同的图标，需要在Build Settings里找到”Asset Calalog App Icon Set Name”，其默认值是AppIcon，可以为不同Target设置不同的Icon Set Name，然后在Assets.xcassets中添加对应的Image Set即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/a9fa6a0db2bccb6d5945fe5c3f4d8360.png&quot; alt=&quot;11&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;本文是通过多个Target来实现多环境配置的，其实除了本文介绍的方法，还有其他方法可以实现多环境配置，具体可以参考&lt;a href=&quot;http://www.jianshu.com/p/83b6e781eb51&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;有了多环境配置，就可以很方便的实现多环境自动打包，如果在加入持续集成系统（例如jenkins等），就可以非常优雅的打包。这个以后有时间会专门写一篇博客来介绍相关内容。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/83b6e781eb51&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;手把手教你给一个iOS app配置多个环境变量&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cocoachina.com/ios/20151023/13869.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS开发必备–环境变量配置(Debug &amp;amp; Release)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://kevindelord.io/2016/06/08/project-configuration/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Xcode Project Configuration&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在移动客户端开发过程中，服务器一般都会提供多个环境的API接口，例如测试环境(TEST_ENV)，发布环境(RELEASE_ENV)，预发布
    
    </summary>
    
      <category term="iOS开发" scheme="http://liujinlongxa.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Target" scheme="http://liujinlongxa.com/tags/Target/"/>
    
      <category term="Scheme" scheme="http://liujinlongxa.com/tags/Scheme/"/>
    
  </entry>
  
  <entry>
    <title>使用xUnique遇到了的问题</title>
    <link href="http://liujinlongxa.com/2016/10/04/%E4%BD%BF%E7%94%A8xUnique%E9%81%87%E5%88%B0%E4%BA%86%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://liujinlongxa.com/2016/10/04/使用xUnique遇到了的问题/</id>
    <published>2016-10-04T14:24:27.000Z</published>
    <updated>2016-10-04T14:46:58.000Z</updated>
    
    <content type="html">&lt;p&gt;xUnique是一个用来对iOS向的&lt;em&gt;.xcodeproj文件进行排序的工具，它可以降低&lt;/em&gt;.xcodeproj文件冲突的概率。其实质是一个Git Hook脚本，在提交一个Commit时，如果*.xcodeproj文件有修改，则会对文件进行重新排序。&lt;/p&gt;
&lt;p&gt;最近在使用时发现了一个问题，当我执行“pod install”安装第三方库时，在进行提交时会报”File ‘project.pbxproj’ is broken. Cannot find PBXProject name.”，从字面意思看’project.pbxproj’文件损坏，但是进入*.xcodeproj文件夹，双击‘project.pbxproj’，发现是可以打开的，并没有问题。&lt;/p&gt;
&lt;p&gt;最后通过查找资料，找到了原因，具体原因是由于在执行‘pod install’后，CocoaPods会重写‘project.pbxproj’文件，并且改变了它的格式，导致xUnique无法正确读取’project.pbxproj’文件。&lt;/p&gt;
&lt;p&gt;解决方法是：让xcode重新生成‘project.pbxproj’，具体步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先关闭xUnique，然后提交代码。关闭xUnique的方法是打开“&amp;lt;项目仓库根目录&amp;gt;/.git/hooks/pre-commit”文件，注释掉xUnique有关的内容&lt;/li&gt;
&lt;li&gt;做出任意一个可以导致’project.pbxproj’修改的修改，例如修改版本号，创建文件等，这样xcode会重写’project.pbxproj’文件&lt;/li&gt;
&lt;li&gt;打开xUnique，提交代码，这时xUnique就可以识别’project.pbxproj’文件了&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参看文档：&lt;br&gt;&lt;a href=&quot;https://github.com/truebit/xUnique/issues/34&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;File ‘project.pbxproj’ is broken. Cannot find PBXProject name.&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;xUnique是一个用来对iOS向的&lt;em&gt;.xcodeproj文件进行排序的工具，它可以降低&lt;/em&gt;.xcodeproj文件冲突的概率。其实质是一个Git Hook脚本，在提交一个Commit时，如果*.xcodeproj文件有修改，则会对文件进行重新排序。&lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="iOS Tips" scheme="http://liujinlongxa.com/categories/iOS-Tips/"/>
    
    
      <category term="其他" scheme="http://liujinlongxa.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>使用代码删除约束要注意的地方</title>
    <link href="http://liujinlongxa.com/2016/09/12/%E4%BD%BF%E7%94%A8%E4%BB%A3%E7%A0%81%E5%88%A0%E9%99%A4%E7%BA%A6%E6%9D%9F%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9/"/>
    <id>http://liujinlongxa.com/2016/09/12/使用代码删除约束要注意的地方/</id>
    <published>2016-09-12T15:17:44.000Z</published>
    <updated>2016-09-12T15:57:44.000Z</updated>
    
    <content type="html">&lt;p&gt;使用代码删除特定约束的正确姿势：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (IOS8_OR_LATER) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// iOS8之后删除约束的方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.authorLabelRightConstraint.active = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// iOS8之前删除约束的方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; removeConstraint:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.authorLabelRightConstraint];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意删除约束的方法在iOS8之前和之后是不一样的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用代码删除特定约束的正确姿势：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2
    
    </summary>
    
      <category term="iOS Tips" scheme="http://liujinlongxa.com/categories/iOS-Tips/"/>
    
    
      <category term="Autolayout" scheme="http://liujinlongxa.com/tags/Autolayout/"/>
    
  </entry>
  
  <entry>
    <title>做模糊效果时遇到的问题</title>
    <link href="http://liujinlongxa.com/2016/08/30/%E5%81%9A%E6%A8%A1%E7%B3%8A%E6%95%88%E6%9E%9C%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://liujinlongxa.com/2016/08/30/做模糊效果时遇到的问题/</id>
    <published>2016-08-30T14:51:53.000Z</published>
    <updated>2016-08-30T15:14:07.000Z</updated>
    
    <content type="html">&lt;p&gt;最近在做图片模糊效果时遇到了一个很奇怪的问题，在iPhone6/iPhone6s上显示的模糊效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/4661eedc0a33e9c4535d95a005bde5d2.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;但是在iPhone6 plus和iPhone6s plus上的模糊效果就如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/e31355553287234ae1b78b6ea88389ac.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;这明显效果不对，好像没有模糊一样。于是Google一些资料，终于找到了解决方法，解决方法是，在6Plus上不能设置过大的模糊半径，如果模糊半径过大，就会出现上图的效果。这和我使用的”UIImage+ImageEffects.h”也有关。&lt;/p&gt;
&lt;p&gt;原先设置的模糊半径为52，现在改成了在6Plus和6sPlus上是45，在6和6s上还是52，这样就没问题了。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/26002970/applyblurwithradius-working-on-iphone-6-not-6-uiimageimageeffects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;applyBlurWithRadius working on iPhone 6, not 6+ (UIImage+ImageEffects)&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在做图片模糊效果时遇到了一个很奇怪的问题，在iPhone6/iPhone6s上显示的模糊效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/4661eedc0a33e9c4535d95a005bde5
    
    </summary>
    
      <category term="iOS Tips" scheme="http://liujinlongxa.com/categories/iOS-Tips/"/>
    
    
      <category term="其他" scheme="http://liujinlongxa.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>使用Safair调试JS</title>
    <link href="http://liujinlongxa.com/2016/08/30/%E4%BD%BF%E7%94%A8Safair%E8%B0%83%E8%AF%95JS/"/>
    <id>http://liujinlongxa.com/2016/08/30/使用Safair调试JS/</id>
    <published>2016-08-30T13:46:33.000Z</published>
    <updated>2016-08-30T14:49:04.000Z</updated>
    
    <content type="html">&lt;p&gt;iOS项目中经常会用到Native界面和H5界面互相调用的情况，方法就是使用JavaScriptCore框架直接在原生界面中调用JS代码。如果JS代码较长，调试起来就会比较麻烦，这里介绍一种方法，可以让你轻松调试JS。&lt;/p&gt;
&lt;p&gt;首先，打开Safari，打开偏好设置（快捷键Cmd+,），在Advanced中选中”Show Develop menu in menu bar”，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/500ac2228a67a84dd4c20e73f104a560.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;这样菜单栏就会出现一个Develop菜单，点击菜单Develop-&amp;gt;Simulator-&amp;gt;Automatically Show Web Inspector For JSContexts&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/211795a2560cf0bc3973a5d778d96343.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后使用模拟器运行项目，当运行到JS代码时，就会自动启动调试器，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/19c6bf7d6bce0e9b54f289ccc9025ecc.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;p&gt;和XCode一样，你可以打断点，当JS运行到这一句时就会进入断点&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/f6b607a7a949df00b9f2e20f11e7b29a.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;p&gt;当进入断点后，还可以打印出相应的局部变量&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/993f4e504f25bc37a79cc1f6ffd1a9ca.png&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;p&gt;以上就是使用Safari调试JS的方法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;iOS项目中经常会用到Native界面和H5界面互相调用的情况，方法就是使用JavaScriptCore框架直接在原生界面中调用JS代码。如果JS代码较长，调试起来就会比较麻烦，这里介绍一种方法，可以让你轻松调试JS。&lt;/p&gt;
&lt;p&gt;首先，打开Safari，打开偏好设置（快
    
    </summary>
    
      <category term="iOS Tips" scheme="http://liujinlongxa.com/categories/iOS-Tips/"/>
    
    
      <category term="其他" scheme="http://liujinlongxa.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>Mac下生成RSA密钥对要注意的问题</title>
    <link href="http://liujinlongxa.com/2016/08/25/Mac%E4%B8%8B%E7%94%9F%E6%88%90RSA%E5%AF%86%E9%92%A5%E5%AF%B9%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://liujinlongxa.com/2016/08/25/Mac下生成RSA密钥对要注意的问题/</id>
    <published>2016-08-25T15:50:06.000Z</published>
    <updated>2016-08-25T16:24:15.000Z</updated>
    
    <content type="html">&lt;p&gt;生成RSA密钥一般使用的Openssl，方法如下：&lt;/p&gt;
&lt;p&gt;在终端输入命令openssl然后敲回车，进入openssl命令输入模式，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/d0eff7b11f3bb040e28e46de5393d9d2.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后输入一下三行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;genrsa -out rsa_private_key.pem 1024&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pkcs8 -topk8 -in rsa_private_key.pem -out pkcs8_rsa_private_key.pem -nocrypt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;rsa -in rsa_private_key.pem -pubout -out rsa_public_key.pem&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后输入exit退出openssl命令输入模式，这样会在当前目录生成三个文件，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/980dc450a7d1f4db0759d42ac882f54a.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rsa_private_key.pem为私钥&lt;/li&gt;
&lt;li&gt;rsa_public_key.pem为公钥&lt;/li&gt;
&lt;li&gt;pkcs8_rsa_private_key.pem为PKCS#8编码的私钥&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;公钥没有问题，主要是私钥，私钥有两个，两个有什么区别，到底该用哪一个呢？&lt;/p&gt;
&lt;p&gt;主要区别在于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rsa_private_key.pem为PKCS#1编码，只包含RSA的密钥信息，是以”—–BEGIN RSA PRIVATE KEY—–”开头，以”—–END RSA PRIVATE KEY—–”结尾，如下图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/9927f538bea6e031960a0a908076ccdd.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pkcs8_rsa_private_key.pem为PKCS#8编码，除了包含RSA密钥信息外，还包含一些附加信息，例如version和算法等，是以”—–BEGIN PRIVATE KEY—–”开头，以”—–END PRIVATE KEY—–”结尾的，如下图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/b98831c564629c062c9bfcb5f7868625.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;p&gt;Mac默认生成的是PKCS#1编码的私钥，而有的系统生成私钥是PKCS#8编码，具体用哪个这要看你的加密代码里是否对附加信息进行了校验判断，如果进行了校验，则应该使用PKCS#8编码的私钥，否则应该使用PKCS#1编码的私钥。&lt;/p&gt;
&lt;p&gt;我使用的是&lt;a href=&quot;https://github.com/ideawu/Objective-C-RSA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个第三方库&lt;/a&gt;进行加密解密的，里面对附加信息进行了校验，所以应该使用PKCS#8编码的密钥。&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ideawu/Objective-C-RSA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Objective-C-RSA&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/ideawu/Objective-C-RSA/issues/15&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Objective-C-RSA Issuse #15&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.tuicool.com/articles/Rbu6zm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;openssl生成RSA格式，并转为pkcs8格式&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;生成RSA密钥一般使用的Openssl，方法如下：&lt;/p&gt;
&lt;p&gt;在终端输入命令openssl然后敲回车，进入openssl命令输入模式，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/d0eff7b11
    
    </summary>
    
      <category term="其他" scheme="http://liujinlongxa.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="加密解密" scheme="http://liujinlongxa.com/tags/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>使用ownCloud作为OmniFocus的云同步服务器</title>
    <link href="http://liujinlongxa.com/2016/08/24/%E4%BD%BF%E7%94%A8ownCloud%E4%BD%9C%E4%B8%BAOmniFocus%E7%9A%84%E4%BA%91%E5%90%8C%E6%AD%A5%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://liujinlongxa.com/2016/08/24/使用ownCloud作为OmniFocus的云同步服务器/</id>
    <published>2016-08-24T14:47:22.000Z</published>
    <updated>2016-08-24T16:34:04.000Z</updated>
    
    <content type="html">&lt;p&gt;平时一直使用OmniFocus作为自己的时间管理工具，但是由于我使用的是破解版的（正版太贵，买不起啊），同步就变成了一件很麻烦的事。OmniFocus提供了两种同步方式，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/901f5c4cb502f3fc557e3c3cfa79ad2f.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;一种是使用Omni官方的服务器同步，这种方式需要注册Omni官方账号，应该只有正版能用吧，我没有尝试；另一种方式是使用WebDAV进行同步，这里着重介绍第二种方式。&lt;/p&gt;
&lt;p&gt;本文主要分为以下几个部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;WebDAV简介&lt;/li&gt;
&lt;li&gt;ownCloud简介以及搭建方法&lt;/li&gt;
&lt;li&gt;使用ownCloud作为OmniFocus的同步服务器&lt;/li&gt;
&lt;li&gt;ownCloud的一些其他应用&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;WebDAV简介&quot;&gt;&lt;a href=&quot;#WebDAV简介&quot; class=&quot;headerlink&quot; title=&quot;WebDAV简介&quot;&gt;&lt;/a&gt;WebDAV简介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://baike.baidu.com/link?url=pXeqnwgtPiYSKdYGX9YjBH_XeAJsH-aRkQqEYPsbkQwf9hlbnF9RSuAHvCMLboSuENx55T8J9Pd27E6ybo7Aba&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WebDAV&lt;/a&gt;是一种基于 HTTP 1.1协议的通讯协议，可以实现文件的同步。通俗来讲，我们可以利用WebDAV来实现类似百度云一样的网盘功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_4834fe810101fw17.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;有几个支持WebDAV协议的网盘，但是都是国外的，国内据我了解目前只有&lt;a href=&quot;http://www.jianguoyun.com/s/campaign/cpclanding/main?sch=bdcpc_nutstore_off&amp;amp;bdtj=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;坚果云&lt;/a&gt;一家支持WebDAV。至于国内的各大网盘为什么都不支持WebDAV，可以看&lt;a href=&quot;http://www.zhihu.com/question/21511143&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;最初我也本来打算使用国外的网盘来实现WebDAV，但是担心速度不理想，而且国外网盘的免费空间都很小，所以就放弃了。至于坚果云，我也没有去尝试。&lt;/p&gt;
&lt;p&gt;进一步Google，于是就找到了ownCloud。&lt;/p&gt;
&lt;h2 id=&quot;ownCloud简介以及搭建方法&quot;&gt;&lt;a href=&quot;#ownCloud简介以及搭建方法&quot; class=&quot;headerlink&quot; title=&quot;ownCloud简介以及搭建方法&quot;&gt;&lt;/a&gt;ownCloud简介以及搭建方法&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://owncloud.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ownCloud&lt;/a&gt;是一个来自KDE社区开发的免费软件，提供私人的Web服务。当前主要功能包括文件管理（内建文件分享）、音乐、日历、联系人等等，可在PC和服务器上运行。简单来说就是一个基于Php的自建网盘。&lt;/p&gt;
&lt;p&gt;下面就跟着我使用ownCloud一步一步搭建自己的私人网盘。&lt;/p&gt;
&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h3&gt;&lt;p&gt;因为要把ownCloud搭建在服务器上，因此你需要有一个VPS，内存至少128M，越大越好，我这里使用的是&lt;a href=&quot;https://bandwagonhost.com/clientarea.php?action=products&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;搬运工VPS&lt;/a&gt;，如何购买VPS可以看我的&lt;a href=&quot;http://liujinlongxa.com/2016/06/11/%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BF%BB%E5%A2%99VPS:%E6%90%AC%E8%BF%90%E5%B7%A5VPS%E8%B4%AD%E4%B9%B0%E4%BD%BF%E7%94%A8%E6%B5%81%E7%A8%8B%E5%85%A8%E8%AE%B0%E5%BD%95/&quot;&gt;这篇博客&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;1-安装PHP和MySQL环境&quot;&gt;&lt;a href=&quot;#1-安装PHP和MySQL环境&quot; class=&quot;headerlink&quot; title=&quot;1. 安装PHP和MySQL环境&quot;&gt;&lt;/a&gt;1. 安装PHP和MySQL环境&lt;/h3&gt;&lt;p&gt;由于ownCloud使用php实现的，所以需要在你服务器上安装PHP和MySQL环境，这个网上有很多教程，也可以参考ownCloud给出的&lt;a href=&quot;https://doc.owncloud.org/server/9.1/admin_manual/installation/php_54_installation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方教程&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;2-下载服务器源码&quot;&gt;&lt;a href=&quot;#2-下载服务器源码&quot; class=&quot;headerlink&quot; title=&quot;2. 下载服务器源码&quot;&gt;&lt;/a&gt;2. 下载服务器源码&lt;/h3&gt;&lt;p&gt;在任一文件夹下输入命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;wget https://download.owncloud.org/community/owncloud-9.1.0.tar.bz2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tar xvf owncloud-9.1.0.tar.bz2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后改变owncloud这个文件的权限，命令如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;chmod 777 owncloud&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-添加管理员账号&quot;&gt;&lt;a href=&quot;#3-添加管理员账号&quot; class=&quot;headerlink&quot; title=&quot;3. 添加管理员账号&quot;&gt;&lt;/a&gt;3. 添加管理员账号&lt;/h3&gt;&lt;p&gt;使用浏览器访问地址&lt;a href=&quot;http://serveraddress/owncloud/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://serveraddress/owncloud/&lt;/a&gt; (serveraddress即你服务器的ip地址)就可以看到如下页面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/5de5eb45600b86bae8e2c0cfdaadb319.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;在这里自定义一个管理员的账号和密码，然后点击FinishSetup，这样一个ownCloud就搭建完成了。&lt;/p&gt;
&lt;h2 id=&quot;使用ownCloud作为OmniFocus的同步服务器&quot;&gt;&lt;a href=&quot;#使用ownCloud作为OmniFocus的同步服务器&quot; class=&quot;headerlink&quot; title=&quot;使用ownCloud作为OmniFocus的同步服务器&quot;&gt;&lt;/a&gt;使用ownCloud作为OmniFocus的同步服务器&lt;/h2&gt;&lt;p&gt;ownCloud搭建完成后，就可以把它作为Omni的同步服务器了，具体方法如下：&lt;/p&gt;
&lt;p&gt;打开OmniFocus的同步设置页面，选择WebDAV方式同步，然后在Address中填入如下地址：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;http://&lt;serveraddress&gt;/owncloud/remote.php/dav/files/&lt;adminname&gt;&lt;/adminname&gt;&lt;/serveraddress&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;serveraddress&gt;和&lt;adminname&gt;分别替换为你的服务器地址和刚才填的管理员用户名，如下图：&lt;/adminname&gt;&lt;/serveraddress&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/264b1ec833e6078643e9c2f40b2bf7aa.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后点击“Sync Now”进行同步，会提示输入密码，输入刚才添加的管理员密码，然后就可以同步成功了。&lt;/p&gt;
&lt;p&gt;使用浏览器访问&lt;a href=&quot;http://serveraddress/owncloud/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://serveraddress/owncloud/&lt;/a&gt; ，就可以看到刚刚同步上去的文件了，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/0da7c4ef259b48e8f608540c27091cbd.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;ownCloud的一些其他应用&quot;&gt;&lt;a href=&quot;#ownCloud的一些其他应用&quot; class=&quot;headerlink&quot; title=&quot;ownCloud的一些其他应用&quot;&gt;&lt;/a&gt;ownCloud的一些其他应用&lt;/h2&gt;&lt;p&gt;ownCloud还提供了多平台的客户端，包括iOS，Android，Mac，Windows等，你可以下载一个Mac客户端，然后设置一个同步文件夹，凡是放在这个文件夹里的文件，都会被自动同步到服务器上。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/d7b6c828536bab1e8fa5a69a12332ebf.png&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;p&gt;我把Quiver的笔记数据也同步到了服务器上。&lt;/p&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h2&gt;&lt;p&gt;其实ownCloud的功能还远不止这些，还有很多功能还待以后慢慢探索。&lt;/p&gt;
&lt;p&gt;类似ownCloud的还有一个叫&lt;a href=&quot;https://www.seafile.com/home/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;seafile&lt;/a&gt;的服务，两者的区别和优劣可以参考&lt;a href=&quot;http://www.zhihu.com/question/23929945&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://doc.owncloud.org/server/9.1/admin_manual/contents.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ownCloud官方文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://doc.owncloud.org/server/9.1/user_manual/files/access_webdav.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ownCloud关于WebDAV使用的文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://jjliu.blog.ustc.edu.cn/198/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用OwnCloud创建私有云&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;平时一直使用OmniFocus作为自己的时间管理工具，但是由于我使用的是破解版的（正版太贵，买不起啊），同步就变成了一件很麻烦的事。OmniFocus提供了两种同步方式，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clou
    
    </summary>
    
      <category term="其他" scheme="http://liujinlongxa.com/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="其他" scheme="http://liujinlongxa.com/tags/%E5%85%B6%E4%BB%96/"/>
    
      <category term="WebDAV" scheme="http://liujinlongxa.com/tags/WebDAV/"/>
    
      <category term="ownCloud" scheme="http://liujinlongxa.com/tags/ownCloud/"/>
    
  </entry>
  
  <entry>
    <title>在VPS上搭建Git服务器</title>
    <link href="http://liujinlongxa.com/2016/08/07/%E5%9C%A8VPS%E4%B8%8A%E6%90%AD%E5%BB%BAGit%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://liujinlongxa.com/2016/08/07/在VPS上搭建Git服务器/</id>
    <published>2016-08-07T07:27:52.000Z</published>
    <updated>2016-08-12T15:20:04.000Z</updated>
    
    <content type="html">&lt;p&gt;昨天尝试了在自己的VPS上搭建一个git服务器，中间踩了很多坑，下面是我整个搭建的过程。&lt;/p&gt;
&lt;h2 id=&quot;具体流程&quot;&gt;&lt;a href=&quot;#具体流程&quot; class=&quot;headerlink&quot; title=&quot;具体流程&quot;&gt;&lt;/a&gt;具体流程&lt;/h2&gt;&lt;h3 id=&quot;第一步：安装Git&quot;&gt;&lt;a href=&quot;#第一步：安装Git&quot; class=&quot;headerlink&quot; title=&quot;第一步：安装Git&quot;&gt;&lt;/a&gt;第一步：安装Git&lt;/h3&gt;&lt;p&gt;打开VPS(这里我用的是&lt;a href=&quot;https://bandwagonhost.com/index.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;搬运工&lt;/a&gt;，怎么购买VPS可以参考我的&lt;a href=&quot;http://liujinlongxa.com/2016/06/11/%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BF%BB%E5%A2%99VPS:%E6%90%AC%E8%BF%90%E5%B7%A5VPS%E8%B4%AD%E4%B9%B0%E4%BD%BF%E7%94%A8%E6%B5%81%E7%A8%8B%E5%85%A8%E8%AE%B0%E5%BD%95/&quot;&gt;这篇博客&lt;/a&gt;)的控制后台，进入Shell，然后输入命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install -y git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行完后如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/b9dd798ab599b9b53adebee98ebe5bbd.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;查看Git版本，如果能显示Git版本，则说明安装成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/d7cdff1b7006e2c9b5f1e521319d903c.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;第二步：添加用户&quot;&gt;&lt;a href=&quot;#第二步：添加用户&quot; class=&quot;headerlink&quot; title=&quot;第二步：添加用户&quot;&gt;&lt;/a&gt;第二步：添加用户&lt;/h3&gt;&lt;p&gt;输入命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;adduser git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;su git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加一个名为git的用户，并且将当前用户切换到git&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/c5350088190cd59d220b4942b9d87eae.png&quot; alt=&quot;4&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;第三步：创建仓库&quot;&gt;&lt;a href=&quot;#第三步：创建仓库&quot; class=&quot;headerlink&quot; title=&quot;第三步：创建仓库&quot;&gt;&lt;/a&gt;第三步：创建仓库&lt;/h3&gt;&lt;p&gt;创建一个文件夹用来存放git仓库，然后输入命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git init --bare mycode.git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就可以创建一个裸仓库，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/c58f27e2d859d984c844371a43a37ab8.png&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;p&gt;把服务器的git仓库的用户组改为git&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/26a614c08121e4b0f8783551208e2d19.png&quot; alt=&quot;6&quot;&gt;&lt;/p&gt;
&lt;p&gt;这样仓库就创建完了&lt;/p&gt;
&lt;h3 id=&quot;第四步：创建证书&quot;&gt;&lt;a href=&quot;#第四步：创建证书&quot; class=&quot;headerlink&quot; title=&quot;第四步：创建证书&quot;&gt;&lt;/a&gt;第四步：创建证书&lt;/h3&gt;&lt;p&gt;在服务器/homg/git目录下创建文件夹.ssh，然后在.ssh文件夹里创建authorized_keys&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 注意：一定要切换到git用户下再创建，否则使用root用户创建，会因为文件夹权限的问题而造成RSA校验失败，我就是在这里卡了半天 &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后在客户端创建公钥，即~/.ssh/id_rsa.pub文件里的内容，然后把公钥填入服务器的authorized_keys文件中&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/9eca6530c312dc064c8901735ef9942e.png&quot; alt=&quot;7&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/7c38fa2c806440f162b83208038a8dc9.png&quot; alt=&quot;8&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;第五步：打开服务器RSA验证&quot;&gt;&lt;a href=&quot;#第五步：打开服务器RSA验证&quot; class=&quot;headerlink&quot; title=&quot;第五步：打开服务器RSA验证&quot;&gt;&lt;/a&gt;第五步：打开服务器RSA验证&lt;/h3&gt;&lt;p&gt;进入服务器/etc/ssh目录，使用vim打开sshd_config（建议先做一个备份），修改如下内容&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;RSAAuthentication yes     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PubkeyAuthentication yes     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;AuthorizedKeysFile  .ssh/authorized_keys&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大部分Linux系统的RSA认证默认就是开启的，如果已经开启，则可以忽略(在这里也卡了好久😭)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/9d534724207d6319fcf654142e91ba24.png&quot; alt=&quot;9&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后保存退出，重新启动sshd&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/74d02be9217b7ea806af5970560ac956.png&quot; alt=&quot;10&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;第六步：修改指定服务器的ssh端口&quot;&gt;&lt;a href=&quot;#第六步：修改指定服务器的ssh端口&quot; class=&quot;headerlink&quot; title=&quot;第六步：修改指定服务器的ssh端口&quot;&gt;&lt;/a&gt;第六步：修改指定服务器的ssh端口&lt;/h3&gt;&lt;p&gt;一般ssh访问默认的端口是22，但是搬运工VPS修改了ssh访问的端口，而Git访问还是用还是22端口，因此要修改Git使用ssh访问的端口(在这里也卡了好久😭)，要查看ssh端口可以在服务器的sshd_config文件中查看，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/b2f7743ffae9917e88f0ace60e11637b.png&quot; alt=&quot;11&quot;&gt;&lt;/p&gt;
&lt;p&gt; 如果不想修改服务器端口配置，可以修改客户端访问端口。在客户端的/~/.ssh/config文件中添加如下两行，第一行是服务器的地址，第二行是服务器的端口&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/17e45daf40d28f1174387104a3daef40.png&quot; alt=&quot;12&quot;&gt;&lt;/p&gt;
&lt;p&gt;这样就修改了访问指定服务器时的ssh端口。&lt;/p&gt;
&lt;h3 id=&quot;第七步：创建本地仓库&quot;&gt;&lt;a href=&quot;#第七步：创建本地仓库&quot; class=&quot;headerlink&quot; title=&quot;第七步：创建本地仓库&quot;&gt;&lt;/a&gt;第七步：创建本地仓库&lt;/h3&gt;&lt;p&gt;经过以上六步，一个Git服务器就建立好了，现在你就可以把仓库clone下来，然后开始使用了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/285c535aa2610ae916b1f964617a8d68.png&quot; alt=&quot;13&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;遇到的坑&quot;&gt;&lt;a href=&quot;#遇到的坑&quot; class=&quot;headerlink&quot; title=&quot;遇到的坑&quot;&gt;&lt;/a&gt;遇到的坑&lt;/h2&gt;&lt;p&gt;在整个搭建过程中，我也踩了很多坑，下面对这些坑做一个总结。&lt;/p&gt;
&lt;h3 id=&quot;服务器与客户端ssh端口不一致&quot;&gt;&lt;a href=&quot;#服务器与客户端ssh端口不一致&quot; class=&quot;headerlink&quot; title=&quot;服务器与客户端ssh端口不一致&quot;&gt;&lt;/a&gt;服务器与客户端ssh端口不一致&lt;/h3&gt;&lt;p&gt;在完成创建证书之后，按理说，应该已经可以clone仓库了，但是我尝试克隆会报如下错误：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/e5bc21bbdb55bcdf473e6addf69cf495.png&quot; alt=&quot;14&quot;&gt;&lt;/p&gt;
&lt;p&gt;网上找了很多方法，最后发现是因为客户端和服务器的ssh端口不一致导致，修改了客户端的ssh访问端口才解决了这个问题。&lt;/p&gt;
&lt;p&gt;相关参考：&lt;a href=&quot;http://zengrong.net/post/1544.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;修改了SSH默认端口之后，如何配置git？&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;ssh验证失败&quot;&gt;&lt;a href=&quot;#ssh验证失败&quot; class=&quot;headerlink&quot; title=&quot;ssh验证失败&quot;&gt;&lt;/a&gt;ssh验证失败&lt;/h3&gt;&lt;p&gt;修改了ssh端口后，可以访问仓库了，但是每次访问都要输入密码，按理说我已经创建了证书，并且也把公钥放到了服务器，为什么还是不行呢？&lt;/p&gt;
&lt;p&gt;找了半天，发现服务器的RSA身份校验压根就没有开启，ssh在校验时是先使用RSA进行校验，如果校验失败再使用密码进行校验。修改sshd_config文件，打开身份校验，参照上面的第五步。&lt;/p&gt;
&lt;p&gt;打开身份校验之后，发现还是要输入密码。最初我的做法是关闭服务器的ssh密码校验，修改服务器/etc/ssh/sshd_config文件如下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;PasswordAuthentication no&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/fadd0406c6a9e9c02402e170082c82c7.png&quot; alt=&quot;15&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后重启sshd。&lt;/p&gt;
&lt;p&gt;这样修改了之后，由于禁止了密码验证的方式，而RSA验证又失败，所以压根验证失败，访问都访问不了了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/2b0a4555687ea4fe8326f690ee35533e.png&quot; alt=&quot;16&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后我尝试看Log，输入命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ssh git@xxx.xxx.xxx.xxx -vvv&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从Log上看，客户端已经把key传给了服务器，但是服务器在验证时失败了，所以八成可能是服务器的问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/8ec00cb79352b30a2f95a1b48410cdfe.png&quot; alt=&quot;20&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后我又根据&lt;a href=&quot;http://www.androiddev.net/ssh-public-key-authentication-error/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇博客&lt;/a&gt;修改了目录的权限，但是还是不行。&lt;/p&gt;
&lt;p&gt;根据&lt;a href=&quot;http://flysnowxf.iteye.com/blog/1567570&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇博客&lt;/a&gt;关闭了SELinux也还是不行。&lt;/p&gt;
&lt;p&gt;然后我又根据&lt;a href=&quot;http://blog.csdn.net/lansesl2008/article/details/16113193&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇博客&lt;/a&gt;打开了ssh的log，修改sshd_config如下内容：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/3dc7b3340f6b693b047ecbee93400564.png&quot; alt=&quot;17&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后又重新登录和退出几次ssh，在/var/log/secure里看到了如下内容：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/4f320784c4d9d731d53b3792856ec4dd.png&quot; alt=&quot;18&quot;&gt;&lt;/p&gt;
&lt;p&gt;并没有什么有用的信息，不知道是不是我的Log配置的有问题。&lt;/p&gt;
&lt;p&gt;找了很多资料，有很多文章都提到了文件夹权限的问题，于是我又回到服务器git目录下看了一下文件夹的权限：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/c9be98241282c46c0111cb25e1be9aa4.png&quot; alt=&quot;19&quot;&gt;&lt;/p&gt;
&lt;p&gt;原来我在创建.ssh目录是用的是root账户，所有造成ssh在进行身份认证时没有权限方位.ssh目录，导致认证失败。输入命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;chown git .ssh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将.ssh文件夹的所属用户改为git，.ssh里的authorized_keys文件也做相同的处理，这样改了之后终于可以验证成功了，并且不用输入密码了。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;整个搭建过程用了将近一天的时间，虽然过程有些曲折，但是最终还是成功了，而且这个过程中我也学到了不少的东西，更加深入的了解了ssh服务。&lt;/p&gt;
&lt;p&gt;希望这篇文章能对大家在搭建git服务器时有所帮助。&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/wave_1102/article/details/47779401&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在CentOS下搭建自己的Git服务器&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/jacky0922/article/details/17999271&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ssh无密码登录认证失败&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/lansesl2008/article/details/16113193&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sshd_config配置详解&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.androiddev.net/ssh-public-key-authentication-error/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一个SSH 公钥登录失败的问题及解决经验&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.linuxquestions.org/questions/linux-newbie-8/permission-denied-publickey-gssapi-keyex-gssapi-with-mic-password-4175413607/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Permission denied (publickey, gssapi-keyex,gssapi-with-mic,password)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://flysnowxf.iteye.com/blog/1567570&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ssh使用公钥授权不通过的问题解决&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://zengrong.net/post/1544.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;修改了SSH默认端口之后，如何配置git？&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;昨天尝试了在自己的VPS上搭建一个git服务器，中间踩了很多坑，下面是我整个搭建的过程。&lt;/p&gt;
&lt;h2 id=&quot;具体流程&quot;&gt;&lt;a href=&quot;#具体流程&quot; class=&quot;headerlink&quot; title=&quot;具体流程&quot;&gt;&lt;/a&gt;具体流程&lt;/h2&gt;&lt;h3 id=&quot;第一步：安
    
    </summary>
    
      <category term="Git" scheme="http://liujinlongxa.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://liujinlongxa.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>使用HTTPS方法clone下来的Git仓库push时报错</title>
    <link href="http://liujinlongxa.com/2016/07/30/%E4%BD%BF%E7%94%A8HTTPS%E6%96%B9%E6%B3%95clone%E4%B8%8B%E6%9D%A5%E7%9A%84Git%E4%BB%93%E5%BA%93push%E6%97%B6%E6%8A%A5%E9%94%99/"/>
    <id>http://liujinlongxa.com/2016/07/30/使用HTTPS方法clone下来的Git仓库push时报错/</id>
    <published>2016-07-30T03:22:55.000Z</published>
    <updated>2016-08-14T07:42:31.000Z</updated>
    
    <content type="html">&lt;p&gt;昨天在使用Git时遇到了一个问题，今天记录一下。&lt;/p&gt;
&lt;p&gt;一般我在克隆Github的项目时都是使用ssh的方式进行的，这样只要你的ssh-key配置正确，就没有问题。昨天心血来潮试了一下https克隆了一个项目，修改完后，准备push的时候需要了问题，问题如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;remote: Permission to liujinlongxa/Spoon-Knife.git denied to xxxx.&lt;br&gt;fatal: unable to access ‘&lt;a href=&quot;https://github.com/liujinlongxa/Spoon-Knife.git/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/liujinlongxa/Spoon-Knife.git/&lt;/a&gt;‘: The requested URL returned error: 403&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决方案是修改git的配置文件，&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vim .git/config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[remote “origin”]&lt;br&gt;        url = &lt;a href=&quot;https://github.com/liujinlongxa/Spoon-Knife.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/liujinlongxa/Spoon-Knife.git&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;改为&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[remote “origin”]&lt;br&gt;        url = &lt;a href=&quot;https://liujinlongxa@github.com/liujinlongxa/Spoon-Knife.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://liujinlongxa@github.com/liujinlongxa/Spoon-Knife.git&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即前面加上用户名，这样就可以正常的push，或者直接运行命令&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git config --local remote.origin.url https://liujinlongxa@github.com/liujinlongxa/Spoon-Knife.git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以达到相同的效果。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;昨天在使用Git时遇到了一个问题，今天记录一下。&lt;/p&gt;
&lt;p&gt;一般我在克隆Github的项目时都是使用ssh的方式进行的，这样只要你的ssh-key配置正确，就没有问题。昨天心血来潮试了一下https克隆了一个项目，修改完后，准备push的时候需要了问题，问题如下：&lt;/p
    
    </summary>
    
      <category term="Git" scheme="http://liujinlongxa.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://liujinlongxa.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>UIButton设置标题无效</title>
    <link href="http://liujinlongxa.com/2016/07/26/UIButton%E8%AE%BE%E7%BD%AE%E6%A0%87%E9%A2%98%E6%97%A0%E6%95%88/"/>
    <id>http://liujinlongxa.com/2016/07/26/UIButton设置标题无效/</id>
    <published>2016-07-26T15:19:02.000Z</published>
    <updated>2016-08-12T15:20:04.000Z</updated>
    
    <content type="html">&lt;p&gt;UIButton在使用&lt;code&gt;setAttributedTitle:forState:&lt;/code&gt;设置了富文本标题后，是使用&lt;code&gt;setTitle:forState:&lt;/code&gt;设置标题是没有效果的，解决方案是先把富文本去掉，然后再使用&lt;code&gt;setTitle:forState:&lt;/code&gt;设置标题，或者直接使用&lt;code&gt;setAttributedTitle:forState:&lt;/code&gt;重新设置不带属性的富文本。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.payButton setAttributedTitle:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; forState:&lt;span class=&quot;built_in&quot;&gt;UIControlStateNormal&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.payButton setTitle:&lt;span class=&quot;string&quot;&gt;@&quot;余额不足，去充值&quot;&lt;/span&gt; forState:&lt;span class=&quot;built_in&quot;&gt;UIControlStateNormal&lt;/span&gt;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;UIButton在使用&lt;code&gt;setAttributedTitle:forState:&lt;/code&gt;设置了富文本标题后，是使用&lt;code&gt;setTitle:forState:&lt;/code&gt;设置标题是没有效果的，解决方案是先把富文本去掉，然后再使用&lt;code&gt;setTit
    
    </summary>
    
      <category term="iOS Tips" scheme="http://liujinlongxa.com/categories/iOS-Tips/"/>
    
    
      <category term="UIButton" scheme="http://liujinlongxa.com/tags/UIButton/"/>
    
  </entry>
  
  <entry>
    <title>深入理解CoreAnimation的fillMode和isRemovedOnCompletion</title>
    <link href="http://liujinlongxa.com/2016/07/10/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3CoreAnimation%E7%9A%84fillMode%E5%92%8CisRemovedOnCompletion/"/>
    <id>http://liujinlongxa.com/2016/07/10/深入理解CoreAnimation的fillMode和isRemovedOnCompletion/</id>
    <published>2016-07-10T06:34:06.000Z</published>
    <updated>2016-08-12T15:20:04.000Z</updated>
    
    <content type="html">&lt;p&gt;一般在使用CoreAnimation写动画是，在定义CAAnimation时，都要加入如下两句来防止动画完成后视图的位置又还原成了原来的位置。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;animation.fillMode = kCAFillModeBoth&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;animation.isRemovedOnCompletion = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;很少有文章能详细说明这两个属性的作用，今天我们就来深究一下这两个属性。&lt;/p&gt;
&lt;h2 id=&quot;fillMode&quot;&gt;&lt;a href=&quot;#fillMode&quot; class=&quot;headerlink&quot; title=&quot;fillMode&quot;&gt;&lt;/a&gt;fillMode&lt;/h2&gt;&lt;p&gt;fillMode是一个枚举值，用于表示动画在开始和结束时的状态，这样说可能不太好理解，直接看例子比较直观。&lt;/p&gt;
&lt;h3 id=&quot;kCAFillModeRemoved&quot;&gt;&lt;a href=&quot;#kCAFillModeRemoved&quot; class=&quot;headerlink&quot; title=&quot;kCAFillModeRemoved&quot;&gt;&lt;/a&gt;kCAFillModeRemoved&lt;/h3&gt;&lt;p&gt;这个是fillMode的默认值，表示在到达beginTime时才显示动画的第一帧，动画结束时，删除CALayer做的变化&lt;/p&gt;
&lt;p&gt;实例代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;touchesBegan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; move = &lt;span class=&quot;type&quot;&gt;CABasicAnimation&lt;/span&gt;(keyPath: &lt;span class=&quot;string&quot;&gt;&quot;position.y&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fromValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.toValue = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.duration = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.beginTime = &lt;span class=&quot;type&quot;&gt;CACurrentMediaTime&lt;/span&gt;() + &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fillMode = kCAFillModeRemoved&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.add(move, forKey: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码中，我们将一个View的y坐标从100移动到500，历时1s，注意开始时间我设定为了&lt;code&gt;CACurrentMediaTime() + 2.0&lt;/code&gt;，即添加动画2s后才开始执行动画，这样才能看到效果。运行结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/kCAFillModeRemoved.gif&quot; alt=&quot;kCAFillModeRemoved&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，在鼠标点击触发后，2s之后myView才移动到了动画的初始位置100开始执行动画，并且在动画结束后视图又立刻恢复到原来的位置。&lt;/p&gt;
&lt;h3 id=&quot;kCAFillModeBackwards&quot;&gt;&lt;a href=&quot;#kCAFillModeBackwards&quot; class=&quot;headerlink&quot; title=&quot;kCAFillModeBackwards&quot;&gt;&lt;/a&gt;kCAFillModeBackwards&lt;/h3&gt;&lt;p&gt;这个值表示无论是否到达beginTime，动画开始后，立刻显示动画的第一帧，修改代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;touchesBegan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(touches: Set&amp;lt;UITouch&amp;gt;, withEvent event: UIEvent?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; move = &lt;span class=&quot;type&quot;&gt;CABasicAnimation&lt;/span&gt;(keyPath: &lt;span class=&quot;string&quot;&gt;&quot;position.y&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fromValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.toValue = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.duration = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.beginTime = &lt;span class=&quot;type&quot;&gt;CACurrentMediaTime&lt;/span&gt;() + &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fillMode = kCAFillModeBackwards&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.add(move, forKey: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/kCAFillModeBackwards.gif&quot; alt=&quot;kCAFillModeBackwards&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，鼠标点击后，myView立刻移动到了动画的初始位置100，然后2s后开始执行动画。&lt;/p&gt;
&lt;h3 id=&quot;kCAFillModeForwards&quot;&gt;&lt;a href=&quot;#kCAFillModeForwards&quot; class=&quot;headerlink&quot; title=&quot;kCAFillModeForwards&quot;&gt;&lt;/a&gt;kCAFillModeForwards&lt;/h3&gt;&lt;p&gt;这个值表示在到达beginTime时显示动画的第一帧，在动画结束时，保持动画最后一帧的状态，直到动画被删除，修改代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;touchesBegan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; touches: Set&amp;lt;UITouch&amp;gt;, with event: UIEvent?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; move = &lt;span class=&quot;type&quot;&gt;CABasicAnimation&lt;/span&gt;(keyPath: &lt;span class=&quot;string&quot;&gt;&quot;position.y&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fromValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.toValue = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.duration = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.beginTime = &lt;span class=&quot;type&quot;&gt;CACurrentMediaTime&lt;/span&gt;() + &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fillMode = kCAFillModeForwards;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.isRemovedOnCompletion = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.add(move, forKey: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;animationDidStop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; anim: CAAnimation, finished flag: Bool)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;DispatchQueue&lt;/span&gt;.main.after(when: .now() + &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.removeAllAnimations()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;代码中添加了&lt;code&gt;move.isRemovedOnCompletion = false&lt;/code&gt;，即动画执行完后不立刻删除动画，默认情况下，动画执行完后会立刻删除动画。&lt;code&gt;isRemovedOnCompletion&lt;/code&gt;属性设置为false后，就不会立刻删除。然后我们还添加了&lt;code&gt;animationDidStop&lt;/code&gt;方法，这个是&lt;code&gt;CABasicAnimation&lt;/code&gt;的代理方法，在动画执行结束时会被调用。我们在这个方法里延时3s删除动画。运行效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/kCAFillModeForwards.gif&quot; alt=&quot;kCAFillModeForwards&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，鼠标点击后，myView等了2s才移动到动画初始位置，动画结束后，等待了3s，myView才恢复到原来的位置。也就是动画结束后会保持最后一帧的状态，直到动画被删除掉。&lt;/p&gt;
&lt;h3 id=&quot;kCAFillModeBoth&quot;&gt;&lt;a href=&quot;#kCAFillModeBoth&quot; class=&quot;headerlink&quot; title=&quot;kCAFillModeBoth&quot;&gt;&lt;/a&gt;kCAFillModeBoth&lt;/h3&gt;&lt;p&gt;这个值相当于kCAFillModeBackwards与kCAFillModeForwards的共同合集，即无论是否到达beginTime，动画开始后，立刻显示动画的第一帧，并且在动画结束时保持最后一帧的状态，直到动画被删除。修改代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;touchesBegan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; touches: Set&amp;lt;UITouch&amp;gt;, with event: UIEvent?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; move = &lt;span class=&quot;type&quot;&gt;CABasicAnimation&lt;/span&gt;(keyPath: &lt;span class=&quot;string&quot;&gt;&quot;position.y&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fromValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.toValue = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.duration = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.beginTime = &lt;span class=&quot;type&quot;&gt;CACurrentMediaTime&lt;/span&gt;() + &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fillMode = kCAFillModeBoth;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.isRemovedOnCompletion = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.add(move, forKey: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;animationDidStop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; anim: CAAnimation, finished flag: Bool)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;DispatchQueue&lt;/span&gt;.main.after(when: .now() + &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.removeAllAnimations()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/kCAFillModeBoth.gif&quot; alt=&quot;kCAFillModeBoth&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，鼠标点击后，myView立刻移动到了动画的初始位置，然后动画结束后，等待了3s，myView才恢复到原来的位置。&lt;/p&gt;
&lt;h2 id=&quot;更进一步的思考&quot;&gt;&lt;a href=&quot;#更进一步的思考&quot; class=&quot;headerlink&quot; title=&quot;更进一步的思考&quot;&gt;&lt;/a&gt;更进一步的思考&lt;/h2&gt;&lt;p&gt;以上就是我对fillMode的一个探究，下面再回到文章开头的那段代码&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;animation.fillMode = kCAFillModeBoth&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;animation.isRemovedOnCompletion = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这时，就很明白了，设置fillMode为&lt;code&gt;kCAFillModeBoth&lt;/code&gt;，可以使视图在动画结束时，仍然停留在动画结束的位置，直到动画被删除。设置&lt;code&gt;isRemovedOnCompletion&lt;/code&gt;为false，可以使动画在结束后不被删除，这样视图就会永远停留在动画结束的位置。&lt;/p&gt;
&lt;p&gt;乍一看没什么问题，但仔细想想还是觉得有点奇怪，动画已经结束了为什么不删除，还占着内存。如果动画少还好，如果动画非常多，每个动画执行完了都不删除的话，那内存岂不是会爆掉，这是不能接受的。有没有办法能够既让视图停留在动画结束的位置，又能在动画结束后删除动画呢？&lt;/p&gt;
&lt;p&gt;当然有，直接上代码：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;touchesBegan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; touches: Set&amp;lt;UITouch&amp;gt;, with event: UIEvent?)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; move = &lt;span class=&quot;type&quot;&gt;CABasicAnimation&lt;/span&gt;(keyPath: &lt;span class=&quot;string&quot;&gt;&quot;position.y&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fromValue = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.toValue = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.duration = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.beginTime = &lt;span class=&quot;type&quot;&gt;CACurrentMediaTime&lt;/span&gt;() + &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.fillMode = kCAFillModeBoth;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    move.delegate = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.add(move, forKey: &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.myView.layer.position.y = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决方法就是在视图添加动画后，手动修改视图的位置为动画结束后的最终位置，这样动画结束后，动画就会被删除并且视图会停留在动画结束时的位置。&lt;/p&gt;
&lt;p&gt;注意：这里应该使用layer的position，不能直接修改UIView的frame，否则动画效果会不正确。&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.raywenderlich.com/store/ios-animations-by-tutorials&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS Animations by Tutorials&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一般在使用CoreAnimation写动画是，在定义CAAnimation时，都要加入如下两句来防止动画完成后视图的位置又还原成了原来的位置。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
    
    </summary>
    
      <category term="iOS开发" scheme="http://liujinlongxa.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="CoreAnimation" scheme="http://liujinlongxa.com/tags/CoreAnimation/"/>
    
  </entry>
  
  <entry>
    <title>用XCode8打开Xib后项目不能在XCode7上运行</title>
    <link href="http://liujinlongxa.com/2016/07/03/%E7%94%A8XCode8%E6%89%93%E5%BC%80Xib%E5%90%8E%E9%A1%B9%E7%9B%AE%E4%B8%8D%E8%83%BD%E5%9C%A8XCode7%E4%B8%8A%E8%BF%90%E8%A1%8C/"/>
    <id>http://liujinlongxa.com/2016/07/03/用XCode8打开Xib后项目不能在XCode7上运行/</id>
    <published>2016-07-03T10:56:06.000Z</published>
    <updated>2016-08-12T15:20:04.000Z</updated>
    
    <content type="html">&lt;p&gt;可以设置xib以Xcode7.x的方法打开，参考如下&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/37851459/the-document-main-storyboard-requires-xcode-8-0-or-later&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The document Main.storyboard requires Xcode 8.0 or later&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;可以设置xib以Xcode7.x的方法打开，参考如下&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/37851459/the-document-main-storyboard-requires-xcode-8-0-or
    
    </summary>
    
      <category term="iOS Tips" scheme="http://liujinlongxa.com/categories/iOS-Tips/"/>
    
    
      <category term="其他" scheme="http://liujinlongxa.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>Could not load the xxx image referenced from a nib in the bundle with identifier xxxx问题</title>
    <link href="http://liujinlongxa.com/2016/07/03/Could-not-load-the-xxx-image-referenced-from-a-nib-in-the-bundle-with-identifier-xxxx%E9%97%AE%E9%A2%98/"/>
    <id>http://liujinlongxa.com/2016/07/03/Could-not-load-the-xxx-image-referenced-from-a-nib-in-the-bundle-with-identifier-xxxx问题/</id>
    <published>2016-07-03T10:51:49.000Z</published>
    <updated>2016-08-12T15:20:04.000Z</updated>
    
    <content type="html">&lt;p&gt;出现在非retina的屏幕上，不能正确加载xib上的图片，只能通过代码重新设置图片。还没有找到其他解决办法。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;出现在非retina的屏幕上，不能正确加载xib上的图片，只能通过代码重新设置图片。还没有找到其他解决办法。&lt;/p&gt;

    
    </summary>
    
      <category term="iOS Tips" scheme="http://liujinlongxa.com/categories/iOS-Tips/"/>
    
    
      <category term="其他" scheme="http://liujinlongxa.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>设置富文本字间距，文字不能居中对齐</title>
    <link href="http://liujinlongxa.com/2016/07/03/%E8%AE%BE%E7%BD%AE%E5%AF%8C%E6%96%87%E6%9C%AC%E5%AD%97%E9%97%B4%E8%B7%9D%EF%BC%8C%E6%96%87%E5%AD%97%E4%B8%8D%E8%83%BD%E5%B1%85%E4%B8%AD%E5%AF%B9%E9%BD%90/"/>
    <id>http://liujinlongxa.com/2016/07/03/设置富文本字间距，文字不能居中对齐/</id>
    <published>2016-07-03T10:40:19.000Z</published>
    <updated>2016-08-12T15:20:04.000Z</updated>
    
    <content type="html">&lt;p&gt;最近有一个需求，需要设置一个UILabel的字间距，我马上就想到了富文本，于是就写了下面的代码&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.text;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *attribute = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSKernAttributeName&lt;/span&gt;:@(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;built_in&quot;&gt;NSFontAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; systemFontOfSize:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;]&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attStr = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc] initWithString:str attributes:attribute];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.attributedText = attStr;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中NSKernAttributeName属性就是设置文字的字间距。但是，现在就有一个问题，设置字间距后，原本居中显示的文字，不能居中显示了。&lt;/p&gt;
&lt;p&gt;这是我设置字间距之前的label&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/3cba47225e6b1a02cfad6885a67d83ed.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;这是我设置了字间距后的label&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/424954a63f3e38514b84ab7277269336.png&quot; alt=&quot;2&quot;&gt;&lt;/p&gt;
&lt;p&gt;“你”字距左边距明显要比”鸿”字的右边距要大。&lt;/p&gt;
&lt;p&gt;经过一阵Google，在StackOverflow上找到了相同的问题，链接是&lt;a href=&quot;http://stackoverflow.com/questions/23741850/nsstring-drawinrectwithattributes-not-correctly-centered-when-using-nskernattr&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stackoverflow.com/questions/23741850/nsstring-drawinrectwithattributes-not-correctly-centered-when-using-nskernattr&lt;/a&gt;，根据问题回答里的做法，我把代码做了修改，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.text;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; *mutAttStr = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; alloc] initWithString:str];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[mutAttStr addAttribute:&lt;span class=&quot;built_in&quot;&gt;NSKernAttributeName&lt;/span&gt; value:@(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) range:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, str.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[mutAttStr addAttribute:&lt;span class=&quot;built_in&quot;&gt;NSFontAttributeName&lt;/span&gt; value:[&lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; systemFontOfSize:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;] range:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, str.length)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.attributedText = [mutAttStr &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改后效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xn88v.com1.z0.glb.clouddn.com/35b1f58bf08aa3dc7b827edb1da01e80.png&quot; alt=&quot;3&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近有一个需求，需要设置一个UILabel的字间距，我马上就想到了富文本，于是就写了下面的代码&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;l
    
    </summary>
    
      <category term="iOS Tips" scheme="http://liujinlongxa.com/categories/iOS-Tips/"/>
    
    
      <category term="UILabel" scheme="http://liujinlongxa.com/tags/UILabel/"/>
    
      <category term="NSAttributedString" scheme="http://liujinlongxa.com/tags/NSAttributedString/"/>
    
  </entry>
  
</feed>
